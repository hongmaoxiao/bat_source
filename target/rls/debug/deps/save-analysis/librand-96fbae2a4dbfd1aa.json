{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rand","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","-C","metadata=96fbae2a4dbfd1aa","-C","extra-filename=-96fbae2a4dbfd1aa","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","libc=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/liblibc-45456c704780836c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/librand-96fbae2a4dbfd1aa.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[12935295990718815645,1114038091553806569]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","num":16,"id":{"name":"libc","disambiguator":[8000104344433599533,15219794654319678357]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":472,"byte_end":39121,"line_start":11,"line_end":1214,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9794,"byte_end":9803,"line_start":260,"line_end":260,"column_start":17,"column_end":26},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9839,"byte_end":9844,"line_start":261,"line_end":261,"column_start":35,"column_end":40},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9878,"byte_end":9886,"line_start":264,"line_end":264,"column_start":17,"column_end":25},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9888,"byte_end":9898,"line_start":264,"line_end":264,"column_start":27,"column_end":37},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9917,"byte_end":9926,"line_start":265,"line_end":265,"column_start":17,"column_end":26},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9942,"byte_end":9953,"line_start":266,"line_end":266,"column_start":15,"column_end":26},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40089,"byte_end":40094,"line_start":24,"line_end":24,"column_start":22,"column_end":27},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40140,"byte_end":40145,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40147,"byte_end":40157,"line_start":26,"line_end":26,"column_start":30,"column_end":40},"alias_span":null,"name":"ChiSquared","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40159,"byte_end":40166,"line_start":26,"line_end":26,"column_start":42,"column_end":49},"alias_span":null,"name":"FisherF","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":839},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40168,"byte_end":40176,"line_start":26,"line_end":26,"column_start":51,"column_end":59},"alias_span":null,"name":"StudentT","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40224,"byte_end":40230,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Normal","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40232,"byte_end":40241,"line_start":28,"line_end":28,"column_start":32,"column_end":41},"alias_span":null,"name":"LogNormal","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":878},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40293,"byte_end":40296,"line_start":30,"line_end":30,"column_start":28,"column_end":31},"alias_span":null,"name":"Exp","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10581,"byte_end":10590,"line_start":288,"line_end":288,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":0,"index":1316},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10672,"byte_end":10680,"line_start":292,"line_end":292,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10682,"byte_end":10692,"line_start":292,"line_end":292,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":417}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/mod.rs","byte_start":187696,"byte_end":187705,"line_start":48,"line_end":48,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":475}},{"kind":"Use","ref_id":{"krate":0,"index":1340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/mod.rs","byte_start":187797,"byte_end":187808,"line_start":51,"line_end":51,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":475}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":472,"byte_end":39121,"line_start":11,"line_end":1214,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":229},{"krate":0,"index":293},{"krate":0,"index":345},{"krate":0,"index":362},{"krate":0,"index":393},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":475},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":654},{"krate":0,"index":662},{"krate":0,"index":1351},{"krate":0,"index":1357},{"krate":0,"index":669},{"krate":0,"index":1362},{"krate":0,"index":1366},{"krate":0,"index":675},{"krate":0,"index":681},{"krate":0,"index":1370},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1390},{"krate":0,"index":1388},{"krate":0,"index":1386},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":694},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":1395},{"krate":0,"index":1399},{"krate":0,"index":1397},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":707}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"/ Utilities for random number generation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The key functions are `random()` and `Rng::gen()`. These are polymorphic and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":519,"byte_end":599,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ so can be used to generate any type that implements `Rand`. Type inference","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":600,"byte_end":678,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ means that often a simple call to `rand::random()` or `rng.gen()` will","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":679,"byte_end":753,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ suffice, but sometimes an annotation is required, e.g.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":754,"byte_end":812,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/ `rand::random::<f64>()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":813,"byte_end":841,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":842,"byte_end":845,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See the `distributions` submodule for sampling random numbers from","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":846,"byte_end":916,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ distributions like normal and exponential.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":917,"byte_end":963,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":964,"byte_end":967,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":968,"byte_end":979,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":980,"byte_end":983,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate is [on crates.io](https://crates.io/crates/rand) and can be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":984,"byte_end":1058,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ used by adding `rand` to the dependencies in your project's `Cargo.toml`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1059,"byte_end":1136,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1137,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1141,"byte_end":1152,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1153,"byte_end":1171,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ rand = \"0.4\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1172,"byte_end":1188,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1189,"byte_end":1196,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1197,"byte_end":1200,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ and this to your crate root:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1201,"byte_end":1233,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1234,"byte_end":1237,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1238,"byte_end":1249,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1250,"byte_end":1272,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1273,"byte_end":1280,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Thread-local RNG","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1285,"byte_end":1307,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1308,"byte_end":1311,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ There is built-in support for a RNG associated with each thread stored","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1312,"byte_end":1386,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ in thread-local storage. This RNG can be accessed via `thread_rng`, or","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1387,"byte_end":1461,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ used implicitly via `random`. This RNG is normally randomly seeded","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1462,"byte_end":1532,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ from an operating-system source of randomness, e.g. `/dev/urandom` on","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1533,"byte_end":1606,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ Unix systems, and will automatically reseed itself from this source","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1607,"byte_end":1678,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ after generating 32 KiB of random data.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1679,"byte_end":1722,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1723,"byte_end":1726,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Cryptographic security","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1727,"byte_end":1755,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1756,"byte_end":1759,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ An application that requires an entropy source for cryptographic purposes","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1760,"byte_end":1837,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ must use `OsRng`, which reads randomness from the source that the operating","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1838,"byte_end":1917,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ system provides (e.g. `/dev/urandom` on Unixes or `CryptGenRandom()` on","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1918,"byte_end":1993,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ Windows).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":1994,"byte_end":2007,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/ The other random number generators provided by this module are not suitable","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2008,"byte_end":2087,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ for such purposes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2088,"byte_end":2110,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2111,"byte_end":2114,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ *Note*: many Unix systems provide `/dev/random` as well as `/dev/urandom`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2115,"byte_end":2193,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ This module uses `/dev/urandom` for the following reasons:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2194,"byte_end":2256,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2257,"byte_end":2260,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ -   On Linux, `/dev/random` may block if entropy pool is empty;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2261,"byte_end":2328,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/     `/dev/urandom` will not block.  This does not mean that `/dev/random`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2329,"byte_end":2406,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/     provides better output than `/dev/urandom`; the kernel internally runs a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2407,"byte_end":2487,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/     cryptographically secure pseudorandom number generator (CSPRNG) based on","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2488,"byte_end":2568,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/     entropy pool for random number generation, so the \"quality\" of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2569,"byte_end":2639,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/     `/dev/random` is not better than `/dev/urandom` in most cases.  However,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2640,"byte_end":2720,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/     this means that `/dev/urandom` can yield somewhat predictable randomness","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2721,"byte_end":2801,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     if the entropy pool is very small, such as immediately after first","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2802,"byte_end":2876,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/     booting.  Linux 3.17 added the `getrandom(2)` system call which solves","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2877,"byte_end":2955,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/     the issue: it blocks if entropy pool is not initialized yet, but it does","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":2956,"byte_end":3036,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/     not block once initialized.  `OsRng` tries to use `getrandom(2)` if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3037,"byte_end":3112,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/     available, and use `/dev/urandom` fallback if not.  If an application","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3113,"byte_end":3190,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     does not have `getrandom` and likely to be run soon after first booting,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3191,"byte_end":3271,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/     or on a system with very few entropy sources, one should consider using","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3272,"byte_end":3351,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     `/dev/random` via `ReadRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3352,"byte_end":3388,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"/ -   On some systems (e.g. FreeBSD, OpenBSD and Mac OS X) there is no","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3389,"byte_end":3461,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/     difference between the two sources. (Also note that, on some systems","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3462,"byte_end":3538,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/     e.g.  FreeBSD, both `/dev/random` and `/dev/urandom` may block once if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3539,"byte_end":3617,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/     the CSPRNG has not seeded yet.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3618,"byte_end":3657,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3658,"byte_end":3661,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3662,"byte_end":3676,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3677,"byte_end":3680,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3681,"byte_end":3692,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3693,"byte_end":3711,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3712,"byte_end":3715,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3716,"byte_end":3753,"line_start":84,"line_end":84,"column_start":1,"column_end":38}},{"value":"/ if rng.gen() { // random bool","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3754,"byte_end":3787,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/     println!(\"i32: {}, u32: {}\", rng.gen::<i32>(), rng.gen::<u32>())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3788,"byte_end":3860,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3861,"byte_end":3866,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3867,"byte_end":3874,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3879,"byte_end":3890,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ let tuple = rand::random::<(f64, char)>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3891,"byte_end":3937,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ println!(\"{:?}\", tuple)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3938,"byte_end":3965,"line_start":92,"line_end":92,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3966,"byte_end":3973,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3974,"byte_end":3977,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Monte Carlo estimation of π","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":3978,"byte_end":4013,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4014,"byte_end":4017,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For this example, imagine we have a square with sides of length 2 and a unit","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4018,"byte_end":4098,"line_start":97,"line_end":97,"column_start":1,"column_end":81}},{"value":"/ circle, both centered at the origin. Since the area of a unit circle is π,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4099,"byte_end":4178,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ we have:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4179,"byte_end":4191,"line_start":99,"line_end":99,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4192,"byte_end":4195,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4196,"byte_end":4207,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/     (area of unit circle) / (area of square) = π / 4","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4208,"byte_end":4265,"line_start":102,"line_end":102,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4266,"byte_end":4273,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4274,"byte_end":4277,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ So if we sample many points randomly from the square, roughly π / 4 of them","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4278,"byte_end":4358,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ should be inside the circle.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4359,"byte_end":4391,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4392,"byte_end":4395,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ We can use the above fact to estimate the value of π: pick many points in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4396,"byte_end":4474,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ the square at random, calculate the fraction that fall within the circle,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4475,"byte_end":4552,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ and multiply this fraction by 4.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4553,"byte_end":4589,"line_start":110,"line_end":110,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4590,"byte_end":4593,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4594,"byte_end":4601,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4602,"byte_end":4658,"line_start":113,"line_end":113,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4659,"byte_end":4662,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4663,"byte_end":4678,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/    let between = Range::new(-1f64, 1.);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4679,"byte_end":4722,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/    let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4723,"byte_end":4763,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4764,"byte_end":4767,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/    let total = 1_000_000;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4768,"byte_end":4797,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/    let mut in_circle = 0;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4798,"byte_end":4827,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4828,"byte_end":4831,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/    for _ in 0..total {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4832,"byte_end":4858,"line_start":122,"line_end":122,"column_start":1,"column_end":27}},{"value":"/        let a = between.ind_sample(&mut rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4859,"byte_end":4907,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/        let b = between.ind_sample(&mut rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4908,"byte_end":4956,"line_start":124,"line_end":124,"column_start":1,"column_end":49}},{"value":"/        if a*a + b*b <= 1. {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4957,"byte_end":4988,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/            in_circle += 1;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":4989,"byte_end":5019,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/        }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5020,"byte_end":5032,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/    }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5033,"byte_end":5041,"line_start":128,"line_end":128,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5042,"byte_end":5045,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/    // prints something close to 3.14159...","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5046,"byte_end":5092,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/    println!(\"{}\", 4. * (in_circle as f64) / (total as f64));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5093,"byte_end":5157,"line_start":131,"line_end":131,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5158,"byte_end":5163,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5164,"byte_end":5171,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5172,"byte_end":5175,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Monty Hall Problem","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5176,"byte_end":5201,"line_start":135,"line_end":135,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5202,"byte_end":5205,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is a simulation of the [Monty Hall Problem][]:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5206,"byte_end":5261,"line_start":137,"line_end":137,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5262,"byte_end":5265,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ > Suppose you're on a game show, and you're given the choice of three doors:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5266,"byte_end":5346,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ > Behind one door is a car; behind the others, goats. You pick a door, say","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5347,"byte_end":5425,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ > No. 1, and the host, who knows what's behind the doors, opens another","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5426,"byte_end":5501,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/ > door, say No. 3, which has a goat. He then says to you, \"Do you want to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5502,"byte_end":5579,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ > pick door No. 2?\" Is it to your advantage to switch your choice?","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5580,"byte_end":5650,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5651,"byte_end":5654,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The rather unintuitive answer is that you will have a 2/3 chance of winning","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5655,"byte_end":5734,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ if you switch and a 1/3 chance of winning if you don't, so it's better to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5735,"byte_end":5812,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ switch.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5813,"byte_end":5824,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5825,"byte_end":5828,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This program will simulate the game show and with large enough simulation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5829,"byte_end":5906,"line_start":149,"line_end":149,"column_start":1,"column_end":78}},{"value":"/ steps it will indeed confirm that it is better to switch.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5907,"byte_end":5968,"line_start":150,"line_end":150,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5969,"byte_end":5972,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [Monty Hall Problem]: http://en.wikipedia.org/wiki/Monty_Hall_problem","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":5973,"byte_end":6046,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6047,"byte_end":6050,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6051,"byte_end":6058,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6059,"byte_end":6077,"line_start":155,"line_end":155,"column_start":1,"column_end":19}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6078,"byte_end":6134,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6135,"byte_end":6138,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ struct SimulationResult {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6139,"byte_end":6168,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/     win: bool,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6169,"byte_end":6187,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/     switch: bool,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6188,"byte_end":6209,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6210,"byte_end":6215,"line_start":161,"line_end":161,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6216,"byte_end":6219,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Run a single simulation of the Monty Hall problem.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6220,"byte_end":6277,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/ fn simulate<R: Rng>(random_door: &Range<u32>, rng: &mut R)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6278,"byte_end":6340,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/                     -> SimulationResult {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6341,"byte_end":6386,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/     let car = random_door.ind_sample(rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6387,"byte_end":6433,"line_start":166,"line_end":166,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6434,"byte_end":6437,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     // This is our initial choice","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6438,"byte_end":6475,"line_start":168,"line_end":168,"column_start":1,"column_end":38}},{"value":"/     let mut choice = random_door.ind_sample(rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6476,"byte_end":6529,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6530,"byte_end":6533,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     // The game host opens a door","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6534,"byte_end":6571,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/     let open = game_host_open(car, choice, rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6572,"byte_end":6624,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6625,"byte_end":6628,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/     // Shall we switch?","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6629,"byte_end":6656,"line_start":174,"line_end":174,"column_start":1,"column_end":28}},{"value":"/     let switch = rng.gen();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6657,"byte_end":6688,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/     if switch {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6689,"byte_end":6708,"line_start":176,"line_end":176,"column_start":1,"column_end":20}},{"value":"/         choice = switch_door(choice, open);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6709,"byte_end":6756,"line_start":177,"line_end":177,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6757,"byte_end":6766,"line_start":178,"line_end":178,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6767,"byte_end":6770,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     SimulationResult { win: choice == car, switch: switch }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6771,"byte_end":6834,"line_start":180,"line_end":180,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6835,"byte_end":6840,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6841,"byte_end":6844,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ // Returns the door the game host opens given our choice and knowledge of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6845,"byte_end":6922,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/ // where the car is. The game host will never open the door with the car.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":6923,"byte_end":7000,"line_start":184,"line_end":184,"column_start":1,"column_end":78}},{"value":"/ fn game_host_open<R: Rng>(car: u32, choice: u32, rng: &mut R) -> u32 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7001,"byte_end":7075,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/     let choices = free_doors(&[car, choice]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7076,"byte_end":7125,"line_start":186,"line_end":186,"column_start":1,"column_end":50}},{"value":"/     rand::seq::sample_slice(rng, &choices, 1)[0]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7126,"byte_end":7178,"line_start":187,"line_end":187,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7179,"byte_end":7184,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7185,"byte_end":7188,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // Returns the door we switch to, given our current choice and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7189,"byte_end":7255,"line_start":190,"line_end":190,"column_start":1,"column_end":67}},{"value":"/ // the open door. There will only be one valid door.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7256,"byte_end":7312,"line_start":191,"line_end":191,"column_start":1,"column_end":57}},{"value":"/ fn switch_door(choice: u32, open: u32) -> u32 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7313,"byte_end":7364,"line_start":192,"line_end":192,"column_start":1,"column_end":52}},{"value":"/     free_doors(&[choice, open])[0]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7365,"byte_end":7403,"line_start":193,"line_end":193,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7404,"byte_end":7409,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7410,"byte_end":7413,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ fn free_doors(blocked: &[u32]) -> Vec<u32> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7414,"byte_end":7462,"line_start":196,"line_end":196,"column_start":1,"column_end":49}},{"value":"/     (0..3).filter(|x| !blocked.contains(x)).collect()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7463,"byte_end":7520,"line_start":197,"line_end":197,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7521,"byte_end":7526,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7527,"byte_end":7530,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7531,"byte_end":7546,"line_start":200,"line_end":200,"column_start":1,"column_end":16}},{"value":"/     // The estimation will be more accurate with more simulations","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7547,"byte_end":7616,"line_start":201,"line_end":201,"column_start":1,"column_end":70}},{"value":"/     let num_simulations = 10000;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7617,"byte_end":7653,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7654,"byte_end":7657,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7658,"byte_end":7699,"line_start":204,"line_end":204,"column_start":1,"column_end":42}},{"value":"/     let random_door = Range::new(0, 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7700,"byte_end":7743,"line_start":205,"line_end":205,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7744,"byte_end":7747,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/     let (mut switch_wins, mut switch_losses) = (0, 0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7748,"byte_end":7806,"line_start":207,"line_end":207,"column_start":1,"column_end":59}},{"value":"/     let (mut keep_wins, mut keep_losses) = (0, 0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7807,"byte_end":7861,"line_start":208,"line_end":208,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7862,"byte_end":7865,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/     println!(\"Running {} simulations...\", num_simulations);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7866,"byte_end":7929,"line_start":210,"line_end":210,"column_start":1,"column_end":64}},{"value":"/     for _ in 0..num_simulations {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7930,"byte_end":7967,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/         let result = simulate(&random_door, &mut rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":7968,"byte_end":8026,"line_start":212,"line_end":212,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8027,"byte_end":8030,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/         match (result.win, result.switch) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8031,"byte_end":8078,"line_start":214,"line_end":214,"column_start":1,"column_end":48}},{"value":"/             (true, true) => switch_wins += 1,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8079,"byte_end":8128,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/             (true, false) => keep_wins += 1,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8129,"byte_end":8177,"line_start":216,"line_end":216,"column_start":1,"column_end":49}},{"value":"/             (false, true) => switch_losses += 1,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8178,"byte_end":8230,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/             (false, false) => keep_losses += 1,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8231,"byte_end":8282,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8283,"byte_end":8296,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8297,"byte_end":8306,"line_start":220,"line_end":220,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8307,"byte_end":8310,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     let total_switches = switch_wins + switch_losses;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8311,"byte_end":8368,"line_start":222,"line_end":222,"column_start":1,"column_end":58}},{"value":"/     let total_keeps = keep_wins + keep_losses;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8369,"byte_end":8419,"line_start":223,"line_end":223,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8420,"byte_end":8423,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/     println!(\"Switched door {} times with {} wins and {} losses\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8424,"byte_end":8493,"line_start":225,"line_end":225,"column_start":1,"column_end":70}},{"value":"/              total_switches, switch_wins, switch_losses);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8494,"byte_end":8555,"line_start":226,"line_end":226,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8556,"byte_end":8559,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     println!(\"Kept our choice {} times with {} wins and {} losses\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8560,"byte_end":8631,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/              total_keeps, keep_wins, keep_losses);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8632,"byte_end":8686,"line_start":229,"line_end":229,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8687,"byte_end":8690,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/     // With a large number of simulations, the values should converge to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8691,"byte_end":8767,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/     // 0.667 and 0.333 respectively.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8768,"byte_end":8808,"line_start":232,"line_end":232,"column_start":1,"column_end":41}},{"value":"/     println!(\"Estimated chance to win if we switch: {}\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8809,"byte_end":8869,"line_start":233,"line_end":233,"column_start":1,"column_end":61}},{"value":"/              switch_wins as f32 / total_switches as f32);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8870,"byte_end":8931,"line_start":234,"line_end":234,"column_start":1,"column_end":62}},{"value":"/     println!(\"Estimated chance to win if we don't: {}\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8932,"byte_end":8991,"line_start":235,"line_end":235,"column_start":1,"column_end":60}},{"value":"/              keep_wins as f32 / total_keeps as f32);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":8992,"byte_end":9048,"line_start":236,"line_end":236,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9049,"byte_end":9054,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9055,"byte_end":9062,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":9268,"byte_end":9307,"line_start":244,"line_end":244,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":21},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":59},{"krate":0,"index":118},{"krate":0,"index":150},{"krate":0,"index":173},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":891},{"krate":0,"index":901},{"krate":0,"index":898},{"krate":0,"index":895},{"krate":0,"index":903},{"krate":0,"index":908},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":224}],"decl_id":null,"docs":" Sampling from random distributions.","sig":null,"attributes":[{"value":"/ Sampling from random distributions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39590,"byte_end":39629,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39630,"byte_end":39633,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is a generalization of `Rand` to allow parameters to control the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39634,"byte_end":39707,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ exact properties of the generated values, e.g. the mean and standard","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39708,"byte_end":39780,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ deviation of a normal distribution. The `Sample` trait is the most","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39781,"byte_end":39851,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ general, and allows for generating values that change some state","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39852,"byte_end":39920,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ internally. The `IndependentSample` trait is for generating values","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39921,"byte_end":39991,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ that do not need to record state.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":39992,"byte_end":40029,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"range","qualname":"::distributions::range","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":1457},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":712},{"krate":0,"index":722},{"krate":0,"index":720},{"krate":0,"index":717},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":725},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769}],"decl_id":null,"docs":" Generating numbers between two others.\n","sig":null,"attributes":[{"value":"/ Generating numbers between two others.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54124,"byte_end":54166,"line_start":11,"line_end":11,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55389,"byte_end":55394,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"Range","qualname":"::distributions::range::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[{"value":"/ Sample values uniformly between two bounds.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54323,"byte_end":54370,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54371,"byte_end":54374,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This gives a uniform distribution (assuming the RNG used to sample","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54375,"byte_end":54445,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ it is itself uniform & the `SampleRange` implementation for the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54446,"byte_end":54513,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ given type is correct), even for edge cases like `low = 0u8`,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54514,"byte_end":54579,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/ `high = 170u8`, for which a naive modulo operation would return","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54580,"byte_end":54647,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ numbers less than 85 with double the probability to those greater","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54648,"byte_end":54717,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ than 85.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54718,"byte_end":54730,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54731,"byte_end":54734,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Types should attempt to sample in `[low, high)`, i.e., not","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54735,"byte_end":54797,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ including `high`, but this may be very difficult. All the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54798,"byte_end":54859,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/ primitive integer types satisfy this property, and the float types","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54860,"byte_end":54930,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ normally satisfy it, but rounding may mean `high` can occur.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54931,"byte_end":54995,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":54996,"byte_end":54999,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55000,"byte_end":55013,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55014,"byte_end":55017,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55018,"byte_end":55029,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{IndependentSample, Range};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55030,"byte_end":55086,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55087,"byte_end":55090,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55091,"byte_end":55106,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     let between = Range::new(10, 10000);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55107,"byte_end":55151,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55152,"byte_end":55193,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/     let mut sum = 0;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55194,"byte_end":55218,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/     for _ in 0..1000 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55219,"byte_end":55245,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/         sum += between.ind_sample(&mut rng);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55246,"byte_end":55294,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55295,"byte_end":55304,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/     println!(\"{}\", sum);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55305,"byte_end":55333,"line_start":46,"line_end":46,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55334,"byte_end":55339,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55340,"byte_end":55347,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55618,"byte_end":55621,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<X>>::new","value":"pub fn new(X, X) -> Range<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Range` instance that samples uniformly from\n `[low, high)`. Panics if `low >= high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Range` instance that samples uniformly from","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55497,"byte_end":55558,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ `[low, high)`. Panics if `low >= high`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55563,"byte_end":55606,"line_start":58,"line_end":58,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56280,"byte_end":56291,"line_start":78,"line_end":78,"column_start":11,"column_end":22},"name":"SampleRange","qualname":"::distributions::range::SampleRange","value":"SampleRange: Sized","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":" The helper trait for types that have a sensible way to sample\n uniformly between two values. This should not be used directly,\n and is only to facilitate `Range`.\n","sig":null,"attributes":[{"value":"/ The helper trait for types that have a sensible way to sample","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56097,"byte_end":56162,"line_start":75,"line_end":75,"column_start":1,"column_end":66}},{"value":"/ uniformly between two values. This should not be used directly,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56163,"byte_end":56230,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/ and is only to facilitate `Range`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56231,"byte_end":56269,"line_start":77,"line_end":77,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56551,"byte_end":56566,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"construct_range","qualname":"::distributions::range::SampleRange::construct_range","value":"pub fn construct_range(Self, Self) -> Range<Self>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Construct the `Range` object that `sample_range`\n requires. This should not ever be called directly, only via\n `Range::new`, which will check that `low < high`, so this\n function doesn't have to repeat the check.\n","sig":null,"attributes":[{"value":"/ Construct the `Range` object that `sample_range`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56306,"byte_end":56358,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/ requires. This should not ever be called directly, only via","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56363,"byte_end":56426,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/ `Range::new`, which will check that `low < high`, so this","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56431,"byte_end":56492,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/ function doesn't have to repeat the check.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56497,"byte_end":56543,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56716,"byte_end":56728,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"sample_range","qualname":"::distributions::range::SampleRange::sample_range","value":"pub fn sample_range<R: Rng>(&Range<Self>, &mut R) -> Self","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Sample a value from the given `Range` with the given `Rng` as\n a source of randomness.\n","sig":null,"attributes":[{"value":"/ Sample a value from the given `Range` with the given `Rng` as","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56611,"byte_end":56676,"line_start":85,"line_end":85,"column_start":5,"column_end":70}},{"value":"/ a source of randomness.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56681,"byte_end":56708,"line_start":86,"line_end":86,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamma","qualname":"::distributions::gamma","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":1467},{"krate":0,"index":65},{"krate":0,"index":1469},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":773},{"krate":0,"index":778},{"krate":0,"index":777},{"krate":0,"index":775},{"krate":0,"index":780},{"krate":0,"index":793},{"krate":0,"index":792},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":801},{"krate":0,"index":800},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":810},{"krate":0,"index":809},{"krate":0,"index":807},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":812},{"krate":0,"index":817},{"krate":0,"index":816},{"krate":0,"index":814},{"krate":0,"index":819},{"krate":0,"index":828},{"krate":0,"index":827},{"krate":0,"index":825},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":830},{"krate":0,"index":837},{"krate":0,"index":836},{"krate":0,"index":834},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":839},{"krate":0,"index":845},{"krate":0,"index":844},{"krate":0,"index":842},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115}],"decl_id":null,"docs":" The Gamma and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40314,"byte_end":40335,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ The Gamma and derived distributions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62348,"byte_end":62388,"line_start":13,"line_end":13,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63634,"byte_end":63639,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Gamma","qualname":"::distributions::gamma::Gamma","value":"Gamma {  }","parent":null,"children":[{"krate":0,"index":774}],"decl_id":null,"docs":" The Gamma distribution `Gamma(shape, scale)` distribution.","sig":null,"attributes":[{"value":"/ The Gamma distribution `Gamma(shape, scale)` distribution.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62544,"byte_end":62606,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62607,"byte_end":62610,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The density function of this distribution is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62611,"byte_end":62659,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62660,"byte_end":62663,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62664,"byte_end":62675,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ f(x) =  x^(k - 1) * exp(-x / θ) / (Γ(k) * θ^k)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62676,"byte_end":62729,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62730,"byte_end":62737,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62738,"byte_end":62741,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ where `Γ` is the Gamma function, `k` is the shape and `θ` is the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62742,"byte_end":62812,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ scale and both `k` and `θ` are strictly positive.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62813,"byte_end":62867,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62868,"byte_end":62871,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The algorithm used is that described by Marsaglia & Tsang 2000[1],","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62872,"byte_end":62942,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ falling back to directly sampling from an Exponential for `shape","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":62943,"byte_end":63011,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ == 1`, and using the boosting technique described in [1] for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63012,"byte_end":63076,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ `shape < 1`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63077,"byte_end":63093,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63094,"byte_end":63097,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63098,"byte_end":63111,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63112,"byte_end":63115,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63116,"byte_end":63127,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{IndependentSample, Gamma};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63128,"byte_end":63184,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63185,"byte_end":63188,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let gamma = Gamma::new(2.0, 5.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63189,"byte_end":63226,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/ let v = gamma.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63227,"byte_end":63281,"line_start":44,"line_end":44,"column_start":1,"column_end":55}},{"value":"/ println!(\"{} is from a Gamma(2, 5) distribution\", v);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63282,"byte_end":63339,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63340,"byte_end":63347,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63348,"byte_end":63351,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [1]: George Marsaglia and Wai Wan Tsang. 2000. \"A Simple Method","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63352,"byte_end":63419,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ for Generating Gamma Variables\" *ACM Trans. Math. Softw.* 26, 3","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63420,"byte_end":63487,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ (September 2000),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63488,"byte_end":63509,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ 363-372. DOI:[10.1145/358407.358414](http://doi.acm.org/10.1145/358407.358414)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":63510,"byte_end":63592,"line_start":51,"line_end":51,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64924,"byte_end":64927,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Gamma>::new","value":"pub fn new(f64, f64) -> Gamma","parent":null,"children":[],"decl_id":null,"docs":" Construct an object representing the `Gamma(shape, scale)`\n distribution.","sig":null,"attributes":[{"value":"/ Construct an object representing the `Gamma(shape, scale)`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64758,"byte_end":64820,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ distribution.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64825,"byte_end":64842,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64847,"byte_end":64850,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Panics if `shape <= 0` or `scale <= 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64855,"byte_end":64898,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64903,"byte_end":64912,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":812},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67973,"byte_end":67983,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"ChiSquared","qualname":"::distributions::gamma::ChiSquared","value":"ChiSquared {  }","parent":null,"children":[{"krate":0,"index":813}],"decl_id":null,"docs":" The chi-squared distribution `χ²(k)`, where `k` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The chi-squared distribution `χ²(k)`, where `k` is the degrees of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67372,"byte_end":67443,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67444,"byte_end":67456,"line_start":184,"line_end":184,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67457,"byte_end":67460,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For `k > 0` integral, this distribution is the sum of the squares","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67461,"byte_end":67530,"line_start":186,"line_end":186,"column_start":1,"column_end":70}},{"value":"/ of `k` independent standard normal random variables. For other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67531,"byte_end":67597,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ `k`, this uses the equivalent characterisation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67598,"byte_end":67648,"line_start":188,"line_end":188,"column_start":1,"column_end":51}},{"value":"/ `χ²(k) = Gamma(k/2, 2)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67649,"byte_end":67679,"line_start":189,"line_end":189,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67680,"byte_end":67683,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67684,"byte_end":67697,"line_start":191,"line_end":191,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67698,"byte_end":67701,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67702,"byte_end":67713,"line_start":193,"line_end":193,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{ChiSquared, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67714,"byte_end":67775,"line_start":194,"line_end":194,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67776,"byte_end":67779,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let chi = ChiSquared::new(11.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67780,"byte_end":67816,"line_start":196,"line_end":196,"column_start":1,"column_end":37}},{"value":"/ let v = chi.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67817,"byte_end":67869,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/ println!(\"{} is from a χ²(11) distribution\", v)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67870,"byte_end":67923,"line_start":198,"line_end":198,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":67924,"byte_end":67931,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68449,"byte_end":68452,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<ChiSquared>::new","value":"pub fn new(f64) -> ChiSquared","parent":null,"children":[],"decl_id":null,"docs":" Create a new chi-squared distribution with degrees-of-freedom\n `k`. Panics if `k < 0`.\n","sig":null,"attributes":[{"value":"/ Create a new chi-squared distribution with degrees-of-freedom","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68340,"byte_end":68405,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ `k`. Panics if `k < 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68410,"byte_end":68437,"line_start":216,"line_end":216,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69710,"byte_end":69717,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"FisherF","qualname":"::distributions::gamma::FisherF","value":"FisherF {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" The Fisher F distribution `F(m, n)`.","sig":null,"attributes":[{"value":"/ The Fisher F distribution `F(m, n)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69227,"byte_end":69267,"line_start":243,"line_end":243,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69268,"byte_end":69271,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ This distribution is equivalent to the ratio of two normalised","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69272,"byte_end":69338,"line_start":245,"line_end":245,"column_start":1,"column_end":67}},{"value":"/ chi-squared distributions, that is, `F(m,n) = (χ²(m)/m) /","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69339,"byte_end":69402,"line_start":246,"line_end":246,"column_start":1,"column_end":62}},{"value":"/ (χ²(n)/n)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69403,"byte_end":69420,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69421,"byte_end":69424,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69425,"byte_end":69438,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69439,"byte_end":69442,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69443,"byte_end":69454,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{FisherF, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69455,"byte_end":69513,"line_start":252,"line_end":252,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69514,"byte_end":69517,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let f = FisherF::new(2.0, 32.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69518,"byte_end":69554,"line_start":254,"line_end":254,"column_start":1,"column_end":37}},{"value":"/ let v = f.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69555,"byte_end":69605,"line_start":255,"line_end":255,"column_start":1,"column_end":51}},{"value":"/ println!(\"{} is from an F(2, 32) distribution\", v)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69606,"byte_end":69660,"line_start":256,"line_end":256,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69661,"byte_end":69668,"line_start":257,"line_end":257,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70052,"byte_end":70055,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<FisherF>::new","value":"pub fn new(f64, f64) -> FisherF","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FisherF` distribution, with the given\n parameter. Panics if either `m` or `n` are not positive.\n","sig":null,"attributes":[{"value":"/ Create a new `FisherF` distribution, with the given","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69920,"byte_end":69975,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/ parameter. Panics if either `m` or `n` are not positive.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69980,"byte_end":70040,"line_start":269,"line_end":269,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71016,"byte_end":71024,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"StudentT","qualname":"::distributions::gamma::StudentT","value":"StudentT {  }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" The Student t distribution, `t(nu)`, where `nu` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The Student t distribution, `t(nu)`, where `nu` is the degrees of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70651,"byte_end":70720,"line_start":290,"line_end":290,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70721,"byte_end":70733,"line_start":291,"line_end":291,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70734,"byte_end":70737,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70738,"byte_end":70751,"line_start":293,"line_end":293,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70752,"byte_end":70755,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70756,"byte_end":70767,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{StudentT, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70768,"byte_end":70827,"line_start":296,"line_end":296,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70828,"byte_end":70831,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ let t = StudentT::new(11.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70832,"byte_end":70864,"line_start":298,"line_end":298,"column_start":1,"column_end":33}},{"value":"/ let v = t.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70865,"byte_end":70915,"line_start":299,"line_end":299,"column_start":1,"column_end":51}},{"value":"/ println!(\"{} is from a t(11) distribution\", v)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70916,"byte_end":70966,"line_start":300,"line_end":300,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70967,"byte_end":70974,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71192,"byte_end":71195,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<StudentT>::new","value":"pub fn new(f64) -> StudentT","parent":null,"children":[],"decl_id":null,"docs":" Create a new Student t distribution with `n` degrees of\n freedom. Panics if `n <= 0`.\n","sig":null,"attributes":[{"value":"/ Create a new Student t distribution with `n` degrees of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71084,"byte_end":71143,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ freedom. Panics if `n <= 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71148,"byte_end":71180,"line_start":310,"line_end":310,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"normal","qualname":"::distributions::normal","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":1481},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":847},{"krate":0,"index":853},{"krate":0,"index":852},{"krate":0,"index":850},{"krate":0,"index":128},{"krate":0,"index":855},{"krate":0,"index":861},{"krate":0,"index":860},{"krate":0,"index":858},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":863},{"krate":0,"index":868},{"krate":0,"index":867},{"krate":0,"index":865},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":147}],"decl_id":null,"docs":" The normal and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40351,"byte_end":40372,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ The normal and derived distributions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73591,"byte_end":73632,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74370,"byte_end":74384,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"StandardNormal","qualname":"::distributions::normal::StandardNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate N(0, 1) random numbers\n (a.k.a.  a standard normal, or Gaussian).","sig":null,"attributes":[{"value":"/ A wrapper around an `f64` to generate N(0, 1) random numbers","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73735,"byte_end":73799,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ (a.k.a.  a standard normal, or Gaussian).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73800,"byte_end":73845,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73846,"byte_end":73849,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See `Normal` for the general normal distribution.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73850,"byte_end":73903,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73904,"byte_end":73907,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[1] of the Ziggurat method.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73908,"byte_end":73973,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73974,"byte_end":73977,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":73978,"byte_end":74045,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ Generate Normal Random","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74046,"byte_end":74072,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ Samples*](http://www.doornik.com/research/ziggurat.pdf). Nuffield","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74073,"byte_end":74142,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ College, Oxford","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74143,"byte_end":74162,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74163,"byte_end":74166,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74167,"byte_end":74180,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74181,"byte_end":74184,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74185,"byte_end":74196,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::normal::StandardNormal;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74197,"byte_end":74249,"line_start":31,"line_end":31,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74250,"byte_end":74253,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let StandardNormal(x) = rand::random();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74254,"byte_end":74297,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74298,"byte_end":74320,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74321,"byte_end":74328,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74385,"byte_end":74392,"line_start":37,"line_end":37,"column_start":27,"column_end":34},"name":"0","qualname":"::distributions::normal::StandardNormal::0","value":"f64","parent":{"krate":0,"index":847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":855},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76063,"byte_end":76069,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"Normal","qualname":"::distributions::normal::Normal","value":"Normal {  }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" The normal distribution `N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The normal distribution `N(mean, std_dev**2)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75578,"byte_end":75628,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75629,"byte_end":75632,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This uses the ZIGNOR variant of the Ziggurat method, see","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75633,"byte_end":75693,"line_start":78,"line_end":78,"column_start":1,"column_end":61}},{"value":"/ `StandardNormal` for more details.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75694,"byte_end":75732,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75733,"byte_end":75736,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75737,"byte_end":75750,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75751,"byte_end":75754,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75755,"byte_end":75766,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Normal, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75767,"byte_end":75824,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75825,"byte_end":75828,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75829,"byte_end":75864,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ let normal = Normal::new(2.0, 3.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75865,"byte_end":75904,"line_start":87,"line_end":87,"column_start":1,"column_end":40}},{"value":"/ let v = normal.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75905,"byte_end":75960,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/ println!(\"{} is from a N(2, 9) distribution\", v)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":75961,"byte_end":76013,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76014,"byte_end":76021,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76311,"byte_end":76314,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Normal>::new","value":"pub fn new(f64, f64) -> Normal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Normal` distribution with the given mean and\n standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `Normal` distribution with the given mean and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76126,"byte_end":76191,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ standard deviation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76196,"byte_end":76219,"line_start":99,"line_end":99,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76224,"byte_end":76227,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76232,"byte_end":76244,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76249,"byte_end":76252,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76257,"byte_end":76285,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76290,"byte_end":76299,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":863},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77331,"byte_end":77340,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"LogNormal","qualname":"::distributions::normal::LogNormal","value":"LogNormal {  }","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":" The log-normal distribution `ln N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The log-normal distribution `ln N(mean, std_dev**2)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76828,"byte_end":76885,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76886,"byte_end":76889,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ If `X` is log-normal distributed, then `ln(X)` is `N(mean,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76890,"byte_end":76952,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/ std_dev**2)` distributed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76953,"byte_end":76982,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76983,"byte_end":76986,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76987,"byte_end":77000,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77001,"byte_end":77004,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77005,"byte_end":77016,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{LogNormal, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77017,"byte_end":77077,"line_start":132,"line_end":132,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77078,"byte_end":77081,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77082,"byte_end":77117,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"/ let log_normal = LogNormal::new(2.0, 3.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77118,"byte_end":77164,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ let v = log_normal.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77165,"byte_end":77224,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ println!(\"{} is from an ln N(2, 9) distribution\", v)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77225,"byte_end":77281,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77282,"byte_end":77289,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77572,"byte_end":77575,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<LogNormal>::new","value":"pub fn new(f64, f64) -> LogNormal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LogNormal` distribution with the given mean\n and standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `LogNormal` distribution with the given mean","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77384,"byte_end":77448,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ and standard deviation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77453,"byte_end":77480,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77485,"byte_end":77488,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77493,"byte_end":77505,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77510,"byte_end":77513,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77518,"byte_end":77546,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77551,"byte_end":77560,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exponential","qualname":"::distributions::exponential","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":875},{"krate":0,"index":873},{"krate":0,"index":159},{"krate":0,"index":878},{"krate":0,"index":883},{"krate":0,"index":882},{"krate":0,"index":880},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170}],"decl_id":null,"docs":" The exponential distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40389,"byte_end":40410,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ The exponential distribution.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79304,"byte_end":79337,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80131,"byte_end":80135,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"Exp1","qualname":"::distributions::exponential::Exp1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around an `f64` to generate Exp(1) random numbers.","sig":null,"attributes":[{"value":"/ A wrapper around an `f64` to generate Exp(1) random numbers.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79432,"byte_end":79496,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79497,"byte_end":79500,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See `Exp` for the general exponential distribution.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79501,"byte_end":79556,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79557,"byte_end":79560,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[1] of the Ziggurat method. The","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79561,"byte_end":79630,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ exact description in the paper was adjusted to use tables for the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79631,"byte_end":79700,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ exponential distribution rather than normal.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79701,"byte_end":79749,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79750,"byte_end":79753,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79754,"byte_end":79821,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ Generate Normal Random","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79822,"byte_end":79848,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ Samples*](http://www.doornik.com/research/ziggurat.pdf). Nuffield","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79849,"byte_end":79918,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ College, Oxford","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79919,"byte_end":79938,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79939,"byte_end":79942,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79943,"byte_end":79956,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79957,"byte_end":79960,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79961,"byte_end":79972,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::exponential::Exp1;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":79973,"byte_end":80020,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80021,"byte_end":80024,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let Exp1(x) = rand::random();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80025,"byte_end":80058,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80059,"byte_end":80081,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80082,"byte_end":80089,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":872},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80136,"byte_end":80143,"line_start":38,"line_end":38,"column_start":17,"column_end":24},"name":"0","qualname":"::distributions::exponential::Exp1::0","value":"f64","parent":{"krate":0,"index":870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81138,"byte_end":81141,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"Exp","qualname":"::distributions::exponential::Exp","value":"Exp {  }","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":" The exponential distribution `Exp(lambda)`.","sig":null,"attributes":[{"value":"/ The exponential distribution `Exp(lambda)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80713,"byte_end":80760,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80761,"byte_end":80764,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This distribution has density function: `f(x) = lambda *","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80765,"byte_end":80825,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ exp(-lambda * x)` for `x > 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80826,"byte_end":80860,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80861,"byte_end":80864,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80865,"byte_end":80878,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80879,"byte_end":80882,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80883,"byte_end":80894,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Exp, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80895,"byte_end":80949,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80950,"byte_end":80953,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let exp = Exp::new(2.0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80954,"byte_end":80982,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/ let v = exp.ind_sample(&mut rand::thread_rng());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80983,"byte_end":81035,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/ println!(\"{} is from a Exp(2) distribution\", v);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81036,"byte_end":81088,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81089,"byte_end":81096,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81382,"byte_end":81385,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Exp>::new","value":"pub fn new(f64) -> Exp","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Exp` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Exp` with the given shape parameter","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81257,"byte_end":81313,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ `lambda`. Panics if `lambda <= 0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81318,"byte_end":81356,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81361,"byte_end":81370,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40556,"byte_end":40562,"line_start":44,"line_end":44,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":188}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[{"value":"/ Types that can be used to create a random instance of `Support`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40477,"byte_end":40545,"line_start":43,"line_end":43,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40676,"byte_end":40682,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"pub fn sample<R: Rng>(&mut Self, &mut R) -> Support","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `Support`, using `rng` as the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40578,"byte_end":40638,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/ source of randomness.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40643,"byte_end":40668,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41148,"byte_end":41165,"line_start":58,"line_end":58,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[{"value":"/ `Sample`s that do not require keeping track of state.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40730,"byte_end":40787,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40788,"byte_end":40791,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Since no state is recorded, each sample is (statistically)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40792,"byte_end":40854,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/ independent of all others, assuming the `Rng` used has this","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40855,"byte_end":40918,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ property.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40919,"byte_end":40932,"line_start":54,"line_end":54,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41234,"byte_end":41244,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"pub fn ind_sample<R: Rng>(&Self, &mut R) -> Support","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[{"value":"/ Generate a random value.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41198,"byte_end":41226,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41419,"byte_end":41429,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"RandSample","qualname":"::distributions::RandSample","value":"RandSample {  }","parent":null,"children":[{"krate":0,"index":887}],"decl_id":null,"docs":" A wrapper for generating types that implement `Rand` via the\n `Sample` & `IndependentSample` traits.\n","sig":null,"attributes":[{"value":"/ A wrapper for generating types that implement `Rand` via the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41283,"byte_end":41347,"line_start":63,"line_end":63,"column_start":1,"column_end":65}},{"value":"/ `Sample` & `IndependentSample` traits.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41348,"byte_end":41390,"line_start":64,"line_end":64,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41917,"byte_end":41920,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<RandSample<Sup>>::new","value":"pub fn new() -> RandSample<Sup>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":891},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42114,"byte_end":42122,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[{"value":"/ A value with a particular weight for use with `WeightedChoice`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42005,"byte_end":42072,"line_start":91,"line_end":91,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":893},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42178,"byte_end":42184,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[{"value":"/ The numerical weight of this item","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42132,"byte_end":42169,"line_start":94,"line_end":94,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":894},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42247,"byte_end":42251,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":891},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[{"value":"/ The actual item which is being weighted","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42195,"byte_end":42238,"line_start":96,"line_end":96,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43245,"byte_end":43259,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[{"value":"/ A distribution that selects from a finite collection of weighted items.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42259,"byte_end":42334,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42335,"byte_end":42338,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Each item has an associated weight that influences how likely it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42339,"byte_end":42407,"line_start":102,"line_end":102,"column_start":1,"column_end":69}},{"value":"/ is to be chosen: higher weight is more likely.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42408,"byte_end":42458,"line_start":103,"line_end":103,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42459,"byte_end":42462,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The `Clone` restriction is a limitation of the `Sample` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42463,"byte_end":42526,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ `IndependentSample` traits. Note that `&T` is (cheaply) `Clone` for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42527,"byte_end":42598,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ all `T`, as is `u32`, so one can store references or indices into","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42599,"byte_end":42668,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ another vector.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42669,"byte_end":42688,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42689,"byte_end":42692,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42693,"byte_end":42706,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42707,"byte_end":42710,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42711,"byte_end":42722,"line_start":112,"line_end":112,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Weighted, WeightedChoice, IndependentSample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42723,"byte_end":42798,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42799,"byte_end":42802,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ let mut items = vec!(Weighted { weight: 2, item: 'a' },","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42803,"byte_end":42862,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 4, item: 'b' },","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42863,"byte_end":42922,"line_start":116,"line_end":116,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 1, item: 'c' });","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42923,"byte_end":42983,"line_start":117,"line_end":117,"column_start":1,"column_end":61}},{"value":"/ let wc = WeightedChoice::new(&mut items);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":42984,"byte_end":43029,"line_start":118,"line_end":118,"column_start":1,"column_end":46}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43030,"byte_end":43067,"line_start":119,"line_end":119,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..16 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43068,"byte_end":43088,"line_start":120,"line_end":120,"column_start":1,"column_end":21}},{"value":"/      // on average prints 'a' 4 times, 'b' 8 and 'c' twice.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43089,"byte_end":43152,"line_start":121,"line_end":121,"column_start":1,"column_end":64}},{"value":"/      println!(\"{}\", wc.ind_sample(&mut rng));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43153,"byte_end":43202,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43203,"byte_end":43208,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43209,"byte_end":43216,"line_start":124,"line_end":124,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43588,"byte_end":43591,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"pub fn new(&'a mut [Weighted<T>]) -> WeightedChoice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[{"value":"/ Create a new `WeightedChoice`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43385,"byte_end":43419,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43424,"byte_end":43427,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Panics if:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43432,"byte_end":43446,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43451,"byte_end":43454,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ - `items` is empty","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43459,"byte_end":43481,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/ - the total weight is 0","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43486,"byte_end":43513,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/ - the total weight is larger than a `u32` can contain.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43518,"byte_end":43576,"line_start":138,"line_end":138,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::jitter","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":253},{"krate":0,"index":912},{"krate":0,"index":933},{"krate":0,"index":931},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[{"value":"/ Non-physical true random number generator based on timing jitter.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":107865,"byte_end":107934,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":109309,"byte_end":109318,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[{"value":"/ A true random number generator based on jitter in the CPU execution time,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108194,"byte_end":108271,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ and jitter in memory access time.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108272,"byte_end":108309,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108310,"byte_end":108313,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This is a true random number generator, as opposed to pseudo-random","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108314,"byte_end":108385,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ generators. Random numbers generated by `JitterRng` can be seen as fresh","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108386,"byte_end":108462,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ entropy. A consequence is that is orders of magnitude slower than `OsRng`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108463,"byte_end":108540,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ and PRNGs (about 10^3 .. 10^6 slower).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108541,"byte_end":108583,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108584,"byte_end":108587,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ There are very few situations where using this RNG is appropriate. Only very","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108588,"byte_end":108668,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ few applications require true entropy. A normal PRNG can be statistically","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108669,"byte_end":108746,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ indistinguishable, and a cryptographic PRNG should also be as impossible to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108747,"byte_end":108826,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ predict.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108827,"byte_end":108839,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108840,"byte_end":108843,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Use of `JitterRng` is recommended for initializing cryptographic PRNGs when","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108844,"byte_end":108923,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `OsRng` is not available.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108924,"byte_end":108953,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108954,"byte_end":108957,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This implementation is based on","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108958,"byte_end":108993,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"/ [Jitterentropy](http://www.chronox.de/jent.html) version 2.1.0.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":108994,"byte_end":109061,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110164,"byte_end":110171,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[{"value":"/ No timer available.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110136,"byte_end":110159,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110231,"byte_end":110242,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[{"value":"/ Timer too coarse to use as an entropy source.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110177,"byte_end":110226,"line_start":80,"line_end":80,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110295,"byte_end":110307,"line_start":83,"line_end":83,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[{"value":"/ Timer is not monotonically increasing.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110248,"byte_end":110290,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":919},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110361,"byte_end":110376,"line_start":85,"line_end":85,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[{"value":"/ Variations of deltas of time too small.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110313,"byte_end":110356,"line_start":84,"line_end":84,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110444,"byte_end":110456,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[{"value":"/ Too many stuck results (indicating no added entropy).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110382,"byte_end":110439,"line_start":86,"line_end":86,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110481,"byte_end":110496,"line_start":89,"line_end":89,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":912},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":912},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110119,"byte_end":110129,"line_start":77,"line_end":77,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::jitter::TimerError","value":"pub enum TimerError {\n\n    /// No timer available.\n    NoTimer,\n\n    /// Timer too coarse to use as an entropy source.\n    CoarseTimer,\n\n    /// Timer is not monotonically increasing.\n    NotMonotonic,\n\n    /// Variations of deltas of time too small.\n    TinyVariantions,\n\n    /// Too many stuck results (indicating no added entropy).\n    TooManyStuck,\n\n    #[doc(hidden)]\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923}],"decl_id":null,"docs":" An error that can occur when `test_timer` fails.\n","sig":null,"attributes":[{"value":"/ An error that can occur when `test_timer` fails.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110018,"byte_end":110070,"line_start":75,"line_end":75,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111756,"byte_end":111759,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<JitterRng>::new","value":"pub fn new() -> Result<JitterRng, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n Makes use of `std::time` for a timer.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111404,"byte_end":111433,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/ Makes use of `std::time` for a timer.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111438,"byte_end":111479,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111484,"byte_end":111487,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ During initialization CPU execution timing jitter is measured a few","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111492,"byte_end":111563,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ hundred times. If this does not pass basic quality tests, an error is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111568,"byte_end":111641,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ returned. The test result is cached to make subsequent calls faster.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111646,"byte_end":111718,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111723,"byte_end":111744,"line_start":129,"line_end":129,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112693,"byte_end":112707,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"pub fn new_with_timer(fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112258,"byte_end":112287,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ A custom timer can be supplied, making it possible to use `JitterRng` in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112292,"byte_end":112368,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ `no_std` environments.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112373,"byte_end":112399,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112404,"byte_end":112407,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The timer must have nanosecond precision.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112412,"byte_end":112457,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112462,"byte_end":112465,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This method is more low-level than `new()`. It is the responsibility of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112470,"byte_end":112545,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/ the caller to run `test_timer` before using any numbers generated with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112550,"byte_end":112624,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ `JitterRng`, and optionally call `set_rounds()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":112629,"byte_end":112681,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113969,"byte_end":113979,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"pub fn set_rounds(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[{"value":"/ Configures how many rounds are used to generate each 64-bit value.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113474,"byte_end":113544,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ This must be greater than zero, and has a big impact on performance","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113549,"byte_end":113620,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ and output quality.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113625,"byte_end":113648,"line_start":181,"line_end":181,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113653,"byte_end":113656,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ `new_with_timer` conservatively uses 64 rounds, but often less rounds","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113661,"byte_end":113734,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ can be used. The `test_timer()` function returns the minimum number of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113739,"byte_end":113813,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ rounds required for full strength (platform dependent), so one may use","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113818,"byte_end":113892,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ `rng.set_rounds(rng.test_timer()?);` or cache the value.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":113897,"byte_end":113957,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124726,"byte_end":124736,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"pub fn test_timer(&mut Self) -> Result<u32, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[{"value":"/ Basic quality tests on the timer, by measuring CPU timing jitter a few","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124409,"byte_end":124483,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ hundred times.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124488,"byte_end":124506,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124511,"byte_end":124514,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If succesful, this will return the estimated number of rounds necessary","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124519,"byte_end":124594,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ to collect 64 bits of entropy. Otherwise a `TimerError` with the cause","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124599,"byte_end":124673,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ of the failure will be returned.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":124678,"byte_end":124714,"line_start":438,"line_end":438,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134457,"byte_end":134468,"line_start":656,"line_end":656,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"pub fn timer_stats(&mut Self, bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterEntropy` entropy collector.","sig":null,"attributes":[{"value":"/ Statistical test: return the timer delta of one normal run of the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130120,"byte_end":130189,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ `JitterEntropy` entropy collector.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130194,"byte_end":130232,"line_start":565,"line_end":565,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130237,"byte_end":130240,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `true` will execute the memory access and the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130245,"byte_end":130318,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ CPU jitter noice sources a variable amount of times (just like a real","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130323,"byte_end":130396,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ `JitterEntropy` round).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130401,"byte_end":130428,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130433,"byte_end":130436,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `false` will execute the noice sources the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130441,"byte_end":130511,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/ minimal number of times. This can be used to measure the minimum amount","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130516,"byte_end":130591,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ of entropy one round of entropy collector can collect in the worst case.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130596,"byte_end":130672,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130677,"byte_end":130680,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130685,"byte_end":130698,"line_start":575,"line_end":575,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130703,"byte_end":130706,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Use `timer_stats` to run the [NIST SP 800-90B Entropy Estimation Suite]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130711,"byte_end":130786,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ (https://github.com/usnistgov/SP800-90B_EntropyAssessment).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130791,"byte_end":130854,"line_start":578,"line_end":578,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130859,"byte_end":130862,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This is the recommended way to test the quality of `JitterRng`. It","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130867,"byte_end":130937,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ should be run before using the RNG on untested hardware, after changes","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":130942,"byte_end":131016,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ that could effect how the code is optimised, and after major compiler","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131021,"byte_end":131094,"line_start":582,"line_end":582,"column_start":5,"column_end":78}},{"value":"/ compiler changes, like a new LLVM version.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131099,"byte_end":131145,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131150,"byte_end":131153,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ First generate two files `jitter_rng_var.bin` and `jitter_rng_var.min`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131158,"byte_end":131233,"line_start":585,"line_end":585,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131238,"byte_end":131241,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v jitter_rng_var.bin 8`, and validate it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131246,"byte_end":131322,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ with `restart.py -v jitter_rng_var.bin 8 <min-entropy>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131327,"byte_end":131387,"line_start":588,"line_end":588,"column_start":5,"column_end":65}},{"value":"/ This number is the expected amount of entropy that is at least available","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131392,"byte_end":131468,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ for each round of the entropy collector. This number should be greater","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131473,"byte_end":131547,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ than the amount estimated with `64 / test_timer()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131552,"byte_end":131607,"line_start":591,"line_end":591,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131612,"byte_end":131615,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v -u 4 jitter_rng_var.bin 4`, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131620,"byte_end":131689,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ validate it with `restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131694,"byte_end":131771,"line_start":594,"line_end":594,"column_start":5,"column_end":82}},{"value":"/ This number is the expected amount of entropy that is available in the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131776,"byte_end":131850,"line_start":595,"line_end":595,"column_start":5,"column_end":79}},{"value":"/ last 4 bits of the timer delta after running noice sources. Note that","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131855,"byte_end":131928,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ a value of 3.70 is the minimum estimated entropy for true randomness.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":131933,"byte_end":132006,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132011,"byte_end":132014,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Execute `python noniid_main.py -v -u 4 jitter_rng_var.bin 4`, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132019,"byte_end":132088,"line_start":599,"line_end":599,"column_start":5,"column_end":74}},{"value":"/ validate it with `restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132093,"byte_end":132170,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"/ This number is the expected amount of entropy that is available to the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132175,"byte_end":132249,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ entropy collecter if both noice sources only run their minimal number of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132254,"byte_end":132330,"line_start":602,"line_end":602,"column_start":5,"column_end":81}},{"value":"/ times. This measures the absolute worst-case, and gives a lower bound","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132335,"byte_end":132408,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ for the available entropy.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132413,"byte_end":132443,"line_start":604,"line_end":604,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132448,"byte_end":132451,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132456,"byte_end":132474,"line_start":606,"line_end":606,"column_start":5,"column_end":23}},{"value":"/ use rand::JitterRng;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132479,"byte_end":132503,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132508,"byte_end":132511,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132516,"byte_end":132544,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132549,"byte_end":132573,"line_start":610,"line_end":610,"column_start":5,"column_end":29}},{"value":"/ # use std::io::Write;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132578,"byte_end":132603,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132608,"byte_end":132613,"line_start":612,"line_end":612,"column_start":5,"column_end":10}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132618,"byte_end":132665,"line_start":613,"line_end":613,"column_start":5,"column_end":52}},{"value":"/ fn get_nstime() -> u64 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132670,"byte_end":132698,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/     use std::time::{SystemTime, UNIX_EPOCH};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132703,"byte_end":132751,"line_start":615,"line_end":615,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132756,"byte_end":132759,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/     let dur = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132764,"byte_end":132836,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/     // The correct way to calculate the current time is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132841,"byte_end":132900,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/     // `dur.as_secs() * 1_000_000_000 + dur.subsec_nanos() as u64`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132905,"byte_end":132975,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/     // But this is faster, and the difference in terms of entropy is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":132980,"byte_end":133052,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/     // negligible (log2(10^9) == 29.9).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133057,"byte_end":133100,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/     dur.as_secs() << 30 | dur.subsec_nanos() as u64","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133105,"byte_end":133160,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133165,"byte_end":133170,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133175,"byte_end":133178,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ // Do not initialize with `JitterRng::new`, but with `new_with_timer`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133183,"byte_end":133257,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ // 'new' always runst `test_timer`, and can therefore fail to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133262,"byte_end":133327,"line_start":626,"line_end":626,"column_start":5,"column_end":70}},{"value":"/ // initialize. We want to be able to get the statistics even when the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133332,"byte_end":133405,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ // timer test fails.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133410,"byte_end":133434,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/ let mut rng = JitterRng::new_with_timer(get_nstime);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133439,"byte_end":133495,"line_start":629,"line_end":629,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133500,"byte_end":133503,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ // 1_000_000 results are required for the NIST SP 800-90B Entropy","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133508,"byte_end":133577,"line_start":631,"line_end":631,"column_start":5,"column_end":74}},{"value":"/ // Estimation Suite","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133582,"byte_end":133605,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/ // FIXME: this number is smaller here, otherwise the Doc-test is too slow","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133610,"byte_end":133687,"line_start":633,"line_end":633,"column_start":5,"column_end":82}},{"value":"/ const ROUNDS: usize = 10_000;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133692,"byte_end":133725,"line_start":634,"line_end":634,"column_start":5,"column_end":38}},{"value":"/ let mut deltas_variable: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133730,"byte_end":133796,"line_start":635,"line_end":635,"column_start":5,"column_end":71}},{"value":"/ let mut deltas_minimal: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133801,"byte_end":133866,"line_start":636,"line_end":636,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133871,"byte_end":133874,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ for _ in 0..ROUNDS {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133879,"byte_end":133903,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/     deltas_variable.push(rng.timer_stats(true) as u8);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133908,"byte_end":133966,"line_start":639,"line_end":639,"column_start":5,"column_end":63}},{"value":"/     deltas_minimal.push(rng.timer_stats(false) as u8);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":133971,"byte_end":134029,"line_start":640,"line_end":640,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134034,"byte_end":134039,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134044,"byte_end":134047,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // Write out after the statistics collection loop, to not disturb the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134052,"byte_end":134125,"line_start":643,"line_end":643,"column_start":5,"column_end":78}},{"value":"/ // test results.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134130,"byte_end":134150,"line_start":644,"line_end":644,"column_start":5,"column_end":25}},{"value":"/ File::create(\"jitter_rng_var.bin\")?.write(&deltas_variable)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134155,"byte_end":134220,"line_start":645,"line_end":645,"column_start":5,"column_end":70}},{"value":"/ File::create(\"jitter_rng_min.bin\")?.write(&deltas_minimal)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134225,"byte_end":134289,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134294,"byte_end":134299,"line_start":647,"line_end":647,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134304,"byte_end":134316,"line_start":648,"line_end":648,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134321,"byte_end":134328,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134333,"byte_end":134338,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134343,"byte_end":134360,"line_start":651,"line_end":651,"column_start":5,"column_end":22}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134365,"byte_end":134395,"line_start":652,"line_end":652,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134400,"byte_end":134407,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134412,"byte_end":134419,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":134424,"byte_end":134445,"line_start":655,"line_end":655,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":293},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":318}],"decl_id":null,"docs":" Interfaces to the operating system provided random number\n generators.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10273,"byte_end":10294,"line_start":280,"line_end":280,"column_start":1,"column_end":22}},{"value":"/ Interfaces to the operating system provided random number","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138227,"byte_end":138288,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ generators.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138289,"byte_end":138304,"line_start":12,"line_end":12,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139234,"byte_end":139239,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness straight from\n the operating system. Platform sources:","sig":null,"attributes":[{"value":"/ A random number generator that retrieves randomness straight from","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138341,"byte_end":138410,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ the operating system. Platform sources:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138411,"byte_end":138454,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138455,"byte_end":138458,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - Unix-like systems (Linux, Android, Mac OSX): read directly from","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138459,"byte_end":138528,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/   `/dev/urandom`, or from `getrandom(2)` system call if available.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138529,"byte_end":138599,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ - OpenBSD: calls `getentropy(2)`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138600,"byte_end":138636,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - FreeBSD: uses the `kern.arandom` `sysctl(2)` mib","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138637,"byte_end":138691,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/ - Windows: calls `RtlGenRandom`, exported from `advapi32.dll` as","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138692,"byte_end":138760,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/   `SystemFunction036`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138761,"byte_end":138787,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ - iOS: calls SecRandomCopyBytes as /dev/(u)random is sandboxed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138788,"byte_end":138855,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ - PNaCl: calls into the `nacl-irt-random-0.1` IRT interface.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138856,"byte_end":138920,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138921,"byte_end":138924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This usually does not block. On some systems (e.g. FreeBSD, OpenBSD,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138925,"byte_end":138997,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ Max OS X, and modern Linux) this may block very early in the init","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":138998,"byte_end":139067,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ process, if the CSPRNG has not been seeded yet.[1]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139068,"byte_end":139122,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139123,"byte_end":139126,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1] See <https://www.python.org/dev/peps/pep-0524/> for a more","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139127,"byte_end":139193,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/     in-depth discussion.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139194,"byte_end":139222,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139308,"byte_end":139311,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<OsRng>::new","value":"pub fn new() -> io::Result<OsRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OsRng`.\n","sig":null,"attributes":[{"value":"/ Create a new `OsRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139271,"byte_end":139296,"line_start":38,"line_end":38,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":345},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":361}],"decl_id":null,"docs":" A wrapper around any Read to treat it as an RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10307,"byte_end":10328,"line_start":281,"line_end":281,"column_start":1,"column_end":22}},{"value":"/ A wrapper around any Read to treat it as an RNG.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":155797,"byte_end":155849,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156365,"byte_end":156372,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ReadRng","qualname":"::read::ReadRng","value":"ReadRng {  }","parent":null,"children":[{"krate":0,"index":937}],"decl_id":null,"docs":" An RNG that reads random bytes straight from a `Read`. This will\n work best with an infinite reader, but this is not required.","sig":null,"attributes":[{"value":"/ An RNG that reads random bytes straight from a `Read`. This will","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":155902,"byte_end":155970,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ work best with an infinite reader, but this is not required.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":155971,"byte_end":156035,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156036,"byte_end":156039,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156040,"byte_end":156052,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156053,"byte_end":156056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It will panic if it there is insufficient data to fulfill a request.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156057,"byte_end":156129,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156130,"byte_end":156133,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156134,"byte_end":156147,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156148,"byte_end":156151,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156152,"byte_end":156163,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ use rand::{read, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156164,"byte_end":156190,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156191,"byte_end":156194,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let data = vec![1, 2, 3, 4, 5, 6, 7, 8];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156195,"byte_end":156239,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ let mut rng = read::ReadRng::new(&data[..]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156240,"byte_end":156288,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ println!(\"{:x}\", rng.gen::<u32>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156289,"byte_end":156328,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156329,"byte_end":156336,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156479,"byte_end":156482,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadRng<R>>::new","value":"pub fn new(R) -> ReadRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReadRng` from a `Read`.\n","sig":null,"attributes":[{"value":"/ Create a new `ReadRng` from a `Read`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156426,"byte_end":156467,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":362},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reseeding","qualname":"::reseeding","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":1545},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":941},{"krate":0,"index":948},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":379},{"krate":0,"index":385},{"krate":0,"index":952},{"krate":0,"index":957},{"krate":0,"index":956},{"krate":0,"index":954},{"krate":0,"index":388},{"krate":0,"index":391}],"decl_id":null,"docs":" A wrapper around another RNG that reseeds it after it\n generates a certain number of random bytes.\n","sig":null,"attributes":[{"value":"/ A wrapper around another RNG that reseeds it after it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159392,"byte_end":159449,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ generates a certain number of random bytes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159450,"byte_end":159497,"line_start":12,"line_end":12,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159855,"byte_end":159867,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::reseeding::ReseedingRng","value":"ReseedingRng { reseeder }","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"decl_id":null,"docs":" A wrapper around any RNG which reseeds the underlying RNG after it\n has generated a certain number of random bytes.\n","sig":null,"attributes":[{"value":"/ A wrapper around any RNG which reseeds the underlying RNG after it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159704,"byte_end":159774,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ has generated a certain number of random bytes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159775,"byte_end":159826,"line_start":23,"line_end":23,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":947},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160011,"byte_end":160019,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"reseeder","qualname":"::reseeding::ReseedingRng::reseeder","value":"Rsdr","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Controls the behaviour when reseeding the RNG.\n","sig":null,"attributes":[{"value":"/ Controls the behaviour when reseeding the RNG.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":159952,"byte_end":160002,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160393,"byte_end":160396,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"pub fn new(R, u64, Rsdr) -> ReseedingRng<R, Rsdr>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[{"value":"/ Create a new `ReseedingRng` with the given parameters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160090,"byte_end":160148,"line_start":34,"line_end":34,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160153,"byte_end":160156,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160161,"byte_end":160176,"line_start":36,"line_end":36,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160181,"byte_end":160184,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `rng`: the random number generator to use.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160189,"byte_end":160237,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/ * `generation_threshold`: the number of bytes of entropy at which to reseed the RNG.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160242,"byte_end":160330,"line_start":39,"line_end":39,"column_start":5,"column_end":93}},{"value":"/ * `reseeder`: the reseeding object to use.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160335,"byte_end":160381,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160776,"byte_end":160795,"line_start":52,"line_end":52,"column_start":12,"column_end":31},"name":"reseed_if_necessary","qualname":"<ReseedingRng<R, Rsdr>>::reseed_if_necessary","value":"pub fn reseed_if_necessary(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal RNG if the number of bytes that have been\n generated exceed the threshold.\n","sig":null,"attributes":[{"value":"/ Reseed the internal RNG if the number of bytes that have been","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160659,"byte_end":160724,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ generated exceed the threshold.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160729,"byte_end":160764,"line_start":51,"line_end":51,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":385},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163027,"byte_end":163035,"line_start":129,"line_end":129,"column_start":11,"column_end":19},"name":"Reseeder","qualname":"::reseeding::Reseeder","value":"Reseeder<R>","parent":null,"children":[{"krate":0,"index":387}],"decl_id":null,"docs":" Something that can be used to reseed an RNG via `ReseedingRng`.","sig":null,"attributes":[{"value":"/ Something that can be used to reseed an RNG via `ReseedingRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162184,"byte_end":162251,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162252,"byte_end":162255,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162256,"byte_end":162269,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162270,"byte_end":162273,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162274,"byte_end":162285,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162286,"byte_end":162327,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ use rand::reseeding::{Reseeder, ReseedingRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162328,"byte_end":162378,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162379,"byte_end":162382,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ struct TickTockReseeder { tick: bool }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162383,"byte_end":162425,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ impl Reseeder<StdRng> for TickTockReseeder {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162426,"byte_end":162474,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/     fn reseed(&mut self, rng: &mut StdRng) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162475,"byte_end":162523,"line_start":111,"line_end":111,"column_start":1,"column_end":49}},{"value":"/         let val = if self.tick {0} else {1};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162524,"byte_end":162572,"line_start":112,"line_end":112,"column_start":1,"column_end":49}},{"value":"/         rng.reseed(&[val]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162573,"byte_end":162604,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/         self.tick = !self.tick;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162605,"byte_end":162640,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162641,"byte_end":162650,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162651,"byte_end":162656,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162657,"byte_end":162672,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/     let rsdr = TickTockReseeder { tick: true };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162673,"byte_end":162724,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162725,"byte_end":162728,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     let inner = StdRng::new().unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162729,"byte_end":162772,"line_start":120,"line_end":120,"column_start":1,"column_end":44}},{"value":"/     let mut rng = ReseedingRng::new(inner, 10, rsdr);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162773,"byte_end":162830,"line_start":121,"line_end":121,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162831,"byte_end":162834,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     // this will repeat, because it gets reseeded very regularly.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162835,"byte_end":162904,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/     let s: String = rng.gen_ascii_chars().take(100).collect();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162905,"byte_end":162971,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/     println!(\"{}\", s);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162972,"byte_end":162998,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":162999,"byte_end":163004,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163005,"byte_end":163008,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163009,"byte_end":163016,"line_start":128,"line_end":128,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163078,"byte_end":163084,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"reseed","qualname":"::reseeding::Reseeder::reseed","value":"pub fn reseed(&mut Self, &mut R)","parent":{"krate":0,"index":385},"children":[],"decl_id":null,"docs":" Reseed the given RNG.\n","sig":null,"attributes":[{"value":"/ Reseed the given RNG.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163045,"byte_end":163070,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163284,"byte_end":163301,"line_start":137,"line_end":137,"column_start":12,"column_end":29},"name":"ReseedWithDefault","qualname":"::reseeding::ReseedWithDefault","value":"","parent":null,"children":[],"decl_id":null,"docs":" Reseed an RNG using a `Default` instance. This reseeds by\n replacing the RNG with the result of a `Default::default` call.\n","sig":null,"attributes":[{"value":"/ Reseed an RNG using a `Default` instance. This reseeds by","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163113,"byte_end":163174,"line_start":134,"line_end":134,"column_start":1,"column_end":62}},{"value":"/ replacing the RNG with the result of a `Default::default` call.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163175,"byte_end":163242,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413}],"decl_id":null,"docs":" Functions for randomly accessing and sampling sequences.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10362,"byte_end":10407,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ Functions for randomly accessing and sampling sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166297,"byte_end":166357,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167393,"byte_end":167404,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::seq::sample_iter","value":"pub fn sample_iter<T, I, R>(&mut R, I, usize) -> Result<Vec<T>, Vec<T>> where\nI: IntoIterator<Item = T>, R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample `amount` elements from a finite iterator.","sig":null,"attributes":[{"value":"/ Randomly sample `amount` elements from a finite iterator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166664,"byte_end":166725,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166726,"byte_end":166729,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The following can be returned:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166730,"byte_end":166764,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ - `Ok`: `Vec` of `amount` non-repeating randomly sampled elements. The order is not random.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166765,"byte_end":166860,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ - `Err`: `Vec` of all the elements from `iterable` in sequential order. This happens when the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166861,"byte_end":166958,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/   length of `iterable` was less than `amount`. This is considered an error since exactly","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":166959,"byte_end":167051,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/   `amount` elements is typically expected.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167052,"byte_end":167098,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167099,"byte_end":167102,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(len(iterable))` time and `O(amount)` memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167103,"byte_end":167179,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167180,"byte_end":167183,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167184,"byte_end":167197,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167198,"byte_end":167201,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167202,"byte_end":167213,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167214,"byte_end":167246,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167247,"byte_end":167250,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167251,"byte_end":167282,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let sample = seq::sample_iter(&mut rng, 1..100, 5).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167283,"byte_end":167347,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167348,"byte_end":167377,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":167378,"byte_end":167385,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168776,"byte_end":168788,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"sample_slice","qualname":"::seq::sample_slice","value":"pub fn sample_slice<R, T>(&mut R, &[T], usize) -> Vec<T> where R: Rng,\nT: Clone","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` values from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` values from `slice`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168332,"byte_end":168389,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168390,"byte_end":168393,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168394,"byte_end":168447,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168448,"byte_end":168451,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168452,"byte_end":168509,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168510,"byte_end":168513,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168514,"byte_end":168550,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168551,"byte_end":168554,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168555,"byte_end":168568,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168569,"byte_end":168572,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168573,"byte_end":168584,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168585,"byte_end":168617,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168618,"byte_end":168621,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168622,"byte_end":168653,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168654,"byte_end":168697,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice(&mut rng, &values, 3));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168698,"byte_end":168760,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":168761,"byte_end":168768,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169518,"byte_end":169534,"line_start":114,"line_end":114,"column_start":8,"column_end":24},"name":"sample_slice_ref","qualname":"::seq::sample_slice_ref","value":"pub fn sample_slice_ref<'a, R, T>(&mut R, &'a [T], usize) -> Vec<&'a T> where\nR: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` references from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` references from `slice`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169062,"byte_end":169123,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169124,"byte_end":169127,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The references are non-repeating and in random order.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169128,"byte_end":169185,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169186,"byte_end":169189,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169190,"byte_end":169247,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169248,"byte_end":169251,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169252,"byte_end":169288,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169289,"byte_end":169292,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169293,"byte_end":169306,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169307,"byte_end":169310,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169311,"byte_end":169322,"line_start":107,"line_end":107,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169323,"byte_end":169355,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169356,"byte_end":169359,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169360,"byte_end":169391,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169392,"byte_end":169435,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice_ref(&mut rng, &values, 3));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169436,"byte_end":169502,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169503,"byte_end":169510,"line_start":113,"line_end":113,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":170193,"byte_end":170207,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"sample_indices","qualname":"::seq::sample_indices","value":"pub fn sample_indices<R>(&mut R, usize, usize) -> Vec<usize> where R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` indices from `0..length`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` indices from `0..length`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169792,"byte_end":169854,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169855,"byte_end":169858,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169859,"byte_end":169912,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169913,"byte_end":169916,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169917,"byte_end":169974,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169975,"byte_end":169978,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This method is used internally by the slice sampling methods, but it can sometimes be useful to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":169979,"byte_end":170078,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/ have the indices themselves so this is provided as an alternative.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":170079,"byte_end":170149,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":170150,"byte_end":170153,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > length`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/seq.rs","byte_start":170154,"byte_end":170185,"line_start":133,"line_end":133,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10510,"byte_end":10516,"line_start":286,"line_end":286,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":416}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"/ The ChaCha random number generator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10523,"byte_end":10562,"line_start":287,"line_end":287,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10602,"byte_end":10607,"line_start":290,"line_end":290,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"/ The ISAAC random number generator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10614,"byte_end":10652,"line_start":291,"line_end":291,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":189074,"byte_end":189083,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"ChaChaRng {  }","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308}],"decl_id":null,"docs":" A random number generator that uses the ChaCha20 algorithm [1].","sig":null,"attributes":[{"value":"/ A random number generator that uses the ChaCha20 algorithm [1].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188611,"byte_end":188678,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188679,"byte_end":188682,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The ChaCha algorithm is widely accepted as suitable for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188683,"byte_end":188742,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ cryptographic purposes, but this implementation has not been","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188743,"byte_end":188807,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188808,"byte_end":188876,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188877,"byte_end":188936,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188937,"byte_end":188940,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [1]: D. J. Bernstein, [*ChaCha, a variant of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188941,"byte_end":188989,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ Salsa20*](http://cr.yp.to/chacha.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":188990,"byte_end":189032,"line_start":31,"line_end":31,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191174,"byte_end":191186,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"pub fn new_unseeded() -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[{"value":"/ Create an ChaCha random number generator using the default","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190583,"byte_end":190645,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/ fixed key of 8 zero words.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190650,"byte_end":190680,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190685,"byte_end":190688,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190693,"byte_end":190707,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190712,"byte_end":190715,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190720,"byte_end":190731,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, ChaChaRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190736,"byte_end":190767,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190772,"byte_end":190775,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190780,"byte_end":190823,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190828,"byte_end":190864,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190869,"byte_end":190905,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190910,"byte_end":190917,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190922,"byte_end":190925,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Since this equivalent to a RNG with a fixed seed, repeated executions","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190930,"byte_end":191003,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ of an unseeded RNG will produce the same result. This code sample will","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191008,"byte_end":191082,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ consistently produce:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191087,"byte_end":191112,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191117,"byte_end":191120,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ - 2917185654","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191125,"byte_end":191141,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ - 2419978656","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191146,"byte_end":191162,"line_start":103,"line_end":103,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":192020,"byte_end":192031,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"set_counter","qualname":"<ChaChaRng>::set_counter","value":"pub fn set_counter(&mut Self, u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the internal 128-bit ChaCha counter to\n a user-provided value. This permits jumping\n arbitrarily ahead (or backwards) in the pseudorandom stream.","sig":null,"attributes":[{"value":"/ Sets the internal 128-bit ChaCha counter to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191291,"byte_end":191338,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"/ a user-provided value. This permits jumping","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191343,"byte_end":191390,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/ arbitrarily ahead (or backwards) in the pseudorandom stream.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191395,"byte_end":191459,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191464,"byte_end":191467,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Since the nonce words are used to extend the counter to 128 bits,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191472,"byte_end":191541,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ users wishing to obtain the conventional ChaCha pseudorandom stream","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191546,"byte_end":191617,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ associated with a particular nonce can call this function with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191622,"byte_end":191688,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"/ arguments `0, desired_nonce`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191693,"byte_end":191726,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191731,"byte_end":191734,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191739,"byte_end":191753,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191758,"byte_end":191761,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191766,"byte_end":191777,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, ChaChaRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191782,"byte_end":191813,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191818,"byte_end":191821,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191826,"byte_end":191869,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/ ra.set_counter(0u64, 1234567890u64);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191874,"byte_end":191914,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191919,"byte_end":191955,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":191960,"byte_end":191996,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":192001,"byte_end":192008,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199895,"byte_end":199903,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"IsaacRng {  }","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm[1].","sig":null,"attributes":[{"value":"/ A random number generator that uses the ISAAC algorithm[1].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199408,"byte_end":199471,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199472,"byte_end":199475,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The ISAAC algorithm is generally accepted as suitable for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199476,"byte_end":199537,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ cryptographic purposes, but this implementation has not be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199538,"byte_end":199600,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199601,"byte_end":199669,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199670,"byte_end":199729,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199730,"byte_end":199733,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199734,"byte_end":199799,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ generator*](http://www.burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":199800,"byte_end":199867,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":200290,"byte_end":200302,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"pub fn new_unseeded() -> IsaacRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using the default","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":200197,"byte_end":200258,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ fixed seed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":200263,"byte_end":200278,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210219,"byte_end":210229,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"Isaac64Rng {  }","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" A random number generator that uses ISAAC-64[1], the 64-bit\n variant of the ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses ISAAC-64[1], the 64-bit","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209696,"byte_end":209759,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/ variant of the ISAAC algorithm.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209760,"byte_end":209795,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209796,"byte_end":209799,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The ISAAC algorithm is generally accepted as suitable for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209800,"byte_end":209861,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ cryptographic purposes, but this implementation has not be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209862,"byte_end":209924,"line_start":30,"line_end":30,"column_start":1,"column_end":63}},{"value":"/ verified as such. Prefer a generator like `OsRng` that defers to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209925,"byte_end":209993,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ the operating system for cases that need high security.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":209994,"byte_end":210053,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210054,"byte_end":210057,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210058,"byte_end":210123,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/ generator*](http://www.burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210124,"byte_end":210191,"line_start":35,"line_end":35,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210620,"byte_end":210632,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"pub fn new_unseeded() -> Isaac64Rng","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.\n","sig":null,"attributes":[{"value":"/ Create a 64-bit ISAAC random number generator using the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210521,"byte_end":210580,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ default fixed seed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210585,"byte_end":210608,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221252,"byte_end":221263,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344}],"decl_id":null,"docs":" An Xorshift[1] random number\n generator.","sig":null,"attributes":[{"value":"/ An Xorshift[1] random number","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220752,"byte_end":220784,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ generator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220785,"byte_end":220799,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220800,"byte_end":220803,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The Xorshift algorithm is not suitable for cryptographic purposes","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220804,"byte_end":220873,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ but is very fast. If you do not know for sure that it fits your","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220874,"byte_end":220941,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ requirements, use a more secure one such as `IsaacRng` or `OsRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":220942,"byte_end":221012,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221013,"byte_end":221016,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [1]: Marsaglia, George (July 2003). [\"Xorshift","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221017,"byte_end":221067,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/ RNGs\"](http://www.jstatsoft.org/v08/i14/paper). *Journal of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221068,"byte_end":221131,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ Statistical Software*. Vol. 8 (Issue 14).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221132,"byte_end":221177,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221178,"byte_end":221216,"line_start":26,"line_end":26,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221691,"byte_end":221703,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"pub fn new_unseeded() -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[{"value":"/ Creates a new XorShiftRng instance which is not seeded.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221352,"byte_end":221411,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221416,"byte_end":221419,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The initial values of this RNG are constants, so all generators created","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221424,"byte_end":221499,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ by this function will yield the same stream of random numbers. It is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221504,"byte_end":221576,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ highly recommended that this is created through `SeedableRng` instead of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221581,"byte_end":221657,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ this function","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221662,"byte_end":221679,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":623},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12334,"byte_end":12338,"line_start":332,"line_end":332,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":624}],"decl_id":null,"docs":" A type that can be randomly generated using an `Rng`.","sig":null,"attributes":[{"value":"/ A type that can be randomly generated using an `Rng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10745,"byte_end":10802,"line_start":300,"line_end":300,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10803,"byte_end":10806,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ ## Built-in Implementations","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10807,"byte_end":10838,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10839,"byte_end":10842,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ This crate implements `Rand` for various primitive types.  Assuming the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10843,"byte_end":10918,"line_start":304,"line_end":304,"column_start":1,"column_end":76}},{"value":"/ provided `Rng` is well-behaved, these implementations generate values with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10919,"byte_end":10997,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"/ the following ranges and distributions:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10998,"byte_end":11041,"line_start":306,"line_end":306,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11042,"byte_end":11045,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32`, `u32`, `isize`, `usize`, etc.): Uniformly distributed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11046,"byte_end":11122,"line_start":308,"line_end":308,"column_start":1,"column_end":77}},{"value":"/   over all values of the type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11123,"byte_end":11157,"line_start":309,"line_end":309,"column_start":1,"column_end":35}},{"value":"/ * `char`: Uniformly distributed over all Unicode scalar values, i.e. all","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11158,"byte_end":11234,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"/   code points in the range `0...0x10_FFFF`, except for the range","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11235,"byte_end":11303,"line_start":311,"line_end":311,"column_start":1,"column_end":69}},{"value":"/   `0xD800...0xDFFF` (the surrogate code points).  This includes","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11304,"byte_end":11371,"line_start":312,"line_end":312,"column_start":1,"column_end":68}},{"value":"/   unassigned/reserved code points.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11372,"byte_end":11410,"line_start":313,"line_end":313,"column_start":1,"column_end":39}},{"value":"/ * `bool`: Generates `false` or `true`, each with probability 0.5.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11411,"byte_end":11480,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/ * Floating point types (`f32` and `f64`): Uniformly distributed in the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11481,"byte_end":11555,"line_start":315,"line_end":315,"column_start":1,"column_end":75}},{"value":"/   half-open range `[0, 1)`.  (The [`Open01`], [`Closed01`], [`Exp1`], and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11556,"byte_end":11633,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/   [`StandardNormal`] wrapper types produce floating point numbers with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11634,"byte_end":11708,"line_start":317,"line_end":317,"column_start":1,"column_end":75}},{"value":"/   alternative ranges or distributions.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11709,"byte_end":11752,"line_start":318,"line_end":318,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11753,"byte_end":11756,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11757,"byte_end":11791,"line_start":320,"line_end":320,"column_start":1,"column_end":35}},{"value":"/ [`Closed01`]: struct.Closed01.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11792,"byte_end":11830,"line_start":321,"line_end":321,"column_start":1,"column_end":39}},{"value":"/ [`Exp1`]: distributions/exponential/struct.Exp1.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11831,"byte_end":11887,"line_start":322,"line_end":322,"column_start":1,"column_end":57}},{"value":"/ [`StandardNormal`]: distributions/normal/struct.StandardNormal.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11888,"byte_end":11959,"line_start":323,"line_end":323,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11960,"byte_end":11963,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ The following aggregate types also implement `Rand` as long as their","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":11964,"byte_end":12036,"line_start":325,"line_end":325,"column_start":1,"column_end":73}},{"value":"/ component types implement it:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12037,"byte_end":12070,"line_start":326,"line_end":326,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12071,"byte_end":12074,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ * Tuples and arrays: Each element of the tuple or array is generated","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12075,"byte_end":12147,"line_start":328,"line_end":328,"column_start":1,"column_end":73}},{"value":"/   independently, using its own `Rand` implementation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12148,"byte_end":12205,"line_start":329,"line_end":329,"column_start":1,"column_end":58}},{"value":"/ * `Option<T>`: Returns `None` with probability 0.5; otherwise generates a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12206,"byte_end":12283,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/   random `T` and returns `Some(T)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12284,"byte_end":12323,"line_start":331,"line_end":331,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12455,"byte_end":12459,"line_start":335,"line_end":335,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"pub fn rand<R: Rng>(&mut R) -> Self","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[{"value":"/ Generates a random instance of this type using the specified source of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12353,"byte_end":12427,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/ randomness.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12432,"byte_end":12447,"line_start":334,"line_end":334,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":626},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12534,"byte_end":12537,"line_start":339,"line_end":339,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652}],"decl_id":null,"docs":" A random number generator.\n","sig":null,"attributes":[{"value":"/ A random number generator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12493,"byte_end":12523,"line_start":338,"line_end":338,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12761,"byte_end":12769,"line_start":345,"line_end":345,"column_start":8,"column_end":16},"name":"next_u32","qualname":"::Rng::next_u32","value":"pub fn next_u32(&mut Self) -> u32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random u32.","sig":null,"attributes":[{"value":"/ Return the next random u32.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12544,"byte_end":12575,"line_start":340,"line_end":340,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12580,"byte_end":12583,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This rarely needs to be called directly, prefer `r.gen()` to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12588,"byte_end":12652,"line_start":342,"line_end":342,"column_start":5,"column_end":69}},{"value":"/ `r.next_u32()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12657,"byte_end":12676,"line_start":343,"line_end":343,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13110,"byte_end":13118,"line_start":353,"line_end":353,"column_start":8,"column_end":16},"name":"next_u64","qualname":"::Rng::next_u64","value":"pub fn next_u64(&mut Self) -> u64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random u64.","sig":null,"attributes":[{"value":"/ Return the next random u64.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12794,"byte_end":12825,"line_start":347,"line_end":347,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12830,"byte_end":12833,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u32`. An","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12838,"byte_end":12899,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ implementation of this trait must provide at least one of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12904,"byte_end":12965,"line_start":350,"line_end":350,"column_start":5,"column_end":66}},{"value":"/ these two methods. Similarly to `next_u32`, this rarely needs","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12970,"byte_end":13035,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/ to be called directly, prefer `r.gen()` to `r.next_u64()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13040,"byte_end":13102,"line_start":352,"line_end":352,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14518,"byte_end":14526,"line_start":383,"line_end":383,"column_start":8,"column_end":16},"name":"next_f32","qualname":"::Rng::next_f32","value":"pub fn next_f32(&mut Self) -> f32","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random f32 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[{"value":"/ Return the next random f32 selected from the half-open","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13218,"byte_end":13276,"line_start":357,"line_end":357,"column_start":5,"column_end":63}},{"value":"/ interval `[0, 1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13281,"byte_end":13303,"line_start":358,"line_end":358,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13308,"byte_end":13311,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This uses a technique described by Saito and Matsumoto at","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13316,"byte_end":13377,"line_start":360,"line_end":360,"column_start":5,"column_end":66}},{"value":"/ MCQMC'08. Given that the IEEE floating point numbers are","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13382,"byte_end":13442,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"/ uniformly distributed over [1,2), we generate a number in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13447,"byte_end":13508,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ this range and then offset it onto the range [0,1). Our","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13513,"byte_end":13572,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/ choice of bits (masking v. shifting) is arbitrary and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13577,"byte_end":13634,"line_start":364,"line_end":364,"column_start":5,"column_end":62}},{"value":"/ should be immaterial for high quality generators. For low","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13639,"byte_end":13700,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/ quality generators (ex. LCG), prefer bitshifting due to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13705,"byte_end":13764,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/ correlation between sequential low order bits.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13769,"byte_end":13819,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13824,"byte_end":13827,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ See:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13832,"byte_end":13840,"line_start":369,"line_end":369,"column_start":5,"column_end":13}},{"value":"/ A PRNG specialized in double precision floating point numbers using","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13845,"byte_end":13916,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ an affine transition","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13921,"byte_end":13945,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13950,"byte_end":13953,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ * <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/ARTICLES/dSFMT.pdf>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":13958,"byte_end":14032,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ * <http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/dSFMT-slide-e.pdf>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14037,"byte_end":14115,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14120,"byte_end":14123,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u32`, but a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14128,"byte_end":14192,"line_start":376,"line_end":376,"column_start":5,"column_end":69}},{"value":"/ random number generator which can generate numbers satisfying","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14197,"byte_end":14262,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/ the requirements directly can overload this for performance.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14267,"byte_end":14331,"line_start":378,"line_end":378,"column_start":5,"column_end":69}},{"value":"/ It is required that the return value lies in `[0, 1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14336,"byte_end":14394,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14399,"byte_end":14402,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See `Closed01` for the closed interval `[0,1]`, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14407,"byte_end":14462,"line_start":381,"line_end":381,"column_start":5,"column_end":60}},{"value":"/ `Open01` for the open interval `(0,1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14467,"byte_end":14510,"line_start":382,"line_end":382,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15274,"byte_end":15282,"line_start":401,"line_end":401,"column_start":8,"column_end":16},"name":"next_f64","qualname":"::Rng::next_f64","value":"pub fn next_f64(&mut Self) -> f64","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return the next random f64 selected from the half-open\n interval `[0, 1)`.","sig":null,"attributes":[{"value":"/ Return the next random f64 selected from the half-open","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14786,"byte_end":14844,"line_start":391,"line_end":391,"column_start":5,"column_end":63}},{"value":"/ interval `[0, 1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14849,"byte_end":14871,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14876,"byte_end":14879,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented in terms of `next_u64`, but a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14884,"byte_end":14948,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ random number generator which can generate numbers satisfying","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":14953,"byte_end":15018,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/ the requirements directly can overload this for performance.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15023,"byte_end":15087,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"/ It is required that the return value lies in `[0, 1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15092,"byte_end":15150,"line_start":397,"line_end":397,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15155,"byte_end":15158,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ See `Closed01` for the closed interval `[0,1]`, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15163,"byte_end":15218,"line_start":399,"line_end":399,"column_start":5,"column_end":60}},{"value":"/ `Open01` for the open interval `(0,1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15223,"byte_end":15266,"line_start":400,"line_end":400,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16600,"byte_end":16610,"line_start":436,"line_end":436,"column_start":8,"column_end":18},"name":"fill_bytes","qualname":"::Rng::fill_bytes","value":"pub fn fill_bytes(&mut Self, &mut [u8])","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Fill `dest` with random data.","sig":null,"attributes":[{"value":"/ Fill `dest` with random data.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15557,"byte_end":15590,"line_start":409,"line_end":409,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15595,"byte_end":15598,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This has a default implementation in terms of `next_u64` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15603,"byte_end":15667,"line_start":411,"line_end":411,"column_start":5,"column_end":69}},{"value":"/ `next_u32`, but should be overridden by implementations that","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15672,"byte_end":15736,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ offer a more efficient solution than just calling those","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15741,"byte_end":15800,"line_start":413,"line_end":413,"column_start":5,"column_end":64}},{"value":"/ methods repeatedly.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15805,"byte_end":15828,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15833,"byte_end":15836,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method does *not* have a requirement to bear any fixed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15841,"byte_end":15904,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/ relationship to the other methods, for example, it does *not*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15909,"byte_end":15974,"line_start":417,"line_end":417,"column_start":5,"column_end":70}},{"value":"/ have to result in the same output as progressively filling","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":15979,"byte_end":16041,"line_start":418,"line_end":418,"column_start":5,"column_end":67}},{"value":"/ `dest` with `self.gen::<u8>()`, and any such behaviour should","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16046,"byte_end":16111,"line_start":419,"line_end":419,"column_start":5,"column_end":70}},{"value":"/ not be relied upon.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16116,"byte_end":16139,"line_start":420,"line_end":420,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16144,"byte_end":16147,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This method should guarantee that `dest` is entirely filled","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16152,"byte_end":16215,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"/ with new data, and may panic if this is impossible","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16220,"byte_end":16274,"line_start":423,"line_end":423,"column_start":5,"column_end":59}},{"value":"/ (e.g. reading past the end of a file that is being used as the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16279,"byte_end":16345,"line_start":424,"line_end":424,"column_start":5,"column_end":71}},{"value":"/ source of randomness).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16350,"byte_end":16376,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16381,"byte_end":16384,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16389,"byte_end":16402,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16407,"byte_end":16410,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16415,"byte_end":16426,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16431,"byte_end":16463,"line_start":430,"line_end":430,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16468,"byte_end":16471,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let mut v = [0u8; 13579];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16476,"byte_end":16505,"line_start":432,"line_end":432,"column_start":5,"column_end":34}},{"value":"/ thread_rng().fill_bytes(&mut v);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16510,"byte_end":16546,"line_start":433,"line_end":433,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", &v[..]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16551,"byte_end":16580,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":16585,"byte_end":16592,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17814,"byte_end":17817,"line_start":473,"line_end":473,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"pub fn gen<T: Rand>(&mut Self) -> T where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a random value of a `Rand` type.","sig":null,"attributes":[{"value":"/ Return a random value of a `Rand` type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17487,"byte_end":17530,"line_start":460,"line_end":460,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17535,"byte_end":17538,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17543,"byte_end":17556,"line_start":462,"line_end":462,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17561,"byte_end":17564,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17569,"byte_end":17580,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17585,"byte_end":17617,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17622,"byte_end":17625,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17630,"byte_end":17661,"line_start":467,"line_end":467,"column_start":5,"column_end":36}},{"value":"/ let x: u32 = rng.gen();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17666,"byte_end":17693,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17698,"byte_end":17720,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", rng.gen::<(f64, bool)>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17725,"byte_end":17772,"line_start":470,"line_end":470,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17777,"byte_end":17784,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17789,"byte_end":17806,"line_start":472,"line_end":472,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18363,"byte_end":18371,"line_start":491,"line_end":491,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"pub fn gen_iter<'a, T: Rand>(&'a mut Self) -> Generator where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[{"value":"/ Return an iterator that will yield an infinite number of randomly","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17899,"byte_end":17968,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"/ generated items.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17973,"byte_end":17993,"line_start":478,"line_end":478,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":17998,"byte_end":18001,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18006,"byte_end":18019,"line_start":480,"line_end":480,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18024,"byte_end":18027,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18032,"byte_end":18039,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18044,"byte_end":18076,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18081,"byte_end":18084,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18089,"byte_end":18120,"line_start":485,"line_end":485,"column_start":5,"column_end":36}},{"value":"/ let x = rng.gen_iter::<u32>().take(10).collect::<Vec<u32>>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18125,"byte_end":18190,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/ println!(\"{:?}\", x);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18195,"byte_end":18219,"line_start":487,"line_end":487,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", rng.gen_iter::<(f64, bool)>().take(5)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18224,"byte_end":18282,"line_start":488,"line_end":488,"column_start":5,"column_end":63}},{"value":"/                     .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18287,"byte_end":18343,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18348,"byte_end":18355,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19259,"byte_end":19268,"line_start":518,"line_end":518,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"pub fn gen_range<T: PartialOrd + SampleRange>(&mut Self, T, T) -> T where\nSelf: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`).","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`low`, `high`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18518,"byte_end":18575,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18580,"byte_end":18583,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This is a convenience wrapper around","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18588,"byte_end":18628,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ `distributions::Range`. If this function will be called","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18633,"byte_end":18692,"line_start":498,"line_end":498,"column_start":5,"column_end":64}},{"value":"/ repeatedly with the same arguments, one should use `Range`, as","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18697,"byte_end":18763,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/ that will amortize the computations that allow for perfect","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18768,"byte_end":18830,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ uniformity, as they only happen on initialization.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18835,"byte_end":18889,"line_start":501,"line_end":501,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18894,"byte_end":18897,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18902,"byte_end":18914,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18919,"byte_end":18922,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Panics if `low >= high`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18927,"byte_end":18955,"line_start":505,"line_end":505,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18960,"byte_end":18963,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18968,"byte_end":18981,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18986,"byte_end":18989,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":18994,"byte_end":19005,"line_start":509,"line_end":509,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19010,"byte_end":19042,"line_start":510,"line_end":510,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19047,"byte_end":19050,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19055,"byte_end":19086,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/ let n: u32 = rng.gen_range(0, 10);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19091,"byte_end":19129,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19134,"byte_end":19156,"line_start":514,"line_end":514,"column_start":5,"column_end":27}},{"value":"/ let m: f64 = rng.gen_range(-40.0f64, 1.3e5f64);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19161,"byte_end":19212,"line_start":515,"line_end":515,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", m);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19217,"byte_end":19239,"line_start":516,"line_end":516,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19244,"byte_end":19251,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19726,"byte_end":19743,"line_start":533,"line_end":533,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"pub fn gen_weighted_bool(&mut Self, u32) -> bool where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[{"value":"/ Return a bool with a 1 in n chance of true","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19479,"byte_end":19525,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19530,"byte_end":19533,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19538,"byte_end":19551,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19556,"byte_end":19559,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19564,"byte_end":19575,"line_start":527,"line_end":527,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19580,"byte_end":19612,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19617,"byte_end":19620,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19625,"byte_end":19656,"line_start":530,"line_end":530,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(3));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19661,"byte_end":19706,"line_start":531,"line_end":531,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19711,"byte_end":19718,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20132,"byte_end":20147,"line_start":547,"line_end":547,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"pub fn gen_ascii_chars<'a>(&'a mut Self) -> AsciiGenerator where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[{"value":"/ Return an iterator of random characters from the set A-Z,a-z,0-9.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19846,"byte_end":19915,"line_start":537,"line_end":537,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19920,"byte_end":19923,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19928,"byte_end":19941,"line_start":539,"line_end":539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19946,"byte_end":19949,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19954,"byte_end":19965,"line_start":541,"line_end":541,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":19970,"byte_end":20002,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20007,"byte_end":20010,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ let s: String = thread_rng().gen_ascii_chars().take(10).collect();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20015,"byte_end":20085,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ println!(\"{}\", s);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20090,"byte_end":20112,"line_start":545,"line_end":545,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20117,"byte_end":20124,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20648,"byte_end":20654,"line_start":565,"line_end":565,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"pub fn choose<'a, T>(&mut Self, &'a [T]) -> Option<&'a T> where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a random element from `values`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20262,"byte_end":20304,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20309,"byte_end":20312,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20317,"byte_end":20356,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20361,"byte_end":20364,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20369,"byte_end":20382,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20387,"byte_end":20390,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20395,"byte_end":20402,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20407,"byte_end":20439,"line_start":558,"line_end":558,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20444,"byte_end":20447,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let choices = [1, 2, 4, 8, 16, 32];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20452,"byte_end":20491,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20496,"byte_end":20527,"line_start":561,"line_end":561,"column_start":5,"column_end":36}},{"value":"/ println!(\"{:?}\", rng.choose(&choices));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20532,"byte_end":20575,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(rng.choose(&choices[..0]), None);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20580,"byte_end":20628,"line_start":563,"line_end":563,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20633,"byte_end":20640,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20995,"byte_end":21005,"line_start":576,"line_end":576,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"pub fn choose_mut<'a, T>(&mut Self, &'a mut [T]) -> Option<&'a mut T> where\nSelf: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to a random element from `values`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20872,"byte_end":20935,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20940,"byte_end":20943,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":20948,"byte_end":20987,"line_start":575,"line_end":575,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21812,"byte_end":21819,"line_start":602,"line_end":602,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"pub fn shuffle<T>(&mut Self, &mut [T]) where Self: Sized","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[{"value":"/ Shuffle a mutable slice in place.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21262,"byte_end":21299,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21304,"byte_end":21307,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This applies Durstenfeld's algorithm for the [Fisher–Yates shuffle](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21312,"byte_end":21466,"line_start":587,"line_end":587,"column_start":5,"column_end":157}},{"value":"/ which produces an unbiased permutation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21471,"byte_end":21514,"line_start":588,"line_end":588,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21519,"byte_end":21522,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21527,"byte_end":21540,"line_start":590,"line_end":590,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21545,"byte_end":21548,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21553,"byte_end":21564,"line_start":592,"line_end":592,"column_start":5,"column_end":16}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21569,"byte_end":21601,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21606,"byte_end":21609,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21614,"byte_end":21645,"line_start":595,"line_end":595,"column_start":5,"column_end":36}},{"value":"/ let mut y = [1, 2, 3];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21650,"byte_end":21676,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21681,"byte_end":21705,"line_start":597,"line_end":597,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21710,"byte_end":21734,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21739,"byte_end":21763,"line_start":599,"line_end":599,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21768,"byte_end":21792,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":21797,"byte_end":21804,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23252,"byte_end":23261,"line_start":665,"line_end":665,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[{"value":"/ Iterator which will generate a stream of random items.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23011,"byte_end":23069,"line_start":658,"line_end":658,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23070,"byte_end":23073,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_iter`] method on [`Rng`].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23074,"byte_end":23142,"line_start":660,"line_end":660,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23143,"byte_end":23146,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ [`gen_iter`]: trait.Rng.html#method.gen_iter","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23147,"byte_end":23195,"line_start":662,"line_end":662,"column_start":1,"column_end":49}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23196,"byte_end":23223,"line_start":663,"line_end":663,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23776,"byte_end":23790,"line_start":685,"line_end":685,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":1365}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[{"value":"/ Iterator which will continuously generate random ascii characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23502,"byte_end":23572,"line_start":678,"line_end":678,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23573,"byte_end":23576,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_ascii_chars`] method on [`Rng`].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23577,"byte_end":23652,"line_start":680,"line_end":680,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23653,"byte_end":23656,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ [`gen_ascii_chars`]: trait.Rng.html#method.gen_ascii_chars","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23657,"byte_end":23719,"line_start":682,"line_end":682,"column_start":1,"column_end":63}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23720,"byte_end":23747,"line_start":683,"line_end":683,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":681},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24319,"byte_end":24330,"line_start":703,"line_end":703,"column_start":11,"column_end":22},"name":"SeedableRng","qualname":"::SeedableRng","value":"SeedableRng<Seed>: Rng","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" A random number generator that can be explicitly seeded to produce\n the same stream of randomness multiple times.\n","sig":null,"attributes":[{"value":"/ A random number generator that can be explicitly seeded to produce","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24188,"byte_end":24258,"line_start":701,"line_end":701,"column_start":1,"column_end":71}},{"value":"/ the same stream of randomness multiple times.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24259,"byte_end":24308,"line_start":702,"line_end":702,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24729,"byte_end":24735,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"reseed","qualname":"::SeedableRng::reseed","value":"pub fn reseed(&mut Self, Seed)","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Reseed an RNG with the given seed.","sig":null,"attributes":[{"value":"/ Reseed an RNG with the given seed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24348,"byte_end":24386,"line_start":704,"line_end":704,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24391,"byte_end":24394,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24399,"byte_end":24412,"line_start":706,"line_end":706,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24417,"byte_end":24420,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24425,"byte_end":24436,"line_start":708,"line_end":708,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24441,"byte_end":24482,"line_start":709,"line_end":709,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24487,"byte_end":24490,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let seed: &[_] = &[1, 2, 3, 4];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24495,"byte_end":24530,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/ let mut rng: StdRng = SeedableRng::from_seed(seed);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24535,"byte_end":24590,"line_start":712,"line_end":712,"column_start":5,"column_end":60}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24595,"byte_end":24632,"line_start":713,"line_end":713,"column_start":5,"column_end":42}},{"value":"/ rng.reseed(&[5, 6, 7, 8]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24637,"byte_end":24667,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24672,"byte_end":24709,"line_start":715,"line_end":715,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24714,"byte_end":24721,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25066,"byte_end":25075,"line_start":730,"line_end":730,"column_start":8,"column_end":17},"name":"from_seed","qualname":"::SeedableRng::from_seed","value":"pub fn from_seed(Seed) -> Self","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Create a new RNG with the given seed.","sig":null,"attributes":[{"value":"/ Create a new RNG with the given seed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24759,"byte_end":24800,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24805,"byte_end":24808,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24813,"byte_end":24826,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24831,"byte_end":24834,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24839,"byte_end":24850,"line_start":723,"line_end":723,"column_start":5,"column_end":16}},{"value":"/ use rand::{Rng, SeedableRng, StdRng};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24855,"byte_end":24896,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24901,"byte_end":24904,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let seed: &[_] = &[1, 2, 3, 4];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24909,"byte_end":24944,"line_start":726,"line_end":726,"column_start":5,"column_end":40}},{"value":"/ let mut rng: StdRng = SeedableRng::from_seed(seed);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24949,"byte_end":25004,"line_start":727,"line_end":727,"column_start":5,"column_end":60}},{"value":"/ println!(\"{}\", rng.gen::<f64>());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25009,"byte_end":25046,"line_start":728,"line_end":728,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25051,"byte_end":25058,"line_start":729,"line_end":729,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25567,"byte_end":25573,"line_start":748,"line_end":748,"column_start":12,"column_end":18},"name":"Open01","qualname":"::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n open interval `(0,1)` (not including either endpoint).","sig":null,"attributes":[{"value":"/ A wrapper for generating floating point numbers uniformly in the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25100,"byte_end":25168,"line_start":733,"line_end":733,"column_start":1,"column_end":69}},{"value":"/ open interval `(0,1)` (not including either endpoint).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25169,"byte_end":25227,"line_start":734,"line_end":734,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25228,"byte_end":25231,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ Use `Closed01` for the closed interval `[0,1]`, and the default","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25232,"byte_end":25299,"line_start":736,"line_end":736,"column_start":1,"column_end":68}},{"value":"/ `Rand` implementation for `f32` and `f64` for the half-open","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25300,"byte_end":25363,"line_start":737,"line_end":737,"column_start":1,"column_end":64}},{"value":"/ `[0,1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25364,"byte_end":25376,"line_start":738,"line_end":738,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25377,"byte_end":25380,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25381,"byte_end":25394,"line_start":740,"line_end":740,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25395,"byte_end":25406,"line_start":741,"line_end":741,"column_start":1,"column_end":12}},{"value":"/ use rand::{random, Open01};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25407,"byte_end":25438,"line_start":742,"line_end":742,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25439,"byte_end":25442,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ let Open01(val) = random::<Open01<f32>>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25443,"byte_end":25489,"line_start":744,"line_end":744,"column_start":1,"column_end":47}},{"value":"/ println!(\"f32 from (0,1): {}\", val);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25490,"byte_end":25530,"line_start":745,"line_end":745,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25531,"byte_end":25538,"line_start":746,"line_end":746,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25577,"byte_end":25582,"line_start":748,"line_end":748,"column_start":22,"column_end":27},"name":"0","qualname":"::Open01::0","value":"F","parent":{"krate":0,"index":1370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26057,"byte_end":26065,"line_start":766,"line_end":766,"column_start":12,"column_end":20},"name":"Closed01","qualname":"::Closed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for generating floating point numbers uniformly in the\n closed interval `[0,1]` (including both endpoints).","sig":null,"attributes":[{"value":"/ A wrapper for generating floating point numbers uniformly in the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25586,"byte_end":25654,"line_start":750,"line_end":750,"column_start":1,"column_end":69}},{"value":"/ closed interval `[0,1]` (including both endpoints).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25655,"byte_end":25710,"line_start":751,"line_end":751,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25711,"byte_end":25714,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ Use `Open01` for the closed interval `(0,1)`, and the default","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25715,"byte_end":25780,"line_start":753,"line_end":753,"column_start":1,"column_end":66}},{"value":"/ `Rand` implementation of `f32` and `f64` for the half-open","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25781,"byte_end":25843,"line_start":754,"line_end":754,"column_start":1,"column_end":63}},{"value":"/ `[0,1)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25844,"byte_end":25856,"line_start":755,"line_end":755,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25857,"byte_end":25860,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25861,"byte_end":25874,"line_start":757,"line_end":757,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25875,"byte_end":25878,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25879,"byte_end":25890,"line_start":759,"line_end":759,"column_start":1,"column_end":12}},{"value":"/ use rand::{random, Closed01};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25891,"byte_end":25924,"line_start":760,"line_end":760,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25925,"byte_end":25928,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ let Closed01(val) = random::<Closed01<f32>>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25929,"byte_end":25979,"line_start":762,"line_end":762,"column_start":1,"column_end":51}},{"value":"/ println!(\"f32 from [0,1]: {}\", val);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":25980,"byte_end":26020,"line_start":763,"line_end":763,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26021,"byte_end":26028,"line_start":764,"line_end":764,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26069,"byte_end":26074,"line_start":766,"line_end":766,"column_start":24,"column_end":29},"name":"0","qualname":"::Closed01::0","value":"F","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26203,"byte_end":26209,"line_start":771,"line_end":771,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::StdRng","value":"StdRng {  }","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" The standard RNG. This is designed to be efficient on the current\n platform.\n","sig":null,"attributes":[{"value":"/ The standard RNG. This is designed to be efficient on the current","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26078,"byte_end":26147,"line_start":768,"line_end":768,"column_start":1,"column_end":70}},{"value":"/ platform.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26148,"byte_end":26161,"line_start":769,"line_end":769,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26845,"byte_end":26848,"line_start":788,"line_end":788,"column_start":12,"column_end":15},"name":"new","qualname":"<StdRng>::new","value":"pub fn new() -> io::Result<StdRng>","parent":null,"children":[],"decl_id":null,"docs":" Create a randomly seeded instance of `StdRng`.","sig":null,"attributes":[{"value":"/ Create a randomly seeded instance of `StdRng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26256,"byte_end":26306,"line_start":776,"line_end":776,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26311,"byte_end":26314,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This is a very expensive operation as it has to read","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26319,"byte_end":26375,"line_start":778,"line_end":778,"column_start":5,"column_end":61}},{"value":"/ randomness from the operating system and use this in an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26380,"byte_end":26439,"line_start":779,"line_end":779,"column_start":5,"column_end":64}},{"value":"/ expensive seeding operation. If one is only generating a small","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26444,"byte_end":26510,"line_start":780,"line_end":780,"column_start":5,"column_end":71}},{"value":"/ number of random numbers, or doesn't need the utmost speed for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26515,"byte_end":26581,"line_start":781,"line_end":781,"column_start":5,"column_end":71}},{"value":"/ generating each number, `thread_rng` and/or `random` may be more","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26586,"byte_end":26654,"line_start":782,"line_end":782,"column_start":5,"column_end":73}},{"value":"/ appropriate.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26659,"byte_end":26675,"line_start":783,"line_end":783,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26680,"byte_end":26683,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Reading the randomness from the OS may fail, and any error is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26688,"byte_end":26753,"line_start":785,"line_end":785,"column_start":5,"column_end":70}},{"value":"/ propagated via the `io::Result` return value.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26758,"byte_end":26807,"line_start":786,"line_end":786,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26812,"byte_end":26833,"line_start":787,"line_end":787,"column_start":5,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28237,"byte_end":28245,"line_start":836,"line_end":836,"column_start":8,"column_end":16},"name":"weak_rng","qualname":"::weak_rng","value":"pub fn weak_rng() -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Create a weak random number generator with a default algorithm and seed.","sig":null,"attributes":[{"value":"/ Create a weak random number generator with a default algorithm and seed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27792,"byte_end":27868,"line_start":827,"line_end":827,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27869,"byte_end":27872,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ It returns the fastest `Rng` algorithm currently available in Rust without","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27873,"byte_end":27951,"line_start":829,"line_end":829,"column_start":1,"column_end":79}},{"value":"/ consideration for cryptography or security. If you require a specifically","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27952,"byte_end":28029,"line_start":830,"line_end":830,"column_start":1,"column_end":78}},{"value":"/ seeded `Rng` for consistency over time you should pick one algorithm and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28030,"byte_end":28106,"line_start":831,"line_end":831,"column_start":1,"column_end":77}},{"value":"/ create the `Rng` yourself.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28107,"byte_end":28137,"line_start":832,"line_end":832,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28138,"byte_end":28141,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ This will seed the generator with randomness from thread_rng.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28142,"byte_end":28207,"line_start":834,"line_end":834,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28208,"byte_end":28229,"line_start":835,"line_end":835,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28923,"byte_end":28932,"line_start":862,"line_end":862,"column_start":12,"column_end":21},"name":"ThreadRng","qualname":"::ThreadRng","value":"ThreadRng {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" The thread-local RNG.\n","sig":null,"attributes":[{"value":"/ The thread-local RNG.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28840,"byte_end":28865,"line_start":859,"line_end":859,"column_start":1,"column_end":26}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28866,"byte_end":28887,"line_start":860,"line_end":860,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29673,"byte_end":29683,"line_start":879,"line_end":879,"column_start":8,"column_end":18},"name":"thread_rng","qualname":"::thread_rng","value":"pub fn thread_rng() -> ThreadRng","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the lazily-initialized thread-local random number\n generator, seeded by the system. Intended to be used in method\n chaining style, e.g. `thread_rng().gen::<i32>()`.","sig":null,"attributes":[{"value":"/ Retrieve the lazily-initialized thread-local random number","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28976,"byte_end":29038,"line_start":866,"line_end":866,"column_start":1,"column_end":63}},{"value":"/ generator, seeded by the system. Intended to be used in method","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29039,"byte_end":29105,"line_start":867,"line_end":867,"column_start":1,"column_end":67}},{"value":"/ chaining style, e.g. `thread_rng().gen::<i32>()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29106,"byte_end":29159,"line_start":868,"line_end":868,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29160,"byte_end":29163,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ After generating a certain amount of randomness, the RNG will reseed itself","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29164,"byte_end":29243,"line_start":870,"line_end":870,"column_start":1,"column_end":80}},{"value":"/ from the operating system or, if the operating system RNG returns an error,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29244,"byte_end":29323,"line_start":871,"line_end":871,"column_start":1,"column_end":80}},{"value":"/ a seed based on the current system time.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29324,"byte_end":29368,"line_start":872,"line_end":872,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29369,"byte_end":29372,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ The internal RNG used is platform and architecture dependent, even","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29373,"byte_end":29443,"line_start":874,"line_end":874,"column_start":1,"column_end":71}},{"value":"/ if the operating system random number generator is rigged to give","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29444,"byte_end":29513,"line_start":875,"line_end":875,"column_start":1,"column_end":70}},{"value":"/ the same sequence always. If absolute consistency is required,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29514,"byte_end":29580,"line_start":876,"line_end":876,"column_start":1,"column_end":67}},{"value":"/ explicitly select an RNG, e.g. `IsaacRng` or `Isaac64Rng`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29581,"byte_end":29643,"line_start":877,"line_end":877,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":29644,"byte_end":29665,"line_start":878,"line_end":878,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":705},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31682,"byte_end":31688,"line_start":955,"line_end":955,"column_start":8,"column_end":14},"name":"random","qualname":"::random","value":"pub fn random<T: Rand>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Generates a random value using the thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generates a random value using the thread-local random number generator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30604,"byte_end":30680,"line_start":911,"line_end":911,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30681,"byte_end":30684,"line_start":912,"line_end":912,"column_start":1,"column_end":4}},{"value":"/ `random()` can generate various types of random things, and so may require","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30685,"byte_end":30763,"line_start":913,"line_end":913,"column_start":1,"column_end":79}},{"value":"/ type hinting to generate the specific type you want.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30764,"byte_end":30820,"line_start":914,"line_end":914,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30821,"byte_end":30824,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ This function uses the thread local random number generator. This means","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30825,"byte_end":30900,"line_start":916,"line_end":916,"column_start":1,"column_end":76}},{"value":"/ that if you're calling `random()` in a loop, caching the generator can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30901,"byte_end":30975,"line_start":917,"line_end":917,"column_start":1,"column_end":75}},{"value":"/ increase performance. An example is shown below.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30976,"byte_end":31028,"line_start":918,"line_end":918,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31029,"byte_end":31032,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31033,"byte_end":31047,"line_start":920,"line_end":920,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31048,"byte_end":31051,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31052,"byte_end":31059,"line_start":922,"line_end":922,"column_start":1,"column_end":8}},{"value":"/ let x = rand::random::<u8>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31060,"byte_end":31093,"line_start":923,"line_end":923,"column_start":1,"column_end":34}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31094,"byte_end":31116,"line_start":924,"line_end":924,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31117,"byte_end":31120,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ let y = rand::random::<f64>();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31121,"byte_end":31155,"line_start":926,"line_end":926,"column_start":1,"column_end":35}},{"value":"/ println!(\"{}\", y);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31156,"byte_end":31178,"line_start":927,"line_end":927,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31179,"byte_end":31182,"line_start":928,"line_end":928,"column_start":1,"column_end":4}},{"value":"/ if rand::random() { // generates a boolean","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31183,"byte_end":31229,"line_start":929,"line_end":929,"column_start":1,"column_end":47}},{"value":"/     println!(\"Better lucky than good!\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31230,"byte_end":31274,"line_start":930,"line_end":930,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31275,"byte_end":31280,"line_start":931,"line_end":931,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31281,"byte_end":31288,"line_start":932,"line_end":932,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31289,"byte_end":31292,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/ Caching the thread local random number generator:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31293,"byte_end":31346,"line_start":934,"line_end":934,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31347,"byte_end":31350,"line_start":935,"line_end":935,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31351,"byte_end":31358,"line_start":936,"line_end":936,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31359,"byte_end":31377,"line_start":937,"line_end":937,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31378,"byte_end":31381,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ let mut v = vec![1, 2, 3];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31382,"byte_end":31412,"line_start":939,"line_end":939,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31413,"byte_end":31416,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31417,"byte_end":31444,"line_start":941,"line_end":941,"column_start":1,"column_end":28}},{"value":"/     *x = rand::random()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31445,"byte_end":31472,"line_start":942,"line_end":942,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31473,"byte_end":31478,"line_start":943,"line_end":943,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31479,"byte_end":31482,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ // can be made faster by caching thread_rng","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31483,"byte_end":31530,"line_start":945,"line_end":945,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31531,"byte_end":31534,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31535,"byte_end":31572,"line_start":947,"line_end":947,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31573,"byte_end":31576,"line_start":948,"line_end":948,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31577,"byte_end":31604,"line_start":949,"line_end":949,"column_start":1,"column_end":28}},{"value":"/     *x = rng.gen();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31605,"byte_end":31628,"line_start":950,"line_end":950,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31629,"byte_end":31634,"line_start":951,"line_end":951,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31635,"byte_end":31642,"line_start":952,"line_end":952,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31643,"byte_end":31664,"line_start":953,"line_end":953,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31665,"byte_end":31674,"line_start":954,"line_end":954,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32210,"byte_end":32216,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"sample","qualname":"::sample","value":"pub fn sample<T, I, R>(&mut R, I, usize) -> Vec<T> where I: IntoIterator<Item\n= T>, R: Rng","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use `seq::sample_iter` instead.","sig":null,"attributes":[{"value":"/ DEPRECATED: use `seq::sample_iter` instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31733,"byte_end":31780,"line_start":959,"line_end":959,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31781,"byte_end":31784,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Randomly sample up to `amount` elements from a finite iterator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31785,"byte_end":31852,"line_start":961,"line_end":961,"column_start":1,"column_end":68}},{"value":"/ The order of elements in the sample is not random.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31853,"byte_end":31907,"line_start":962,"line_end":962,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31908,"byte_end":31911,"line_start":963,"line_end":963,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31912,"byte_end":31925,"line_start":964,"line_end":964,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31926,"byte_end":31929,"line_start":965,"line_end":965,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31930,"byte_end":31941,"line_start":966,"line_end":966,"column_start":1,"column_end":12}},{"value":"/ use rand::{thread_rng, sample};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31942,"byte_end":31977,"line_start":967,"line_end":967,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31978,"byte_end":31981,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":31982,"byte_end":32013,"line_start":969,"line_end":969,"column_start":1,"column_end":32}},{"value":"/ let sample = sample(&mut rng, 1..100, 5);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32014,"byte_end":32059,"line_start":970,"line_end":970,"column_start":1,"column_end":46}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32060,"byte_end":32089,"line_start":971,"line_end":971,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32090,"byte_end":32097,"line_start":972,"line_end":972,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32098,"byte_end":32119,"line_start":973,"line_end":973,"column_start":1,"column_end":22}},{"value":"inline(always)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32120,"byte_end":32137,"line_start":974,"line_end":974,"column_start":1,"column_end":18}},{"value":"deprecated(since = \"0.4.0\", note = \"renamed to seq::sample_iter\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":32138,"byte_end":32202,"line_start":975,"line_end":975,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55482,"byte_end":55487,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55818,"byte_end":55823,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55975,"byte_end":55980,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64746,"byte_end":64751,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65393,"byte_end":65408,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65626,"byte_end":65641,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65883,"byte_end":65888,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65992,"byte_end":66007,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66111,"byte_end":66126,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66242,"byte_end":66247,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66520,"byte_end":66535,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66750,"byte_end":66765,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68323,"byte_end":68333,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68750,"byte_end":68760,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68875,"byte_end":68885,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69906,"byte_end":69913,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70374,"byte_end":70381,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70496,"byte_end":70503,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71069,"byte_end":71077,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71396,"byte_end":71404,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71519,"byte_end":71527,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74410,"byte_end":74424,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76113,"byte_end":76119,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76535,"byte_end":76541,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76656,"byte_end":76662,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77368,"byte_end":77377,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77777,"byte_end":77786,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77901,"byte_end":77910,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80232,"byte_end":80236,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81247,"byte_end":81250,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81552,"byte_end":81555,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81670,"byte_end":81673,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41506,"byte_end":41516,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41545,"byte_end":41555,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41636,"byte_end":41646,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41778,"byte_end":41788,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41888,"byte_end":41898,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43357,"byte_end":43371,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":44768,"byte_end":44782,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":44915,"byte_end":44929,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":109902,"byte_end":109911,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110506,"byte_end":110516,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111004,"byte_end":111014,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111180,"byte_end":111190,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111388,"byte_end":111397,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":136619,"byte_end":136628,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139259,"byte_end":139264,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139396,"byte_end":139401,"line_start":44,"line_end":44,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139607,"byte_end":139612,"line_start":50,"line_end":50,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":143687,"byte_end":143692,"line_start":183,"line_end":183,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":144056,"byte_end":144061,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156409,"byte_end":156416,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156586,"byte_end":156593,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160062,"byte_end":160074,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":161019,"byte_end":161031,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":161593,"byte_end":161605,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163343,"byte_end":163360,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163463,"byte_end":163480,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/rand_impls.rs","byte_start":183551,"byte_end":183557,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190566,"byte_end":190575,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":194191,"byte_end":194200,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":194475,"byte_end":194484,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":195116,"byte_end":195125,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":200181,"byte_end":200189,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":204302,"byte_end":204310,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":204383,"byte_end":204391,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":205221,"byte_end":205229,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":206190,"byte_end":206198,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":206637,"byte_end":206645,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210504,"byte_end":210514,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215268,"byte_end":215278,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215353,"byte_end":215363,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215866,"byte_end":215876,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":216842,"byte_end":216852,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":217293,"byte_end":217303,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221334,"byte_end":221345,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221897,"byte_end":221908,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":222224,"byte_end":222235,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":223002,"byte_end":223013,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":22614,"byte_end":22617,"line_start":636,"line_end":636,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23384,"byte_end":23393,"line_start":670,"line_end":670,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23856,"byte_end":23870,"line_start":689,"line_end":689,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26243,"byte_end":26249,"line_start":775,"line_end":775,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27236,"byte_end":27242,"line_start":803,"line_end":803,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27455,"byte_end":27461,"line_start":815,"line_end":815,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28467,"byte_end":28484,"line_start":846,"line_end":846,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30304,"byte_end":30313,"line_start":896,"line_end":896,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10242,"byte_end":10255,"line_start":278,"line_end":278,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":21}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40307,"byte_end":40312,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40344,"byte_end":40349,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40381,"byte_end":40387,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":40419,"byte_end":40430,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10265,"byte_end":10271,"line_start":279,"line_end":279,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":229}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10303,"byte_end":10305,"line_start":280,"line_end":280,"column_start":31,"column_end":33},"ref_id":{"krate":0,"index":293}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10337,"byte_end":10341,"line_start":281,"line_end":281,"column_start":31,"column_end":35},"ref_id":{"krate":0,"index":345}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10351,"byte_end":10360,"line_start":282,"line_end":282,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":362}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":10416,"byte_end":10419,"line_start":283,"line_end":283,"column_start":55,"column_end":58},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55482,"byte_end":55487,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55818,"byte_end":55823,"line_start":65,"line_end":65,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":712},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":55975,"byte_end":55980,"line_start":69,"line_end":69,"column_start":51,"column_end":56},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":712},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/range.rs","byte_start":56294,"byte_end":56299,"line_start":78,"line_end":78,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":64746,"byte_end":64751,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65393,"byte_end":65408,"line_start":116,"line_end":116,"column_start":6,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65626,"byte_end":65641,"line_start":125,"line_end":125,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65883,"byte_end":65888,"line_start":136,"line_end":136,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":65992,"byte_end":66007,"line_start":139,"line_end":139,"column_start":22,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66111,"byte_end":66126,"line_start":142,"line_end":142,"column_start":22,"column_end":37},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66242,"byte_end":66247,"line_start":146,"line_end":146,"column_start":33,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66520,"byte_end":66535,"line_start":155,"line_end":155,"column_start":33,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":795},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":66750,"byte_end":66765,"line_start":162,"line_end":162,"column_start":33,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":803},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68323,"byte_end":68333,"line_start":214,"line_end":214,"column_start":6,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68750,"byte_end":68760,"line_start":227,"line_end":227,"column_start":22,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":68875,"byte_end":68885,"line_start":230,"line_end":230,"column_start":33,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":69906,"byte_end":69913,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70374,"byte_end":70381,"line_start":281,"line_end":281,"column_start":22,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":70496,"byte_end":70503,"line_start":284,"line_end":284,"column_start":33,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71069,"byte_end":71077,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71396,"byte_end":71404,"line_start":319,"line_end":319,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/gamma.rs","byte_start":71519,"byte_end":71527,"line_start":322,"line_end":322,"column_start":33,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":74410,"byte_end":74424,"line_start":39,"line_end":39,"column_start":15,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":847},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76113,"byte_end":76119,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76535,"byte_end":76541,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":76656,"byte_end":76662,"line_start":116,"line_end":116,"column_start":33,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":855},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77368,"byte_end":77377,"line_start":144,"line_end":144,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77777,"byte_end":77786,"line_start":157,"line_end":157,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/normal.rs","byte_start":77901,"byte_end":77910,"line_start":160,"line_end":160,"column_start":33,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":863},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":80232,"byte_end":80236,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81247,"byte_end":81250,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81552,"byte_end":81555,"line_start":90,"line_end":90,"column_start":22,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/exponential.rs","byte_start":81670,"byte_end":81673,"line_start":93,"line_end":93,"column_start":33,"column_end":36},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41176,"byte_end":41182,"line_start":58,"line_end":58,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41506,"byte_end":41516,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41545,"byte_end":41555,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41636,"byte_end":41646,"line_start":75,"line_end":75,"column_start":33,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41778,"byte_end":41788,"line_start":79,"line_end":79,"column_start":44,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":41888,"byte_end":41898,"line_start":85,"line_end":85,"column_start":11,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":43357,"byte_end":43371,"line_start":131,"line_end":131,"column_start":20,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":44768,"byte_end":44782,"line_start":168,"line_end":168,"column_start":34,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":186}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/distributions/mod.rs","byte_start":44915,"byte_end":44929,"line_start":172,"line_end":172,"column_start":45,"column_end":59},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":903},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":109902,"byte_end":109911,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":242},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":110506,"byte_end":110516,"line_start":92,"line_end":92,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111004,"byte_end":111014,"line_start":105,"line_end":105,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111180,"byte_end":111190,"line_start":112,"line_end":112,"column_start":30,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":912},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":111388,"byte_end":111397,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/jitter.rs","byte_start":136619,"byte_end":136628,"line_start":717,"line_end":717,"column_start":14,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":242},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139259,"byte_end":139264,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139396,"byte_end":139401,"line_start":44,"line_end":44,"column_start":14,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":299},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":139607,"byte_end":139612,"line_start":50,"line_end":50,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":143687,"byte_end":143692,"line_start":183,"line_end":183,"column_start":10,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/os.rs","byte_start":144056,"byte_end":144061,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":331},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156409,"byte_end":156416,"line_start":38,"line_end":38,"column_start":15,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/read.rs","byte_start":156586,"byte_end":156593,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":160062,"byte_end":160074,"line_start":33,"line_end":33,"column_start":33,"column_end":45},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":161019,"byte_end":161031,"line_start":61,"line_end":61,"column_start":41,"column_end":53},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":941},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":161593,"byte_end":161605,"line_start":82,"line_end":82,"column_start":33,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":941},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163343,"byte_end":163360,"line_start":139,"line_end":139,"column_start":40,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":952},"to":{"krate":0,"index":385}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/reseeding.rs","byte_start":163463,"byte_end":163480,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":952},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/rand_impls.rs","byte_start":183551,"byte_end":183557,"line_start":238,"line_end":238,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":2,"index":31731},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":190566,"byte_end":190575,"line_start":83,"line_end":83,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":194191,"byte_end":194200,"line_start":188,"line_end":188,"column_start":14,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1303},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":194475,"byte_end":194484,"line_start":201,"line_end":201,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1303},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/chacha.rs","byte_start":195116,"byte_end":195125,"line_start":224,"line_end":224,"column_start":15,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1303},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":200181,"byte_end":200189,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":204302,"byte_end":204310,"line_start":189,"line_end":189,"column_start":16,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1316},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":204383,"byte_end":204391,"line_start":195,"line_end":195,"column_start":14,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":205221,"byte_end":205229,"line_start":219,"line_end":219,"column_start":37,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":206190,"byte_end":206198,"line_start":248,"line_end":248,"column_start":15,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1316},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac.rs","byte_start":206637,"byte_end":206645,"line_start":267,"line_end":267,"column_start":21,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1316},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":210504,"byte_end":210514,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215268,"byte_end":215278,"line_start":190,"line_end":190,"column_start":16,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215353,"byte_end":215363,"line_start":196,"line_end":196,"column_start":14,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1328},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":215866,"byte_end":215876,"line_start":217,"line_end":217,"column_start":37,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1328},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":216842,"byte_end":216852,"line_start":246,"line_end":246,"column_start":15,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1328},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/isaac64.rs","byte_start":217293,"byte_end":217303,"line_start":265,"line_end":265,"column_start":21,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1328},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221334,"byte_end":221345,"line_start":35,"line_end":35,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":221897,"byte_end":221908,"line_start":52,"line_end":52,"column_start":14,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":222224,"byte_end":222235,"line_start":66,"line_end":66,"column_start":32,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/prng/xorshift.rs","byte_start":223002,"byte_end":223013,"line_start":92,"line_end":92,"column_start":15,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":12341,"byte_end":12346,"line_start":332,"line_end":332,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":623}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":22614,"byte_end":22617,"line_start":636,"line_end":636,"column_start":25,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23384,"byte_end":23393,"line_start":670,"line_end":670,"column_start":40,"column_end":49},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":23856,"byte_end":23870,"line_start":689,"line_end":689,"column_start":31,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1362},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":24338,"byte_end":24341,"line_start":703,"line_end":703,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":626},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":26243,"byte_end":26249,"line_start":775,"line_end":775,"column_start":6,"column_end":12},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27236,"byte_end":27242,"line_start":803,"line_end":803,"column_start":14,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1384},"to":{"krate":0,"index":626}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":27455,"byte_end":27461,"line_start":815,"line_end":815,"column_start":39,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1384},"to":{"krate":0,"index":681}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":28467,"byte_end":28484,"line_start":846,"line_end":846,"column_start":38,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1391},"to":{"krate":0,"index":385}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.4.2/src/lib.rs","byte_start":30304,"byte_end":30313,"line_start":896,"line_end":896,"column_start":14,"column_end":23},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1395},"to":{"krate":0,"index":626}}]}