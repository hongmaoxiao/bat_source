{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ansi_term","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c85d3d0c3496b35d","-C","extra-filename=-c85d3d0c3496b35d","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libansi_term-c85d3d0c3496b35d.rmeta"},"prelude":{"crate_id":{"name":"ansi_term","disambiguator":[1804833041718010624,15570413559376305760]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":0,"byte_end":39457,"line_start":1,"line_end":1099,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15221,"byte_end":15227,"line_start":410,"line_end":410,"column_start":9,"column_end":15},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":0,"byte_end":39457,"line_start":1,"line_end":1099,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":254},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":15},{"krate":0,"index":21},{"krate":0,"index":135},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":144},{"krate":0,"index":140},{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":161},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":169},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":179},{"krate":0,"index":178},{"krate":0,"index":176},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":181},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":209},{"krate":0,"index":208},{"krate":0,"index":206},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":215},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":229},{"krate":0,"index":228},{"krate":0,"index":226},{"krate":0,"index":82},{"krate":0,"index":108},{"krate":0,"index":235},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":246},{"krate":0,"index":245},{"krate":0,"index":243},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":128},{"krate":0,"index":131}],"decl_id":null,"docs":" This is a library for controlling colours and formatting, such as\n red bold text or blue underlined text, on ANSI terminals.","sig":null,"attributes":[{"value":"/ This is a library for controlling colours and formatting, such as","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ red bold text or blue underlined text, on ANSI terminals.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":70,"byte_end":131,"line_start":2,"line_end":2,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":132,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":136,"byte_end":139,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Basic usage","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":140,"byte_end":158,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":159,"byte_end":162,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ There are two main data structures in this crate that you need to be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":163,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ concerned with: `ANSIString` and `Style`. A `Style` holds stylistic","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":236,"byte_end":307,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ information: colours, whether the text should be bold, or blinking, or","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":308,"byte_end":382,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ whatever. There are also `Colour` variants that represent simple foreground","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":383,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ colour styles. An `ANSIString` is a string paired with a `Style`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":463,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":533,"byte_end":536,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ (Yes, it’s British English, but you won’t have to write “colour” very often.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":537,"byte_end":625,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ `Style` is used the majority of the time.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":626,"byte_end":672,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":673,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To format a string, call the `paint` method on a `Style` or a `Colour`,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":677,"byte_end":752,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ passing in the string you want to format as the argument. For example,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":753,"byte_end":827,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ here’s how to get some red text:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":828,"byte_end":866,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":867,"byte_end":870,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Red;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":871,"byte_end":906,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/     println!(\"This is in red: {}\", Red.paint(\"a red string\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":907,"byte_end":973,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":974,"byte_end":977,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ It’s important to note that the `paint` method does *not* actually return a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":978,"byte_end":1059,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ string with the ANSI control characters surrounding it. Instead, it returns","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1060,"byte_end":1139,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ an `ANSIString` value that has a `Display` implementation that, when","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1140,"byte_end":1212,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ formatted, returns the characters. This allows strings to be printed with a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1213,"byte_end":1292,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ minimum of `String` allocations being performed behind the scenes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1293,"byte_end":1363,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1364,"byte_end":1367,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If you *do* want to get at the escape codes, then you can convert the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1368,"byte_end":1441,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ `ANSIString` to a string as you would any other `Display` value:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1442,"byte_end":1510,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1511,"byte_end":1514,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Red;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1515,"byte_end":1550,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/     use std::string::ToString;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1551,"byte_end":1585,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/     let red_string = Red.paint(\"a red string\").to_string();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1586,"byte_end":1649,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1650,"byte_end":1653,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1654,"byte_end":1657,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Bold, underline, background, and other styles","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1658,"byte_end":1710,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1711,"byte_end":1714,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ For anything more complex than plain foreground colour changes, you need to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1715,"byte_end":1794,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ construct `Style` objects themselves, rather than beginning with a `Colour`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1795,"byte_end":1875,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ You can do this by chaining methods based on a new `Style`, created with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1876,"byte_end":1952,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ `Style::new()`. Each method creates a new style that has that specific","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":1953,"byte_end":2027,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ property set. For example:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2028,"byte_end":2058,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2059,"byte_end":2062,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Style;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2063,"byte_end":2092,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/     println!(\"How about some {} and {}?\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2093,"byte_end":2138,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/              Style::new().bold().paint(\"bold\"),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2139,"byte_end":2190,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/              Style::new().underline().paint(\"underline\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2191,"byte_end":2253,"line_start":48,"line_end":48,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2254,"byte_end":2257,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ For brevity, these methods have also been implemented for `Colour` values,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2258,"byte_end":2336,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ so you can give your styles a foreground colour without having to begin with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2337,"byte_end":2417,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ an empty `Style` value:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2418,"byte_end":2445,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2446,"byte_end":2449,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::{Blue, Yellow};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2450,"byte_end":2496,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/     println!(\"Demonstrating {} and {}!\",","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2497,"byte_end":2541,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/              Blue.bold().paint(\"blue bold\"),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2542,"byte_end":2590,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/              Yellow.underline().paint(\"yellow underline\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2591,"byte_end":2654,"line_start":57,"line_end":57,"column_start":1,"column_end":64}},{"value":"/     println!(\"Yellow on blue: {}\", Yellow.on(Blue).paint(\"wow!\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2655,"byte_end":2725,"line_start":58,"line_end":58,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2726,"byte_end":2729,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The complete list of styles you can use are: `bold`, `dimmed`, `italic`,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2730,"byte_end":2806,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ `underline`, `blink`, `reverse`, `hidden`, `strikethrough`, and `on` for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2807,"byte_end":2883,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ background colours.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2884,"byte_end":2907,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ In some cases, you may find it easier to change the foreground on an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2912,"byte_end":2984,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ existing `Style` rather than starting from the appropriate `Colour`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":2985,"byte_end":3057,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ You can do this using the `fg` method:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3058,"byte_end":3100,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3101,"byte_end":3104,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Style;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3105,"byte_end":3134,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/     use ansi_term::Colour::{Blue, Cyan, Yellow};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3135,"byte_end":3187,"line_start":69,"line_end":69,"column_start":1,"column_end":53}},{"value":"/     println!(\"Yellow on blue: {}\", Style::new().on(Blue).fg(Yellow).paint(\"yow!\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3188,"byte_end":3275,"line_start":70,"line_end":70,"column_start":1,"column_end":88}},{"value":"/     println!(\"Also yellow on blue: {}\", Cyan.on(Blue).fg(Yellow).paint(\"zow!\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3276,"byte_end":3360,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3361,"byte_end":3364,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Finally, you can turn a `Colour` into a `Style` with the `normal` method.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3365,"byte_end":3442,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ This will produce the exact same `ANSIString` as if you just used the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3443,"byte_end":3516,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ `paint` method on the `Colour` directly, but it’s useful in certain cases:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3517,"byte_end":3597,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ for example, you may have a method that returns `Styles`, and need to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3598,"byte_end":3671,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ represent both the “red bold” and “red, but not bold” styles with values of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3672,"byte_end":3759,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ the same type. The `Style` struct also has a `Default` implementation if you","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3760,"byte_end":3840,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ want to have a style with *nothing* set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3841,"byte_end":3885,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3886,"byte_end":3889,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Style;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3890,"byte_end":3919,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     use ansi_term::Colour::Red;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3920,"byte_end":3955,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/     Red.normal().paint(\"yet another red string\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":3956,"byte_end":4009,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     Style::default().paint(\"a completely regular string\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4010,"byte_end":4072,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4073,"byte_end":4076,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4077,"byte_end":4080,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Extended colours","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4081,"byte_end":4104,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4105,"byte_end":4108,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ You can access the extended range of 256 colours by using the `Fixed` colour","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4109,"byte_end":4189,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ variant, which takes an argument of the colour number to use. This can be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4190,"byte_end":4267,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ included wherever you would use a `Colour`:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4268,"byte_end":4315,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4316,"byte_end":4319,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Fixed;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4320,"byte_end":4357,"line_start":93,"line_end":93,"column_start":1,"column_end":38}},{"value":"/     Fixed(134).paint(\"A sort of light purple\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4358,"byte_end":4409,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     Fixed(221).on(Fixed(124)).paint(\"Mustard in the ketchup\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4410,"byte_end":4476,"line_start":95,"line_end":95,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4477,"byte_end":4480,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ The first sixteen of these values are the same as the normal and bold","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4481,"byte_end":4554,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ standard colour variants. There’s nothing stopping you from using these as","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4555,"byte_end":4635,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ `Fixed` colours instead, but there’s nothing to be gained by doing so","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4636,"byte_end":4711,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/ either.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4712,"byte_end":4723,"line_start":100,"line_end":100,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4724,"byte_end":4727,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ You can also access full 24-bit color by using the `RGB` colour variant,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4728,"byte_end":4804,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ which takes separate `u8` arguments for red, green, and blue:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4805,"byte_end":4870,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::RGB;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4875,"byte_end":4910,"line_start":105,"line_end":105,"column_start":1,"column_end":36}},{"value":"/     RGB(70, 130, 180).paint(\"Steel blue\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4911,"byte_end":4957,"line_start":106,"line_end":106,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4958,"byte_end":4961,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Combining successive coloured strings","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":4962,"byte_end":5006,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5007,"byte_end":5010,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The benefit of writing ANSI escape codes to the terminal is that they","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5011,"byte_end":5084,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ *stack*: you do not need to end every coloured string with a reset code if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5085,"byte_end":5163,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the text that follows it is of a similar style. For example, if you want to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5164,"byte_end":5243,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ have some blue text followed by some blue bold text, it’s possible to send","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5244,"byte_end":5324,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ the ANSI code for blue, followed by the ANSI code for bold, and finishing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5325,"byte_end":5402,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ with a reset code without having to have an extra one between the two","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5403,"byte_end":5476,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/ strings.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5477,"byte_end":5489,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5490,"byte_end":5493,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This crate can optimise the ANSI codes that get printed in situations like","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5494,"byte_end":5572,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/ this, making life easier for your terminal renderer. The `ANSIStrings`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5573,"byte_end":5647,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/ struct takes a slice of several `ANSIString` values, and will iterate over","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5648,"byte_end":5726,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/ each of them, printing only the codes for the styles that need to be updated","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5727,"byte_end":5807,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ as part of its formatting routine.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5808,"byte_end":5846,"line_start":122,"line_end":122,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5847,"byte_end":5850,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The following code snippet uses this to enclose a binary number displayed in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5851,"byte_end":5931,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ red bold text inside some red, but not bold, brackets:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5932,"byte_end":5990,"line_start":125,"line_end":125,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5991,"byte_end":5994,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Red;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":5995,"byte_end":6030,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"/     use ansi_term::{ANSIString, ANSIStrings};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6031,"byte_end":6080,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/     let some_value = format!(\"{:b}\", 42);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6081,"byte_end":6126,"line_start":129,"line_end":129,"column_start":1,"column_end":46}},{"value":"/     let strings: &[ANSIString<'static>] = &[","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6127,"byte_end":6175,"line_start":130,"line_end":130,"column_start":1,"column_end":49}},{"value":"/         Red.paint(\"[\"),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6176,"byte_end":6203,"line_start":131,"line_end":131,"column_start":1,"column_end":28}},{"value":"/         Red.bold().paint(some_value),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6204,"byte_end":6245,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/         Red.paint(\"]\"),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6246,"byte_end":6273,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/     ];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6274,"byte_end":6284,"line_start":134,"line_end":134,"column_start":1,"column_end":11}},{"value":"/     println!(\"Value: {}\", ANSIStrings(strings));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6285,"byte_end":6337,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6338,"byte_end":6341,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ There are several things to note here. Firstly, the `paint` method can take","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6342,"byte_end":6421,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ *either* an owned `String` or a borrowed `&str`. Internally, an `ANSIString`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6422,"byte_end":6502,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/ holds a copy-on-write (`Cow`) string value to deal with both owned and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6503,"byte_end":6577,"line_start":139,"line_end":139,"column_start":1,"column_end":75}},{"value":"/ borrowed strings at the same time. This is used here to display a `String`,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6578,"byte_end":6657,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ the result of the `format!` call, using the same mechanism as some","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6658,"byte_end":6728,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ statically-available `&str` slices. Secondly, that the `ANSIStrings` value","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6729,"byte_end":6807,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ works in the same way as its singular counterpart, with a `Display`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6808,"byte_end":6879,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ implementation that only performs the formatting when required.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6880,"byte_end":6947,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6948,"byte_end":6951,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Byte strings","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6952,"byte_end":6971,"line_start":146,"line_end":146,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6972,"byte_end":6975,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This library also supports formatting `[u8]` byte strings; this supports","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":6976,"byte_end":7052,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ applications working with text in an unknown encoding.  `Style` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7053,"byte_end":7124,"line_start":149,"line_end":149,"column_start":1,"column_end":72}},{"value":"/ `Color` support painting `[u8]` values, resulting in an `ANSIByteString`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7125,"byte_end":7202,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ This type does not implement `Display`, as it may not contain UTF-8, but","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7203,"byte_end":7279,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/ it does provide a method `write_to` to write the result to any","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7280,"byte_end":7346,"line_start":152,"line_end":152,"column_start":1,"column_end":67}},{"value":"/ `io::Write`:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7347,"byte_end":7363,"line_start":153,"line_end":153,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7364,"byte_end":7367,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Green;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7368,"byte_end":7405,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/     Green.paint(\"user data\".as_bytes()).write_to(&mut std::io::stdout()).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7406,"byte_end":7492,"line_start":156,"line_end":156,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7493,"byte_end":7496,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Similarly, the type `ANSIByteStrings` supports writing a list of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7497,"byte_end":7565,"line_start":158,"line_end":158,"column_start":1,"column_end":69}},{"value":"/ `ANSIByteString` values with minimal escape sequences:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7566,"byte_end":7624,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7625,"byte_end":7628,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/     use ansi_term::Colour::Green;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7629,"byte_end":7666,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"/     use ansi_term::ANSIByteStrings;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7667,"byte_end":7706,"line_start":162,"line_end":162,"column_start":1,"column_end":40}},{"value":"/     ANSIByteStrings(&[","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7707,"byte_end":7733,"line_start":163,"line_end":163,"column_start":1,"column_end":27}},{"value":"/         Green.paint(\"user data 1\\n\".as_bytes()),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7734,"byte_end":7786,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/         Green.bold().paint(\"user data 2\\n\".as_bytes()),","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7787,"byte_end":7846,"line_start":165,"line_end":165,"column_start":1,"column_end":60}},{"value":"/     ]).write_to(&mut std::io::stdout()).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7847,"byte_end":7900,"line_start":166,"line_end":166,"column_start":1,"column_end":54}},{"value":"crate_name = \"ansi_term\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7903,"byte_end":7931,"line_start":169,"line_end":169,"column_start":1,"column_end":29}},{"value":"crate_type = \"rlib\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7932,"byte_end":7955,"line_start":170,"line_end":170,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7956,"byte_end":7980,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":7982,"byte_end":8020,"line_start":173,"line_end":173,"column_start":1,"column_end":39}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":8021,"byte_end":8043,"line_start":174,"line_end":174,"column_start":1,"column_end":23}},{"value":"warn(trivial_casts, trivial_numeric_casts)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":8044,"byte_end":8090,"line_start":175,"line_end":175,"column_start":1,"column_end":47}},{"value":"warn(unused_extern_crates, unused_qualifications)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":8091,"byte_end":8144,"line_start":176,"line_end":176,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":8306,"byte_end":8309,"line_start":189,"line_end":189,"column_start":10,"column_end":13},"name":"str","qualname":"::AnyWrite::str","value":"type str : ?Sized;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":8329,"byte_end":8334,"line_start":190,"line_end":190,"column_start":10,"column_end":15},"name":"Error","qualname":"::AnyWrite::Error","value":"type Error;","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9386,"byte_end":9403,"line_start":221,"line_end":221,"column_start":12,"column_end":29},"name":"ANSIGenericString","qualname":"::ANSIGenericString","value":"ANSIGenericString {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" An ANSIGenericString includes a generic string type and a Style to\n display that string.  ANSIString and ANSIByteString are aliases for\n this type on str and [u8], respectively.\n","sig":null,"attributes":[{"value":"/ An ANSIGenericString includes a generic string type and a Style to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9152,"byte_end":9222,"line_start":217,"line_end":217,"column_start":1,"column_end":71}},{"value":"/ display that string.  ANSIString and ANSIByteString are aliases for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9223,"byte_end":9294,"line_start":218,"line_end":218,"column_start":1,"column_end":72}},{"value":"/ this type on str and [u8], respectively.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9295,"byte_end":9339,"line_start":219,"line_end":219,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10416,"byte_end":10426,"line_start":258,"line_end":258,"column_start":10,"column_end":20},"name":"ANSIString","qualname":"::ANSIString","value":"ANSIGenericString","parent":null,"children":[],"decl_id":null,"docs":" An ANSI String is a string coupled with the Style to display it\n in a terminal.","sig":null,"attributes":[{"value":"/ An ANSI String is a string coupled with the Style to display it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9853,"byte_end":9920,"line_start":236,"line_end":236,"column_start":1,"column_end":68}},{"value":"/ in a terminal.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9921,"byte_end":9939,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9940,"byte_end":9943,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Although not technically a string itself, it can be turned into","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9944,"byte_end":10011,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ one with the `to_string` method.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10012,"byte_end":10048,"line_start":240,"line_end":240,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10049,"byte_end":10052,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ ### Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10053,"byte_end":10069,"line_start":242,"line_end":242,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10070,"byte_end":10073,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10074,"byte_end":10087,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/ use ansi_term::ANSIString;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10088,"byte_end":10118,"line_start":245,"line_end":245,"column_start":1,"column_end":31}},{"value":"/ use ansi_term::Colour::Red;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10119,"byte_end":10150,"line_start":246,"line_end":246,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10151,"byte_end":10154,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ let red_string = Red.paint(\"a red string\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10155,"byte_end":10202,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/ println!(\"{}\", red_string);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10203,"byte_end":10234,"line_start":249,"line_end":249,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10235,"byte_end":10242,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10243,"byte_end":10246,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10247,"byte_end":10254,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ use ansi_term::ANSIString;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10255,"byte_end":10285,"line_start":253,"line_end":253,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10286,"byte_end":10289,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let plain_string = ANSIString::from(\"a plain string\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10290,"byte_end":10348,"line_start":255,"line_end":255,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(&*plain_string, \"a plain string\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10349,"byte_end":10398,"line_start":256,"line_end":256,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10399,"byte_end":10406,"line_start":257,"line_end":257,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10601,"byte_end":10615,"line_start":262,"line_end":262,"column_start":10,"column_end":24},"name":"ANSIByteString","qualname":"::ANSIByteString","value":"ANSIGenericString","parent":null,"children":[],"decl_id":null,"docs":" An ANSIByteString represents a formatted series of bytes.  Use\n ANSIByteString when styling text with an unknown encoding.\n","sig":null,"attributes":[{"value":"/ An ANSIByteString represents a formatted series of bytes.  Use","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10462,"byte_end":10528,"line_start":260,"line_end":260,"column_start":1,"column_end":67}},{"value":"/ ANSIByteString when styling text with an unknown encoding.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10529,"byte_end":10591,"line_start":261,"line_end":261,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10752,"byte_end":10758,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::Prefix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the style prefix.\n","sig":null,"attributes":[{"value":"/ Like `ANSIString`, but only displays the style prefix.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10652,"byte_end":10710,"line_start":264,"line_end":264,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10868,"byte_end":10874,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"Suffix","qualname":"::Suffix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the style suffix.\n","sig":null,"attributes":[{"value":"/ Like `ANSIString`, but only displays the style suffix.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10768,"byte_end":10826,"line_start":268,"line_end":268,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11005,"byte_end":11010,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"Infix","qualname":"::Infix","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like `ANSIString`, but only displays the difference between two\n styles.\n","sig":null,"attributes":[{"value":"/ Like `ANSIString`, but only displays the difference between two","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10884,"byte_end":10951,"line_start":272,"line_end":272,"column_start":1,"column_end":68}},{"value":"/ styles.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":10952,"byte_end":10963,"line_start":273,"line_end":273,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11378,"byte_end":11386,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ANSIByteString>::write_to","value":"pub fn write_to<W: io::Write>(&Self, &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write an ANSIByteString to an io::Write.  This writes the escape\n sequences for the associated Style around the bytes.\n","sig":null,"attributes":[{"value":"/ Write an ANSIByteString to an io::Write.  This writes the escape","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11237,"byte_end":11305,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/ sequences for the associated Style around the bytes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11310,"byte_end":11366,"line_start":286,"line_end":286,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13466,"byte_end":13471,"line_start":362,"line_end":362,"column_start":5,"column_end":10},"name":"Black","qualname":"::Colour::Black","value":"Colour::Black","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #0 (foreground code `30`, background code `40`).","sig":null,"attributes":[{"value":"/ Colour #0 (foreground code `30`, background code `40`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13242,"byte_end":13301,"line_start":358,"line_end":358,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13306,"byte_end":13309,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This is not necessarily the background colour, and using it as one may","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13314,"byte_end":13388,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ render the text hard to read on terminals with dark backgrounds.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13393,"byte_end":13461,"line_start":361,"line_end":361,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13542,"byte_end":13545,"line_start":365,"line_end":365,"column_start":5,"column_end":8},"name":"Red","qualname":"::Colour::Red","value":"Colour::Red","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #1 (foreground code `31`, background code `41`).\n","sig":null,"attributes":[{"value":"/ Colour #1 (foreground code `31`, background code `41`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13478,"byte_end":13537,"line_start":364,"line_end":364,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13616,"byte_end":13621,"line_start":368,"line_end":368,"column_start":5,"column_end":10},"name":"Green","qualname":"::Colour::Green","value":"Colour::Green","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #2 (foreground code `32`, background code `42`).\n","sig":null,"attributes":[{"value":"/ Colour #2 (foreground code `32`, background code `42`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13552,"byte_end":13611,"line_start":367,"line_end":367,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13692,"byte_end":13698,"line_start":371,"line_end":371,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::Colour::Yellow","value":"Colour::Yellow","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #3 (foreground code `33`, background code `43`).\n","sig":null,"attributes":[{"value":"/ Colour #3 (foreground code `33`, background code `43`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13628,"byte_end":13687,"line_start":370,"line_end":370,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13769,"byte_end":13773,"line_start":374,"line_end":374,"column_start":5,"column_end":9},"name":"Blue","qualname":"::Colour::Blue","value":"Colour::Blue","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #4 (foreground code `34`, background code `44`).\n","sig":null,"attributes":[{"value":"/ Colour #4 (foreground code `34`, background code `44`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13705,"byte_end":13764,"line_start":373,"line_end":373,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":192},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13844,"byte_end":13850,"line_start":377,"line_end":377,"column_start":5,"column_end":11},"name":"Purple","qualname":"::Colour::Purple","value":"Colour::Purple","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #5 (foreground code `35`, background code `45`).\n","sig":null,"attributes":[{"value":"/ Colour #5 (foreground code `35`, background code `45`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13780,"byte_end":13839,"line_start":376,"line_end":376,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":194},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13921,"byte_end":13925,"line_start":380,"line_end":380,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::Colour::Cyan","value":"Colour::Cyan","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #6 (foreground code `36`, background code `46`).\n","sig":null,"attributes":[{"value":"/ Colour #6 (foreground code `36`, background code `46`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13857,"byte_end":13916,"line_start":379,"line_end":379,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14138,"byte_end":14143,"line_start":386,"line_end":386,"column_start":5,"column_end":10},"name":"White","qualname":"::Colour::White","value":"Colour::White","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Colour #7 (foreground code `37`, background code `47`).","sig":null,"attributes":[{"value":"/ Colour #7 (foreground code `37`, background code `47`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13932,"byte_end":13991,"line_start":382,"line_end":382,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13996,"byte_end":13999,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ As above, this is not necessarily the foreground colour, and may be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14004,"byte_end":14075,"line_start":384,"line_end":384,"column_start":5,"column_end":76}},{"value":"/ hard to read on terminals with light backgrounds.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14080,"byte_end":14133,"line_start":385,"line_end":385,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":198},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15051,"byte_end":15056,"line_start":403,"line_end":403,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::Colour::Fixed","value":"Colour::Fixed(u8)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" A colour number from 0 to 255, for use in 256-colour terminal\n environments.","sig":null,"attributes":[{"value":"/ A colour number from 0 to 255, for use in 256-colour terminal","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14150,"byte_end":14215,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/ environments.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14220,"byte_end":14237,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14242,"byte_end":14245,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ - Colours 0 to 7 are the `Black` to `White` variants respectively.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14250,"byte_end":14320,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/   These colours can usually be changed in the terminal emulator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14325,"byte_end":14393,"line_start":392,"line_end":392,"column_start":5,"column_end":73}},{"value":"/ - Colours 8 to 15 are brighter versions of the eight colours above.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14398,"byte_end":14469,"line_start":393,"line_end":393,"column_start":5,"column_end":76}},{"value":"/   These can also usually be changed in the terminal emulator, or it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14474,"byte_end":14545,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/   could be configured to use the original colours and show the text in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14550,"byte_end":14624,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/   bold instead. It varies depending on the program.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14629,"byte_end":14684,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/ - Colours 16 to 231 contain several palettes of bright colours,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14689,"byte_end":14756,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/   arranged in six squares measuring six by six each.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14761,"byte_end":14817,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/ - Colours 232 to 255 are shades of grey from black to white.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14822,"byte_end":14886,"line_start":399,"line_end":399,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14891,"byte_end":14894,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ It might make more sense to look at a [colour chart][cc].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14899,"byte_end":14960,"line_start":401,"line_end":401,"column_start":5,"column_end":66}},{"value":"/ [cc]: https://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":14965,"byte_end":15046,"line_start":402,"line_end":402,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15123,"byte_end":15126,"line_start":406,"line_end":406,"column_start":5,"column_end":8},"name":"RGB","qualname":"::Colour::RGB","value":"Colour::RGB(u8, u8, u8)","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" A 24-bit RGB color, as specified by ISO-8613-3.\n","sig":null,"attributes":[{"value":"/ A 24-bit RGB color, as specified by ISO-8613-3.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15067,"byte_end":15118,"line_start":405,"line_end":405,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":181},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13228,"byte_end":13234,"line_start":356,"line_end":356,"column_start":10,"column_end":16},"name":"Colour","qualname":"::Colour","value":"pub enum Colour {\n\n    /// Colour #0 (foreground code `30`, background code `40`).\n    ///\n    /// This is not necessarily the background colour, and using it as one may\n    /// render the text hard to read on terminals with dark backgrounds.\n    Black,\n\n    /// Colour #1 (foreground code `31`, background code `41`).\n    Red,\n\n    /// Colour #2 (foreground code `32`, background code `42`).\n    Green,\n\n    /// Colour #3 (foreground code `33`, background code `43`).\n    Yellow,\n\n    /// Colour #4 (foreground code `34`, background code `44`).\n    Blue,\n\n    /// Colour #5 (foreground code `35`, background code `45`).\n    Purple,\n\n    /// Colour #6 (foreground code `36`, background code `46`).\n    Cyan,\n\n    /// Colour #7 (foreground code `37`, background code `47`).\n    ///\n    /// As above, this is not necessarily the foreground colour, and may be\n    /// hard to read on terminals with light backgrounds.\n    White,\n\n    /// A colour number from 0 to 255, for use in 256-colour terminal\n    /// environments.\n    ///\n    /// - Colours 0 to 7 are the `Black` to `White` variants respectively.\n    ///   These colours can usually be changed in the terminal emulator.\n    /// - Colours 8 to 15 are brighter versions of the eight colours above.\n    ///   These can also usually be changed in the terminal emulator, or it\n    ///   could be configured to use the original colours and show the text in\n    ///   bold instead. It varies depending on the program.\n    /// - Colours 16 to 231 contain several palettes of bright colours,\n    ///   arranged in six squares measuring six by six each.\n    /// - Colours 232 to 255 are shades of grey from black to white.\n    ///\n    /// It might make more sense to look at a [colour chart][cc].\n    /// [cc]: https://upload.wikimedia.org/wikipedia/en/1/15/Xterm_256color_chart.svg\n    Fixed(u8),\n\n    /// A 24-bit RGB color, as specified by ISO-8613-3.\n    RGB(u8, u8, u8),\n}","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":201}],"decl_id":null,"docs":" A colour is one specific type of ANSI escape code, and can refer\n to either the foreground or background colour.","sig":null,"attributes":[{"value":"/ A colour is one specific type of ANSI escape code, and can refer","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12945,"byte_end":13013,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/ to either the foreground or background colour.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13014,"byte_end":13064,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13065,"byte_end":13068,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ These use the standard numeric sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13069,"byte_end":13114,"line_start":353,"line_end":353,"column_start":1,"column_end":46}},{"value":"/ See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":13115,"byte_end":13177,"line_start":354,"line_end":354,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":16751,"byte_end":16757,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"normal","qualname":"<Colour>::normal","value":"pub fn normal(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Return a Style with the foreground colour set to this colour.\n","sig":null,"attributes":[{"value":"/ Return a Style with the foreground colour set to this colour.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":16674,"byte_end":16739,"line_start":449,"line_end":449,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17027,"byte_end":17032,"line_start":457,"line_end":457,"column_start":12,"column_end":17},"name":"paint","qualname":"<Colour>::paint","value":"pub fn paint<'a, I, S: 'a + ToOwned + ?Sized>(Self, I) -> ANSIGenericString\nwhere I: Into<Cow>, <S as ToOwned>::Owned: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Paints the given text with this colour, returning an ANSI string.\n This is a short-cut so you don't have to use Blue.normal() just\n to get blue text.\n","sig":null,"attributes":[{"value":"/ Paints the given text with this colour, returning an ANSI string.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":16848,"byte_end":16917,"line_start":454,"line_end":454,"column_start":5,"column_end":74}},{"value":"/ This is a short-cut so you don't have to use Blue.normal() just","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":16922,"byte_end":16989,"line_start":455,"line_end":455,"column_start":5,"column_end":72}},{"value":"/ to get blue text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":16994,"byte_end":17015,"line_start":456,"line_end":456,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17353,"byte_end":17359,"line_start":467,"line_end":467,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Colour>::prefix","value":"pub fn prefix(Self) -> Prefix","parent":null,"children":[],"decl_id":null,"docs":" The prefix for this colour.\n","sig":null,"attributes":[{"value":"/ The prefix for this colour.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17310,"byte_end":17341,"line_start":466,"line_end":466,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17462,"byte_end":17468,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Colour>::suffix","value":"pub fn suffix(Self) -> Suffix","parent":null,"children":[],"decl_id":null,"docs":" The suffix for this colour.\n","sig":null,"attributes":[{"value":"/ The suffix for this colour.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17419,"byte_end":17450,"line_start":471,"line_end":471,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17586,"byte_end":17591,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"infix","qualname":"<Colour>::infix","value":"pub fn infix(Self, Colour) -> Infix","parent":null,"children":[],"decl_id":null,"docs":" The infix between this colour and another.\n","sig":null,"attributes":[{"value":"/ The infix between this colour and another.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17528,"byte_end":17574,"line_start":476,"line_end":476,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17739,"byte_end":17743,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"bold","qualname":"<Colour>::bold","value":"pub fn bold(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the bold property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the bold property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17680,"byte_end":17727,"line_start":481,"line_end":481,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17910,"byte_end":17916,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"dimmed","qualname":"<Colour>::dimmed","value":"pub fn dimmed(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the dimmed property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the dimmed property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":17849,"byte_end":17898,"line_start":486,"line_end":486,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18085,"byte_end":18091,"line_start":492,"line_end":492,"column_start":12,"column_end":18},"name":"italic","qualname":"<Colour>::italic","value":"pub fn italic(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the italic property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the italic property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18024,"byte_end":18073,"line_start":491,"line_end":491,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18263,"byte_end":18272,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"underline","qualname":"<Colour>::underline","value":"pub fn underline(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the underline property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the underline property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18199,"byte_end":18251,"line_start":496,"line_end":496,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18443,"byte_end":18448,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"blink","qualname":"<Colour>::blink","value":"pub fn blink(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the blink property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the blink property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18383,"byte_end":18431,"line_start":501,"line_end":501,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18617,"byte_end":18624,"line_start":507,"line_end":507,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Colour>::reverse","value":"pub fn reverse(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the reverse property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the reverse property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18555,"byte_end":18605,"line_start":506,"line_end":506,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18794,"byte_end":18800,"line_start":512,"line_end":512,"column_start":12,"column_end":18},"name":"hidden","qualname":"<Colour>::hidden","value":"pub fn hidden(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the hidden property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the hidden property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18733,"byte_end":18782,"line_start":511,"line_end":511,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18976,"byte_end":18989,"line_start":517,"line_end":517,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<Colour>::strikethrough","value":"pub fn strikethrough(Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the strikethrough property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the strikethrough property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":18908,"byte_end":18964,"line_start":516,"line_end":516,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19176,"byte_end":19178,"line_start":522,"line_end":522,"column_start":12,"column_end":14},"name":"on","qualname":"<Colour>::on","value":"pub fn on(Self, Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the background colour property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the background colour property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19104,"byte_end":19164,"line_start":521,"line_end":521,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19465,"byte_end":19470,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"Style","qualname":"::Style","value":"Style {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" A style is a collection of properties that can format a string\n using ANSI escape codes.\n","sig":null,"attributes":[{"value":"/ A style is a collection of properties that can format a string","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19317,"byte_end":19383,"line_start":527,"line_end":527,"column_start":1,"column_end":67}},{"value":"/ using ANSI escape codes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19384,"byte_end":19412,"line_start":528,"line_end":528,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19788,"byte_end":19791,"line_start":545,"line_end":545,"column_start":12,"column_end":15},"name":"new","qualname":"<Style>::new","value":"pub fn new() -> Style","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Style with no differences.\n","sig":null,"attributes":[{"value":"/ Creates a new Style with no differences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19732,"byte_end":19776,"line_start":544,"line_end":544,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19922,"byte_end":19927,"line_start":550,"line_end":550,"column_start":12,"column_end":17},"name":"paint","qualname":"<Style>::paint","value":"pub fn paint<'a, I, S: 'a + ToOwned + ?Sized>(Self, I) -> ANSIGenericString\nwhere I: Into<Cow>, <S as ToOwned>::Owned: std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Paints the given text with this colour, returning an ANSI string.\n","sig":null,"attributes":[{"value":"/ Paints the given text with this colour, returning an ANSI string.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19841,"byte_end":19910,"line_start":549,"line_end":549,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20238,"byte_end":20244,"line_start":560,"line_end":560,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Style>::prefix","value":"pub fn prefix(Self) -> Prefix","parent":null,"children":[],"decl_id":null,"docs":" The prefix for this style.\n","sig":null,"attributes":[{"value":"/ The prefix for this style.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20196,"byte_end":20226,"line_start":559,"line_end":559,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20337,"byte_end":20343,"line_start":565,"line_end":565,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Style>::suffix","value":"pub fn suffix(Self) -> Suffix","parent":null,"children":[],"decl_id":null,"docs":" The suffix for this style.\n","sig":null,"attributes":[{"value":"/ The suffix for this style.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20295,"byte_end":20325,"line_start":564,"line_end":564,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20451,"byte_end":20456,"line_start":570,"line_end":570,"column_start":12,"column_end":17},"name":"infix","qualname":"<Style>::infix","value":"pub fn infix(Self, Style) -> Infix","parent":null,"children":[],"decl_id":null,"docs":" The infix between this style and another.\n","sig":null,"attributes":[{"value":"/ The infix between this style and another.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20394,"byte_end":20439,"line_start":569,"line_end":569,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20585,"byte_end":20589,"line_start":575,"line_end":575,"column_start":12,"column_end":16},"name":"bold","qualname":"<Style>::bold","value":"pub fn bold(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the bold property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the bold property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20526,"byte_end":20573,"line_start":574,"line_end":574,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20722,"byte_end":20728,"line_start":580,"line_end":580,"column_start":12,"column_end":18},"name":"dimmed","qualname":"<Style>::dimmed","value":"pub fn dimmed(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the dimmed property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the dimmed property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20661,"byte_end":20710,"line_start":579,"line_end":579,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20863,"byte_end":20869,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"italic","qualname":"<Style>::italic","value":"pub fn italic(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the italic property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the italic property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20802,"byte_end":20851,"line_start":584,"line_end":584,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21007,"byte_end":21016,"line_start":590,"line_end":590,"column_start":12,"column_end":21},"name":"underline","qualname":"<Style>::underline","value":"pub fn underline(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the underline property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the underline property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":20943,"byte_end":20995,"line_start":589,"line_end":589,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21153,"byte_end":21158,"line_start":595,"line_end":595,"column_start":12,"column_end":17},"name":"blink","qualname":"<Style>::blink","value":"pub fn blink(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the blink property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the blink property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21093,"byte_end":21141,"line_start":594,"line_end":594,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21293,"byte_end":21300,"line_start":600,"line_end":600,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Style>::reverse","value":"pub fn reverse(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the reverse property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the reverse property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21231,"byte_end":21281,"line_start":599,"line_end":599,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21436,"byte_end":21442,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"hidden","qualname":"<Style>::hidden","value":"pub fn hidden(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the hidden property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the hidden property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21375,"byte_end":21424,"line_start":604,"line_end":604,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21577,"byte_end":21590,"line_start":610,"line_end":610,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<Style>::strikethrough","value":"pub fn strikethrough(&Self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the hidden property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the hidden property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21516,"byte_end":21565,"line_start":609,"line_end":609,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21743,"byte_end":21745,"line_start":615,"line_end":615,"column_start":12,"column_end":14},"name":"fg","qualname":"<Style>::fg","value":"pub fn fg(&Self, Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the foreground colour property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the foreground colour property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21671,"byte_end":21731,"line_start":614,"line_end":614,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21924,"byte_end":21926,"line_start":620,"line_end":620,"column_start":12,"column_end":14},"name":"on","qualname":"<Style>::on","value":"pub fn on(&Self, Colour) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Returns a Style with the background colour property set.\n","sig":null,"attributes":[{"value":"/ Returns a Style with the background colour property set.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":21852,"byte_end":21912,"line_start":619,"line_end":619,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29405,"byte_end":29423,"line_start":845,"line_end":845,"column_start":12,"column_end":30},"name":"ANSIGenericStrings","qualname":"::ANSIGenericStrings","value":"","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIGenericString`s collected together, in order to be\n written with a minimum of control characters.\n","sig":null,"attributes":[{"value":"/ A set of `ANSIGenericString`s collected together, in order to be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29275,"byte_end":29343,"line_start":843,"line_end":843,"column_start":1,"column_end":69}},{"value":"/ written with a minimum of control characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29344,"byte_end":29393,"line_start":844,"line_end":844,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":114},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29459,"byte_end":29493,"line_start":846,"line_end":846,"column_start":6,"column_end":40},"name":"0","qualname":"::ANSIGenericStrings::0","value":"&'a [ANSIGenericString<'a, S>]","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":115},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29667,"byte_end":29678,"line_start":851,"line_end":851,"column_start":10,"column_end":21},"name":"ANSIStrings","qualname":"::ANSIStrings","value":"ANSIGenericStrings","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIString`s collected together, in order to be written with a\n minimum of control characters.\n","sig":null,"attributes":[{"value":"/ A set of `ANSIString`s collected together, in order to be written with a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29546,"byte_end":29622,"line_start":849,"line_end":849,"column_start":1,"column_end":77}},{"value":"/ minimum of control characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29623,"byte_end":29657,"line_start":850,"line_end":850,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29800,"byte_end":29811,"line_start":855,"line_end":855,"column_start":8,"column_end":19},"name":"ANSIStrings","qualname":"::ANSIStrings","value":"pub fn ANSIStrings<'a>(&'a [ANSIString]) -> ANSIStrings","parent":null,"children":[],"decl_id":null,"docs":" A function to construct an ANSIStrings instance.\n","sig":null,"attributes":[{"value":"/ A function to construct an ANSIStrings instance.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29715,"byte_end":29767,"line_start":853,"line_end":853,"column_start":1,"column_end":53}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29768,"byte_end":29792,"line_start":854,"line_end":854,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30020,"byte_end":30035,"line_start":861,"line_end":861,"column_start":10,"column_end":25},"name":"ANSIByteStrings","qualname":"::ANSIByteStrings","value":"ANSIGenericStrings","parent":null,"children":[],"decl_id":null,"docs":" A set of `ANSIByteString`s collected together, in order to be\n written with a minimum of control characters.\n","sig":null,"attributes":[{"value":"/ A set of `ANSIByteString`s collected together, in order to be","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29895,"byte_end":29960,"line_start":859,"line_end":859,"column_start":1,"column_end":66}},{"value":"/ written with a minimum of control characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":29961,"byte_end":30010,"line_start":860,"line_end":860,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30162,"byte_end":30177,"line_start":865,"line_end":865,"column_start":8,"column_end":23},"name":"ANSIByteStrings","qualname":"::ANSIByteStrings","value":"pub fn ANSIByteStrings<'a>(&'a [ANSIByteString]) -> ANSIByteStrings","parent":null,"children":[],"decl_id":null,"docs":" A function to construct an ANSIByteStrings instance.\n","sig":null,"attributes":[{"value":"/ A function to construct an ANSIByteStrings instance.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30073,"byte_end":30129,"line_start":863,"line_end":863,"column_start":1,"column_end":57}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30130,"byte_end":30154,"line_start":864,"line_end":864,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31891,"byte_end":31899,"line_start":917,"line_end":917,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ANSIByteStrings>::write_to","value":"pub fn write_to<W: io::Write>(&Self, &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write ANSIByteStrings to an io::Write.  This writes the minimal\n escape sequences for the associated Styles around each set of\n bytes.\n","sig":null,"attributes":[{"value":"/ Write ANSIByteStrings to an io::Write.  This writes the minimal","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31727,"byte_end":31794,"line_start":914,"line_end":914,"column_start":5,"column_end":72}},{"value":"/ escape sequences for the associated Styles around each set of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31799,"byte_end":31864,"line_start":915,"line_end":915,"column_start":5,"column_end":70}},{"value":"/ bytes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31869,"byte_end":31879,"line_start":916,"line_end":916,"column_start":5,"column_end":15}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9561,"byte_end":9578,"line_start":227,"line_end":227,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11053,"byte_end":11063,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11212,"byte_end":11226,"line_start":284,"line_end":284,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11563,"byte_end":11580,"line_start":294,"line_end":294,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11878,"byte_end":11895,"line_start":305,"line_end":305,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12060,"byte_end":12066,"line_start":315,"line_end":315,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12248,"byte_end":12254,"line_start":323,"line_end":323,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12436,"byte_end":12441,"line_start":331,"line_end":331,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15465,"byte_end":15471,"line_start":418,"line_end":418,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19720,"byte_end":19725,"line_start":543,"line_end":543,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":28263,"byte_end":28268,"line_start":808,"line_end":808,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30304,"byte_end":30322,"line_start":869,"line_end":869,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31541,"byte_end":31552,"line_start":906,"line_end":906,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31701,"byte_end":31716,"line_start":913,"line_end":913,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":9561,"byte_end":9578,"line_start":227,"line_end":227,"column_start":36,"column_end":53},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11053,"byte_end":11063,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11212,"byte_end":11226,"line_start":284,"line_end":284,"column_start":10,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11563,"byte_end":11580,"line_start":294,"line_end":294,"column_start":51,"column_end":68},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":11878,"byte_end":11895,"line_start":305,"line_end":305,"column_start":46,"column_end":63},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12060,"byte_end":12066,"line_start":315,"line_end":315,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12248,"byte_end":12254,"line_start":323,"line_end":323,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":164},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":12436,"byte_end":12441,"line_start":331,"line_end":331,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":15465,"byte_end":15471,"line_start":418,"line_end":418,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":19720,"byte_end":19725,"line_start":543,"line_end":543,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":28263,"byte_end":28268,"line_start":808,"line_end":808,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":30304,"byte_end":30322,"line_start":869,"line_end":869,"column_start":36,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31541,"byte_end":31552,"line_start":906,"line_end":906,"column_start":27,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.9.0/src/lib.rs","byte_start":31701,"byte_end":31716,"line_start":913,"line_end":913,"column_start":10,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}}]}