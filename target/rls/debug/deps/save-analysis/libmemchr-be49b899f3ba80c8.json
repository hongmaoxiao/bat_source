{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","memchr","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"use_std\"","-C","metadata=be49b899f3ba80c8","-C","extra-filename=-be49b899f3ba80c8","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","libc=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/liblibc-45456c704780836c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libmemchr-be49b899f3ba80c8.rmeta"},"prelude":{"crate_id":{"name":"memchr","disambiguator":[6444011135382677553,13623871977643040854]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[8000104344433599533,15219794654319678357]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":0,"byte_end":33411,"line_start":1,"line_end":1062,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":72},{"krate":0,"index":76}],"decl_id":null,"docs":"This crate defines two functions, `memchr` and `memrchr`, which expose a safe\ninterface to the corresponding functions in `libc`.\n","sig":null,"attributes":[{"value":"*\nThis crate defines two functions, `memchr` and `memrchr`, which expose a safe\ninterface to the corresponding functions in `libc`.\n*/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":0,"byte_end":136,"line_start":1,"line_end":4,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":138,"byte_end":160,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":161,"byte_end":186,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":2837,"byte_end":2843,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" An iterator for memchr\n","sig":null,"attributes":[{"value":"/ An iterator for memchr","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":2799,"byte_end":2825,"line_start":104,"line_end":104,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3080,"byte_end":3083,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr>::new","value":"pub fn new(u8, &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":2993,"byte_end":3068,"line_start":114,"line_end":114,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4316,"byte_end":4322,"line_start":162,"line_end":162,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"pub fn memchr(u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memchr`.","sig":null,"attributes":[{"value":"/ A safe interface to `memchr`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3691,"byte_end":3724,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3725,"byte_end":3728,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Returns the index corresponding to the first occurrence of `needle` in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3729,"byte_end":3803,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3804,"byte_end":3850,"line_start":145,"line_end":145,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3851,"byte_end":3854,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ memchr reduces to super-optimized machine code at around an order of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3855,"byte_end":3927,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ magnitude faster than `haystack.iter().position(|&b| b == needle)`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3928,"byte_end":3999,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/ (See benchmarks.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4000,"byte_end":4021,"line_start":149,"line_end":149,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4022,"byte_end":4025,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4026,"byte_end":4039,"line_start":151,"line_end":151,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4040,"byte_end":4043,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the first position of a byte in a byte string.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4044,"byte_end":4117,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4118,"byte_end":4121,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4122,"byte_end":4133,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ use memchr::memchr;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4134,"byte_end":4157,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4158,"byte_end":4161,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4162,"byte_end":4204,"line_start":158,"line_end":158,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memchr(b'k', haystack), Some(8));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4205,"byte_end":4253,"line_start":159,"line_end":159,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4254,"byte_end":4261,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":4262,"byte_end":4279,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6381,"byte_end":6388,"line_start":221,"line_end":221,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"pub fn memrchr(u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" A safe interface to `memrchr`.","sig":null,"attributes":[{"value":"/ A safe interface to `memrchr`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":5925,"byte_end":5959,"line_start":205,"line_end":205,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":5960,"byte_end":5963,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ Returns the index corresponding to the last occurrence of `needle` in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":5964,"byte_end":6037,"line_start":207,"line_end":207,"column_start":1,"column_end":74}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6038,"byte_end":6084,"line_start":208,"line_end":208,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6085,"byte_end":6088,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6089,"byte_end":6102,"line_start":210,"line_end":210,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6103,"byte_end":6106,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the last position of a byte in a byte string.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6107,"byte_end":6179,"line_start":212,"line_end":212,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6180,"byte_end":6183,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6184,"byte_end":6195,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ use memchr::memrchr;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6196,"byte_end":6220,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6221,"byte_end":6224,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6225,"byte_end":6267,"line_start":217,"line_end":217,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memrchr(b'o', haystack), Some(17));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6268,"byte_end":6318,"line_start":218,"line_end":218,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6319,"byte_end":6326,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":6327,"byte_end":6344,"line_start":220,"line_end":220,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":7795,"byte_end":7802,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" An iterator for Memchr2\n","sig":null,"attributes":[{"value":"/ An iterator for Memchr2","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":7756,"byte_end":7783,"line_start":259,"line_end":259,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":8058,"byte_end":8061,"line_start":271,"line_end":271,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2>::new","value":"pub fn new(u8, u8, &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":7971,"byte_end":8046,"line_start":270,"line_end":270,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":8629,"byte_end":8636,"line_start":295,"line_end":295,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"pub fn memchr2(u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for two bytes instead of one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":8560,"byte_end":8621,"line_start":294,"line_end":294,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":9781,"byte_end":9788,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" An iterator for Memchr3\n","sig":null,"attributes":[{"value":"/ An iterator for Memchr3","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":9742,"byte_end":9769,"line_start":328,"line_end":328,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":10052,"byte_end":10055,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3>::new","value":"pub fn new(u8, u8, u8, &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new Memchr2 that's initalized to zero with a haystack\n","sig":null,"attributes":[{"value":"/ Create a new Memchr2 that's initalized to zero with a haystack","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":9974,"byte_end":10040,"line_start":340,"line_end":340,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":10754,"byte_end":10761,"line_start":373,"line_end":373,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"pub fn memchr3(u8, u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for three bytes instead of one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":10683,"byte_end":10746,"line_start":372,"line_end":372,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":2976,"byte_end":2982,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3268,"byte_end":3274,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3549,"byte_end":3555,"line_start":136,"line_end":136,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":7953,"byte_end":7960,"line_start":269,"line_end":269,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":8294,"byte_end":8301,"line_start":281,"line_end":281,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":9956,"byte_end":9963,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":10370,"byte_end":10377,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":2976,"byte_end":2982,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3268,"byte_end":3274,"line_start":124,"line_end":124,"column_start":23,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":3549,"byte_end":3555,"line_start":136,"line_end":136,"column_start":34,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":5210}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":7953,"byte_end":7960,"line_start":269,"line_end":269,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":8294,"byte_end":8301,"line_start":281,"line_end":281,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":9956,"byte_end":9963,"line_start":339,"line_end":339,"column_start":10,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.0.1/src/lib.rs","byte_start":10370,"byte_end":10377,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":5281}}]}