{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","base64","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=716635d1793d48ec","-C","extra-filename=-716635d1793d48ec","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","byteorder=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libbyteorder-bc9970f9238f86e1.rmeta","--extern","safemem=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libsafemem-fb5bae556133c0dc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libbase64-716635d1793d48ec.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[5193203875648902546,6755878844184362377]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","num":16,"id":{"name":"byteorder","disambiguator":[2273452714677096099,13008791525014639813]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/line_wrap.rs","num":17,"id":{"name":"safemem","disambiguator":[7892834391603939288,15483228535230392766]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":0,"byte_end":32348,"line_start":1,"line_end":927,"column_start":1,"column_end":11}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":0,"byte_end":32348,"line_start":1,"line_end":927,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":45},{"krate":0,"index":55},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":170},{"krate":0,"index":178},{"krate":0,"index":177},{"krate":0,"index":175},{"krate":0,"index":87},{"krate":0,"index":180},{"krate":0,"index":188},{"krate":0,"index":187},{"krate":0,"index":185},{"krate":0,"index":92},{"krate":0,"index":190},{"krate":0,"index":200},{"krate":0,"index":199},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":210},{"krate":0,"index":209},{"krate":0,"index":207},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":212},{"krate":0,"index":226},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":140}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"/ # Configs","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":14,"byte_end":17,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ There isn't just one type of Base64; that would be too simple. You need to choose a character","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":18,"byte_end":115,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ set (standard or URL-safe), padding suffix (yes/no), and line wrap (line length, line ending).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":116,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ The `Config` struct encapsulates this info. There are some common configs included: `STANDARD`,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":215,"byte_end":314,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ `MIME`, etc. You can also make your own `Config` if needed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":315,"byte_end":378,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":379,"byte_end":382,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The functions that don't have `config` in the name (e.g. `encode()` and `decode()`) use the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":383,"byte_end":478,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ `STANDARD` config .","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":479,"byte_end":502,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":503,"byte_end":506,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":507,"byte_end":521,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":522,"byte_end":525,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Several different encoding functions are available to you depending on your desire for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":526,"byte_end":616,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"/ convenience vs performance.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":617,"byte_end":648,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":649,"byte_end":652,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                       | Allocates                      |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":653,"byte_end":748,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ | ----------------------- | ---------------------------- | ------------------------------ |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":749,"byte_end":844,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ | `encode`                | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":845,"byte_end":940,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ | `encode_config`         | Returns a new `String`       | Always                         |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":941,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_buf`     | Appends to provided `String` | Only if `String` needs to grow |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1037,"byte_end":1132,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ | `encode_config_slice`   | Writes to provided `&[u8]`   | Never                          |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1133,"byte_end":1228,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All of the encoding functions that take a `Config` will pad, line wrap, etc, as per the config.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1233,"byte_end":1332,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1337,"byte_end":1351,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Just as for encoding, there are different decoding functions available.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1356,"byte_end":1431,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1432,"byte_end":1435,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ | Function                | Output                        | Allocates                      |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1436,"byte_end":1532,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ | ----------------------- | ----------------------------- | ------------------------------ |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1533,"byte_end":1629,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ | `decode`                | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1630,"byte_end":1726,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ | `decode_config`         | Returns a new `Vec<u8>`       | Always                         |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1727,"byte_end":1823,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ | `decode_config_buf`     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1824,"byte_end":1920,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1921,"byte_end":1924,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Unlike encoding, where all possible input is valid, decoding can fail (see `DecodeError`).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":1925,"byte_end":2019,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2020,"byte_end":2023,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Input can be invalid because it has invalid characters or invalid padding. (No padding at all is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2024,"byte_end":2124,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/ valid, but incorrect padding is not.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2125,"byte_end":2166,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2167,"byte_end":2170,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Whitespace in the input is invalid unless `strip_whitespace` is enabled in the `Config` used.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2171,"byte_end":2268,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2269,"byte_end":2272,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2273,"byte_end":2285,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2286,"byte_end":2289,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If length calculations result in overflowing `usize`, a panic will result.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2290,"byte_end":2368,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2370,"byte_end":2534,"line_start":46,"line_end":47,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":142},{"krate":0,"index":148},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":40}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[{"value":"/ Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32350,"byte_end":32450,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32451,"byte_end":32454,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32455,"byte_end":32462,"line_start":3,"line_end":3,"column_start":1,"column_end":8}},{"value":"/ use base64::STANDARD;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32463,"byte_end":32488,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/ use base64::display::Base64Display;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32489,"byte_end":32528,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32529,"byte_end":32532,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ let data = vec![0x0, 0x1, 0x2, 0x3];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32533,"byte_end":32573,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"/ let wrapper = Base64Display::standard(&data);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32574,"byte_end":32623,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32624,"byte_end":32627,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32628,"byte_end":32695,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":32696,"byte_end":32703,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":143},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33275,"byte_end":33292,"line_start":25,"line_end":25,"column_start":5,"column_end":22},"name":"InvalidLineLength","qualname":"::display::DisplayError::InvalidLineLength","value":"DisplayError::InvalidLineLength","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly\n large (currently capped at 1024, subject to change).\n","sig":null,"attributes":[{"value":"/ If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33113,"byte_end":33209,"line_start":23,"line_end":23,"column_start":5,"column_end":101}},{"value":"/ large (currently capped at 1024, subject to change).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33214,"byte_end":33270,"line_start":24,"line_end":24,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":142},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33094,"byte_end":33106,"line_start":22,"line_end":22,"column_start":10,"column_end":22},"name":"DisplayError","qualname":"::display::DisplayError","value":"pub enum DisplayError {\n\n    /// If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly\n    /// large (currently capped at 1024, subject to change).\n    InvalidLineLength,\n}","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" Errors that can occur initializing a Base64Display.\n","sig":null,"attributes":[{"value":"/ Errors that can occur initializing a Base64Display.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33001,"byte_end":33056,"line_start":20,"line_end":20,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33401,"byte_end":33414,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[{"value":"/ A convenience wrapper for base64'ing bytes into a format string without heap allocation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33297,"byte_end":33389,"line_start":28,"line_end":28,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33581,"byte_end":33592,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"pub fn with_config(&[u8], Config) -> Result<Base64Display, DisplayError>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[{"value":"/ Create a `Base64Display` with the provided config.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33515,"byte_end":33569,"line_start":35,"line_end":35,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34107,"byte_end":34115,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"standard","qualname":"<Base64Display>::standard","value":"pub fn standard(&[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for creating a `Base64Display` with the `STANDARD` configuration.\n","sig":null,"attributes":[{"value":"/ Convenience method for creating a `Base64Display` with the `STANDARD` configuration.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34007,"byte_end":34095,"line_start":49,"line_end":49,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34347,"byte_end":34355,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"url_safe","qualname":"<Base64Display>::url_safe","value":"pub fn url_safe(&[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for creating a `Base64Display` with the `URL_SAFE` configuration.\n","sig":null,"attributes":[{"value":"/ Convenience method for creating a `Base64Display` with the `URL_SAFE` configuration.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34247,"byte_end":34335,"line_start":54,"line_end":54,"column_start":5,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/chunked_encoder.rs","byte_start":63096,"byte_end":63101,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2897,"byte_end":2905,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`)\n","sig":null,"attributes":[{"value":"/ The standard character set (uses `+` and `/`)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2843,"byte_end":2892,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2965,"byte_end":2972,"line_start":68,"line_end":68,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`)\n","sig":null,"attributes":[{"value":"/ The URL safe character set (uses `-` and `_`)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2911,"byte_end":2960,"line_start":67,"line_end":67,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":170},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2824,"byte_end":2836,"line_start":64,"line_end":64,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"pub enum CharacterSet {\n\n    /// The standard character set (uses `+` and `/`)\n    Standard,\n\n    /// The URL safe character set (uses `-` and `_`)\n    UrlSafe,\n}","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[{"value":"/ Available encoding character sets","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2747,"byte_end":2784,"line_start":62,"line_end":62,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3554,"byte_end":3556,"line_start":91,"line_end":91,"column_start":5,"column_end":7},"name":"LF","qualname":"::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Unix-style \\n\n","sig":null,"attributes":[{"value":"/ Unix-style \\n","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3532,"byte_end":3549,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3589,"byte_end":3593,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Windows-style \\r\\n\n","sig":null,"attributes":[{"value":"/ Windows-style \\r\\n","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3562,"byte_end":3584,"line_start":92,"line_end":92,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":180},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3515,"byte_end":3525,"line_start":89,"line_end":89,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::LineEnding","value":"pub enum LineEnding {\n\n    /// Unix-style \\n\n    LF,\n\n    /// Windows-style \\r\\n\n    CRLF,\n}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":183}],"decl_id":null,"docs":" Line ending used in optional line wrapping.\n","sig":null,"attributes":[{"value":"/ Line ending used in optional line wrapping.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3428,"byte_end":3475,"line_start":87,"line_end":87,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":191},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3857,"byte_end":3863,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"NoWrap","qualname":"::LineWrap::NoWrap","value":"LineWrap::NoWrap","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Don't wrap.\n","sig":null,"attributes":[{"value":"/ Don't wrap.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3837,"byte_end":3852,"line_start":108,"line_end":108,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3955,"byte_end":3959,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"Wrap","qualname":"::LineWrap::Wrap","value":"LineWrap::Wrap(usize, LineEnding)","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Wrap lines with the specified length and line ending. The length must be > 0.\n","sig":null,"attributes":[{"value":"/ Wrap lines with the specified length and line ending. The length must be > 0.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3869,"byte_end":3950,"line_start":110,"line_end":110,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":190},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3822,"byte_end":3830,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"LineWrap","qualname":"::LineWrap","value":"pub enum LineWrap {\n\n    /// Don't wrap.\n    NoWrap,\n\n    /// Wrap lines with the specified length and line ending. The length must be > 0.\n    Wrap(usize, LineEnding),\n}","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":193}],"decl_id":null,"docs":" Line wrap configuration.\n","sig":null,"attributes":[{"value":"/ Line wrap configuration.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3754,"byte_end":3782,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":4082,"byte_end":4088,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[{"value":"/ Contains configuration parameters for base64 encoding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3983,"byte_end":4040,"line_start":114,"line_end":114,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":4609,"byte_end":4612,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new(CharacterSet, bool, bool, LineWrap) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[{"value":"/ Create a new `Config`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":4571,"byte_end":4597,"line_start":130,"line_end":130,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5077,"byte_end":5085,"line_start":152,"line_end":152,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[{"value":"/ Standard character set with padding.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5026,"byte_end":5066,"line_start":151,"line_end":151,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5278,"byte_end":5293,"line_start":160,"line_end":160,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[{"value":"/ Standard character set without padding.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5224,"byte_end":5267,"line_start":159,"line_end":159,"column_start":1,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5490,"byte_end":5494,"line_start":168,"line_end":168,"column_start":11,"column_end":15},"name":"MIME","qualname":"::MIME","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per standards for MIME encoded messages\n","sig":null,"attributes":[{"value":"/ As per standards for MIME encoded messages","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5433,"byte_end":5479,"line_start":167,"line_end":167,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5702,"byte_end":5710,"line_start":176,"line_end":176,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set with padding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5652,"byte_end":5691,"line_start":175,"line_end":175,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5901,"byte_end":5916,"line_start":184,"line_end":184,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[{"value":"/ URL-safe character set without padding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":5848,"byte_end":5890,"line_start":183,"line_end":183,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6248,"byte_end":6259,"line_start":195,"line_end":195,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[{"value":"/ An invalid byte was found in the input. The offset and offending byte are provided.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6156,"byte_end":6243,"line_start":194,"line_end":194,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":217},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6320,"byte_end":6333,"line_start":197,"line_end":197,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[{"value":"/ The length of the input is invalid.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6276,"byte_end":6315,"line_start":196,"line_end":196,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":212},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6138,"byte_end":6149,"line_start":193,"line_end":193,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::DecodeError","value":"pub enum DecodeError {\n\n    /// An invalid byte was found in the input. The offset and offending byte are provided.\n    InvalidByte(usize, u8),\n\n    /// The length of the input is invalid.\n    InvalidLength,\n}","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":217}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while decoding.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6055,"byte_end":6096,"line_start":191,"line_end":191,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7307,"byte_end":7313,"line_start":238,"line_end":238,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"pub fn encode<T: ?Sized + AsRef<[u8]>>(&T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7015,"byte_end":7052,"line_start":224,"line_end":224,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7053,"byte_end":7073,"line_start":225,"line_end":225,"column_start":1,"column_end":21}},{"value":"/Convenience for `encode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7074,"byte_end":7135,"line_start":226,"line_end":226,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7136,"byte_end":7139,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7140,"byte_end":7152,"line_start":228,"line_end":228,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7153,"byte_end":7156,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7157,"byte_end":7167,"line_start":230,"line_end":230,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7168,"byte_end":7191,"line_start":231,"line_end":231,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7192,"byte_end":7195,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7196,"byte_end":7210,"line_start":233,"line_end":233,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode(b\"hello world\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7211,"byte_end":7259,"line_start":234,"line_end":234,"column_start":1,"column_end":49}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7260,"byte_end":7287,"line_start":235,"line_end":235,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7288,"byte_end":7292,"line_start":236,"line_end":236,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7293,"byte_end":7299,"line_start":237,"line_end":237,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7733,"byte_end":7739,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"pub fn decode<T: ?Sized + AsRef<[u8]>>(&T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7400,"byte_end":7442,"line_start":242,"line_end":242,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7443,"byte_end":7484,"line_start":243,"line_end":243,"column_start":1,"column_end":42}},{"value":"/Convenience `decode_config(input, base64::STANDARD);`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7485,"byte_end":7542,"line_start":244,"line_end":244,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7543,"byte_end":7546,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7547,"byte_end":7559,"line_start":246,"line_end":246,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7560,"byte_end":7563,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7564,"byte_end":7574,"line_start":248,"line_end":248,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7575,"byte_end":7598,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7599,"byte_end":7602,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7603,"byte_end":7617,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode(\"aGVsbG8gd29ybGQ=\").unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7618,"byte_end":7681,"line_start":252,"line_end":252,"column_start":1,"column_end":64}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7682,"byte_end":7713,"line_start":253,"line_end":253,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7714,"byte_end":7718,"line_start":254,"line_end":254,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7719,"byte_end":7725,"line_start":255,"line_end":255,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8222,"byte_end":8235,"line_start":276,"line_end":276,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode_config","value":"pub fn encode_config<T: ?Sized + AsRef<[u8]>>(&T, Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7848,"byte_end":7885,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"/Returns a String.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7886,"byte_end":7906,"line_start":261,"line_end":261,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7907,"byte_end":7910,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7911,"byte_end":7923,"line_start":263,"line_end":263,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7924,"byte_end":7927,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7928,"byte_end":7938,"line_start":265,"line_end":265,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7939,"byte_end":7962,"line_start":266,"line_end":266,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7963,"byte_end":7966,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7967,"byte_end":7981,"line_start":268,"line_end":268,"column_start":1,"column_end":15}},{"value":"/    let b64 = base64::encode_config(b\"hello world~\", base64::STANDARD);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":7982,"byte_end":8056,"line_start":269,"line_end":269,"column_start":1,"column_end":75}},{"value":"/    println!(\"{}\", b64);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8057,"byte_end":8084,"line_start":270,"line_end":270,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8085,"byte_end":8088,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/    let b64_url = base64::encode_config(b\"hello internet~\", base64::URL_SAFE);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8089,"byte_end":8170,"line_start":272,"line_end":272,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", b64_url);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8171,"byte_end":8202,"line_start":273,"line_end":273,"column_start":1,"column_end":32}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8203,"byte_end":8207,"line_start":274,"line_end":274,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8208,"byte_end":8214,"line_start":275,"line_end":275,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9046,"byte_end":9063,"line_start":305,"line_end":305,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode_config_buf","value":"pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut String)","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[{"value":"/Encode arbitrary octets as base64.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8556,"byte_end":8593,"line_start":287,"line_end":287,"column_start":1,"column_end":38}},{"value":"/Writes into the supplied output buffer, which will grow the buffer if needed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8594,"byte_end":8674,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8675,"byte_end":8678,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8679,"byte_end":8691,"line_start":290,"line_end":290,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8692,"byte_end":8695,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8696,"byte_end":8706,"line_start":292,"line_end":292,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8707,"byte_end":8730,"line_start":293,"line_end":293,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8731,"byte_end":8734,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8735,"byte_end":8749,"line_start":295,"line_end":295,"column_start":1,"column_end":15}},{"value":"/    let mut buf = String::new();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8750,"byte_end":8785,"line_start":296,"line_end":296,"column_start":1,"column_end":36}},{"value":"/    base64::encode_config_buf(b\"hello world~\", base64::STANDARD, &mut buf);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8786,"byte_end":8864,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8865,"byte_end":8892,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8893,"byte_end":8896,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/    buf.clear();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8897,"byte_end":8916,"line_start":300,"line_end":300,"column_start":1,"column_end":20}},{"value":"/    base64::encode_config_buf(b\"hello internet~\", base64::URL_SAFE, &mut buf);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8917,"byte_end":8998,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/    println!(\"{}\", buf);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":8999,"byte_end":9026,"line_start":302,"line_end":302,"column_start":1,"column_end":28}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9027,"byte_end":9031,"line_start":303,"line_end":303,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9032,"byte_end":9038,"line_start":304,"line_end":304,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":114},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10699,"byte_end":10718,"line_start":361,"line_end":361,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode_config_slice","value":"pub fn encode_config_slice<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut [u8])\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[{"value":"/ Encode arbitrary octets as base64.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9789,"byte_end":9827,"line_start":331,"line_end":331,"column_start":1,"column_end":39}},{"value":"/ Writes into the supplied output buffer.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9828,"byte_end":9871,"line_start":332,"line_end":332,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9872,"byte_end":9875,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ This is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9876,"byte_end":9972,"line_start":334,"line_end":334,"column_start":1,"column_end":97}},{"value":"/ or statically-allocated buffer).","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":9973,"byte_end":10009,"line_start":335,"line_end":335,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10010,"byte_end":10013,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10014,"byte_end":10026,"line_start":337,"line_end":337,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10027,"byte_end":10030,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ If `output` is too small to hold the encoded version of `input`, a panic will result.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10031,"byte_end":10120,"line_start":339,"line_end":339,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10121,"byte_end":10124,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10125,"byte_end":10138,"line_start":341,"line_end":341,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10139,"byte_end":10142,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10143,"byte_end":10154,"line_start":343,"line_end":343,"column_start":1,"column_end":12}},{"value":"/ extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10155,"byte_end":10179,"line_start":344,"line_end":344,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10180,"byte_end":10183,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10184,"byte_end":10199,"line_start":346,"line_end":346,"column_start":1,"column_end":16}},{"value":"/     let s = b\"hello internet!\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10200,"byte_end":10235,"line_start":347,"line_end":347,"column_start":1,"column_end":36}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10236,"byte_end":10269,"line_start":348,"line_end":348,"column_start":1,"column_end":34}},{"value":"/     // make sure we'll have a slice big enough for base64 + padding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10270,"byte_end":10341,"line_start":349,"line_end":349,"column_start":1,"column_end":72}},{"value":"/     buf.resize(s.len() * 4 / 3 + 4, 0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10342,"byte_end":10385,"line_start":350,"line_end":350,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10386,"byte_end":10389,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/     let bytes_written = base64::encode_config_slice(s,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10390,"byte_end":10448,"line_start":352,"line_end":352,"column_start":1,"column_end":59}},{"value":"/                             base64::STANDARD, &mut buf);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10449,"byte_end":10509,"line_start":353,"line_end":353,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10510,"byte_end":10513,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/     // shorten our vec down to just what was written","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10514,"byte_end":10570,"line_start":355,"line_end":355,"column_start":1,"column_end":57}},{"value":"/     buf.resize(bytes_written, 0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10571,"byte_end":10608,"line_start":356,"line_end":356,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10609,"byte_end":10612,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(s, base64::decode(&buf).unwrap().as_slice());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10613,"byte_end":10677,"line_start":358,"line_end":358,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10678,"byte_end":10683,"line_start":359,"line_end":359,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":10684,"byte_end":10691,"line_start":360,"line_end":360,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20777,"byte_end":20790,"line_start":599,"line_end":599,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode_config","value":"pub fn decode_config<T: ?Sized + AsRef<[u8]>>(&T, Config)\n-> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20332,"byte_end":20374,"line_start":583,"line_end":583,"column_start":1,"column_end":43}},{"value":"/Returns a Result containing a Vec<u8>.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20375,"byte_end":20416,"line_start":584,"line_end":584,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20417,"byte_end":20420,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20421,"byte_end":20433,"line_start":586,"line_end":586,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20434,"byte_end":20437,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20438,"byte_end":20448,"line_start":588,"line_end":588,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20449,"byte_end":20472,"line_start":589,"line_end":589,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20473,"byte_end":20476,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20477,"byte_end":20491,"line_start":591,"line_end":591,"column_start":1,"column_end":15}},{"value":"/    let bytes = base64::decode_config(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20492,"byte_end":20584,"line_start":592,"line_end":592,"column_start":1,"column_end":93}},{"value":"/    println!(\"{:?}\", bytes);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20585,"byte_end":20616,"line_start":593,"line_end":593,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20617,"byte_end":20620,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/    let bytes_url = base64::decode_config(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20621,"byte_end":20721,"line_start":595,"line_end":595,"column_start":1,"column_end":101}},{"value":"/    println!(\"{:?}\", bytes_url);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20722,"byte_end":20757,"line_start":596,"line_end":596,"column_start":1,"column_end":36}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20758,"byte_end":20762,"line_start":597,"line_end":597,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":20763,"byte_end":20769,"line_start":598,"line_end":598,"column_start":1,"column_end":7}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21634,"byte_end":21651,"line_start":629,"line_end":629,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode_config_buf","value":"pub fn decode_config_buf<T: ?Sized + AsRef<[u8]>>(&T, Config, &mut Vec<u8>)\n-> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[{"value":"/Decode from string reference as octets.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21035,"byte_end":21077,"line_start":608,"line_end":608,"column_start":1,"column_end":43}},{"value":"/Writes into the supplied buffer to avoid allocation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21078,"byte_end":21133,"line_start":609,"line_end":609,"column_start":1,"column_end":56}},{"value":"/Returns a Result containing an empty tuple, aka ().","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21134,"byte_end":21188,"line_start":610,"line_end":610,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21189,"byte_end":21192,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/# Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21193,"byte_end":21205,"line_start":612,"line_end":612,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21206,"byte_end":21209,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21210,"byte_end":21220,"line_start":614,"line_end":614,"column_start":1,"column_end":11}},{"value":"/extern crate base64;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21221,"byte_end":21244,"line_start":615,"line_end":615,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21245,"byte_end":21248,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21249,"byte_end":21263,"line_start":617,"line_end":617,"column_start":1,"column_end":15}},{"value":"/    let mut buffer = Vec::<u8>::new();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21264,"byte_end":21305,"line_start":618,"line_end":618,"column_start":1,"column_end":42}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gd29ybGR+Cg==\", base64::STANDARD, &mut buffer).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21306,"byte_end":21403,"line_start":619,"line_end":619,"column_start":1,"column_end":98}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21404,"byte_end":21436,"line_start":620,"line_end":620,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21437,"byte_end":21440,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/    buffer.clear();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21441,"byte_end":21463,"line_start":622,"line_end":622,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21464,"byte_end":21467,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/    base64::decode_config_buf(\"aGVsbG8gaW50ZXJuZXR-Cg==\", base64::URL_SAFE, &mut buffer)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21468,"byte_end":21559,"line_start":624,"line_end":624,"column_start":1,"column_end":92}},{"value":"/        .unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21560,"byte_end":21581,"line_start":625,"line_end":625,"column_start":1,"column_end":22}},{"value":"/    println!(\"{:?}\", buffer);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21582,"byte_end":21614,"line_start":626,"line_end":626,"column_start":1,"column_end":33}},{"value":"/}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21615,"byte_end":21619,"line_start":627,"line_end":627,"column_start":1,"column_end":5}},{"value":"/```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":21620,"byte_end":21626,"line_start":628,"line_end":628,"column_start":1,"column_end":7}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33491,"byte_end":33504,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34506,"byte_end":34519,"line_start":60,"line_end":60,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34840,"byte_end":34853,"line_start":71,"line_end":71,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/chunked_encoder.rs","byte_start":63668,"byte_end":63682,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2982,"byte_end":2994,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3603,"byte_end":3613,"line_start":96,"line_end":96,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":4558,"byte_end":4564,"line_start":129,"line_end":129,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6360,"byte_end":6371,"line_start":200,"line_end":200,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6735,"byte_end":6746,"line_start":211,"line_end":211,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2638,"byte_end":2645,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":33491,"byte_end":33504,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34506,"byte_end":34519,"line_start":60,"line_end":60,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/display.rs","byte_start":34840,"byte_end":34853,"line_start":71,"line_end":71,"column_start":51,"column_end":64},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/chunked_encoder.rs","byte_start":63668,"byte_end":63682,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":2982,"byte_end":2994,"line_start":71,"line_end":71,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":3603,"byte_end":3613,"line_start":96,"line_end":96,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":4558,"byte_end":4564,"line_start":129,"line_end":129,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6360,"byte_end":6371,"line_start":200,"line_end":200,"column_start":23,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.8.0/src/lib.rs","byte_start":6735,"byte_end":6746,"line_start":211,"line_end":211,"column_start":23,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":212},"to":{"krate":1,"index":1720}}]}