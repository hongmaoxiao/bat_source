{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","quote","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"proc-macro\"","-C","metadata=df1dceaeafec702e","-C","extra-filename=-df1dceaeafec702e","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","proc_macro2=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libproc_macro2-879088eb77fe3ae1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libquote-df1dceaeafec702e.rmeta"},"prelude":{"crate_id":{"name":"quote","disambiguator":[10400330033380315087,11391671680320067742]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[3173480412573258375,5543799431244878056]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":17,"id":{"name":"proc_macro2","disambiguator":[9111951295025778107,5248206520849953426]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","num":18,"id":{"name":"unicode_xid","disambiguator":[17911482992332937885,14093164206535051177]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":0,"byte_end":16214,"line_start":1,"line_end":511,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3477,"byte_end":3483,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3520,"byte_end":3528,"line_start":104,"line_end":104,"column_start":20,"column_end":28},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3628,"byte_end":3629,"line_start":110,"line_end":110,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"TokenStream, Span","parent":{"krate":0,"index":128}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":0,"byte_end":16214,"line_start":1,"line_end":511,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" This crate provides the [`quote!`] macro for turning Rust syntax tree data\n structures into tokens of source code.","sig":null,"attributes":[{"value":"/ This crate provides the [`quote!`] macro for turning Rust syntax tree data","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ structures into tokens of source code.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":79,"byte_end":121,"line_start":2,"line_end":2,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":126,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":159,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Procedural macros in Rust receive a stream of tokens as input, execute","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":163,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ arbitrary Rust code to determine how to manipulate those tokens, and produce","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":238,"byte_end":318,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ a stream of tokens to hand back to the compiler to compile into the caller's","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":319,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ crate. Quasi-quoting is a solution to one piece of that -- producing tokens","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":400,"byte_end":479,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ to return to the compiler.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":480,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":511,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The idea of quasi-quoting is that we write *code* that we treat as *data*.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":515,"byte_end":593,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ Within the `quote!` macro, we can write what looks like code to our text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":594,"byte_end":670,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ editor or IDE. We get all the benefits of the editor's brace matching,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":671,"byte_end":745,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ syntax highlighting, indentation, and maybe autocompletion. But rather than","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":746,"byte_end":825,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ compiling that as code into the current crate, we can treat it as data, pass","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":826,"byte_end":906,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ it around, mutate it, and eventually hand it back to the compiler as tokens","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":907,"byte_end":986,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ to compile into the macro caller's crate.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":987,"byte_end":1032,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate is motivated by the procedural macro use case, but is a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1037,"byte_end":1107,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ general-purpose Rust quasi-quoting library and is not specific to procedural","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1108,"byte_end":1188,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ macros.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1189,"byte_end":1200,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1201,"byte_end":1204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ *Version requirement: Quote supports any compiler version back to Rust's","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1205,"byte_end":1281,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ very first support for procedural macros in Rust 1.15.0.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1282,"byte_end":1343,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1348,"byte_end":1359,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1360,"byte_end":1378,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ quote = \"0.5\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1379,"byte_end":1396,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1397,"byte_end":1404,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1405,"byte_end":1408,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1409,"byte_end":1416,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1417,"byte_end":1433,"line_start":33,"line_end":33,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1458,"byte_end":1463,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1464,"byte_end":1482,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1483,"byte_end":1490,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1491,"byte_end":1494,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1495,"byte_end":1508,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The following quasi-quoted block of code is something you might find in [a]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1513,"byte_end":1592,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ procedural macro having to do with data structure serialization. The `#var`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1593,"byte_end":1672,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ syntax performs interpolation of runtime variables into the quoted tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1673,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ Check out the documentation of the [`quote!`] macro for more detail about","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1752,"byte_end":1829,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ the syntax. See also the [`quote_spanned!`] macro which is important for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1830,"byte_end":1906,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ implementing hygienic procedural macros.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1907,"byte_end":1951,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1952,"byte_end":1955,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [a]: https://serde.rs/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1956,"byte_end":1982,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/ [`quote_spanned!`]: macro.quote_spanned.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":1983,"byte_end":2031,"line_start":49,"line_end":49,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2032,"byte_end":2035,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2036,"byte_end":2043,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2044,"byte_end":2062,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ # extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2063,"byte_end":2088,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2089,"byte_end":2094,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2095,"byte_end":2112,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/ #     let generics = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2113,"byte_end":2141,"line_start":56,"line_end":56,"column_start":1,"column_end":29}},{"value":"/ #     let where_clause = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2142,"byte_end":2174,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ #     let field_ty = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2175,"byte_end":2203,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/ #     let item_ty = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2204,"byte_end":2231,"line_start":59,"line_end":59,"column_start":1,"column_end":28}},{"value":"/ #     let path = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2232,"byte_end":2256,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ #     let value = \"\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2257,"byte_end":2282,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2283,"byte_end":2288,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ let tokens = quote! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2289,"byte_end":2314,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     struct SerializeWith #generics #where_clause {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2315,"byte_end":2369,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/         value: &'a #field_ty,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2370,"byte_end":2403,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/         phantom: ::std::marker::PhantomData<#item_ty>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2404,"byte_end":2462,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2463,"byte_end":2472,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2473,"byte_end":2476,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     impl #generics serde::Serialize for SerializeWith #generics #where_clause {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2477,"byte_end":2560,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/         fn serialize<S>(&self, s: &mut S) -> Result<(), S::Error>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2561,"byte_end":2630,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/             where S: serde::Serializer","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2631,"byte_end":2673,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/         {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2674,"byte_end":2687,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/             #path(self.value, s)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2688,"byte_end":2724,"line_start":73,"line_end":73,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2725,"byte_end":2738,"line_start":74,"line_end":74,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2739,"byte_end":2748,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     SerializeWith {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2753,"byte_end":2776,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/         value: #value,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2777,"byte_end":2803,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/         phantom: ::std::marker::PhantomData::<#item_ty>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2804,"byte_end":2864,"line_start":79,"line_end":79,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2865,"byte_end":2874,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2875,"byte_end":2881,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2882,"byte_end":2887,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2888,"byte_end":2895,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2896,"byte_end":2903,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2904,"byte_end":2907,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Recursion limit","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2908,"byte_end":2930,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2931,"byte_end":2934,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The `quote!` macro relies on deep recursion so some large invocations may","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":2935,"byte_end":3012,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ fail with \"recursion limit reached\" when you compile. If it fails, bump up","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3013,"byte_end":3091,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ the recursion limit by adding `#![recursion_limit = \"128\"]` to your crate.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3092,"byte_end":3170,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/ An even higher limit may be necessary for especially large invocations.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3171,"byte_end":3246,"line_start":91,"line_end":91,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16520,"byte_end":16526,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":139}],"decl_id":null,"docs":" Tokens produced by a [`quote!`] invocation.","sig":null,"attributes":[{"value":"/ Tokens produced by a [`quote!`] invocation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16398,"byte_end":16445,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16446,"byte_end":16449,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16450,"byte_end":16482,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16604,"byte_end":16607,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Tokens>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty tokens.\n","sig":null,"attributes":[{"value":"/ Empty tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16575,"byte_end":16592,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16788,"byte_end":16794,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"append","qualname":"<Tokens>::append","value":"pub fn append<U>(&mut Self, U) where U: Into<TokenTree>","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16666,"byte_end":16708,"line_start":23,"line_end":23,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16713,"byte_end":16716,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Appends the token specified to this list of tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16721,"byte_end":16776,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17396,"byte_end":17406,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"append_all","qualname":"<Tokens>::append_all","value":"pub fn append_all<T, I>(&mut Self, I) where T: ToTokens, I: IntoIterator<Item\n= T>","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16911,"byte_end":16953,"line_start":33,"line_end":33,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16958,"byte_end":16961,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16966,"byte_end":16973,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16978,"byte_end":17016,"line_start":36,"line_end":36,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17021,"byte_end":17057,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17062,"byte_end":17079,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17084,"byte_end":17097,"line_start":39,"line_end":39,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17102,"byte_end":17105,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17110,"byte_end":17135,"line_start":41,"line_end":41,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17140,"byte_end":17190,"line_start":42,"line_end":42,"column_start":5,"column_end":55}},{"value":"/         tokens.append_all(&[true, false]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17195,"byte_end":17241,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17246,"byte_end":17255,"line_start":44,"line_end":44,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17260,"byte_end":17265,"line_start":45,"line_end":45,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17270,"byte_end":17273,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17278,"byte_end":17306,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.to_string(), \"true false\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17311,"byte_end":17360,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17365,"byte_end":17372,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17377,"byte_end":17384,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17742,"byte_end":17758,"line_start":65,"line_end":65,"column_start":12,"column_end":28},"name":"append_separated","qualname":"<Tokens>::append_separated","value":"pub fn append_separated<T, I, U>(&mut Self, I, U) where T: ToTokens,\nI: IntoIterator<Item = T>, U: ToTokens","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17589,"byte_end":17631,"line_start":61,"line_end":61,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17636,"byte_end":17639,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Appends all of the items in the iterator `I`, separated by the tokens","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17644,"byte_end":17717,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ `U`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":17722,"byte_end":17730,"line_start":64,"line_end":64,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18276,"byte_end":18293,"line_start":83,"line_end":83,"column_start":12,"column_end":29},"name":"append_terminated","qualname":"<Tokens>::append_terminated","value":"pub fn append_terminated<T, I, U>(&mut Self, I, U) where T: ToTokens,\nI: IntoIterator<Item = T>, U: ToTokens","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18074,"byte_end":18116,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18121,"byte_end":18124,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Appends all tokens in the iterator `I`, appending `U` after each","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18129,"byte_end":18197,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ element, including after the last element of the iterator.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18202,"byte_end":18264,"line_start":82,"line_end":82,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19384,"byte_end":19392,"line_start":133,"line_end":133,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::tokens::private::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23515,"byte_end":23523,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"ToTokens","qualname":"::to_tokens::ToTokens","value":"ToTokens","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" Types that can be interpolated inside a [`quote!`] invocation.","sig":null,"attributes":[{"value":"/ Types that can be interpolated inside a [`quote!`] invocation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23401,"byte_end":23467,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23468,"byte_end":23471,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`quote!`]: macro.quote.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23472,"byte_end":23504,"line_start":9,"line_end":9,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24761,"byte_end":24770,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"::to_tokens::ToTokens::to_tokens","value":"pub fn to_tokens(&Self, &mut Tokens)","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Write `self` to the given `Tokens`.","sig":null,"attributes":[{"value":"/ Write `self` to the given `Tokens`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23530,"byte_end":23569,"line_start":11,"line_end":11,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23574,"byte_end":23577,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Example implementation for a struct representing Rust paths like","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23582,"byte_end":23650,"line_start":13,"line_end":13,"column_start":5,"column_end":73}},{"value":"/ `std::cmp::PartialEq`:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23655,"byte_end":23681,"line_start":14,"line_end":14,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23686,"byte_end":23689,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23694,"byte_end":23701,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23706,"byte_end":23729,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/ use quote::{Tokens, ToTokens};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23734,"byte_end":23768,"line_start":18,"line_end":18,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23773,"byte_end":23776,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ extern crate proc_macro2;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23781,"byte_end":23810,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/ use proc_macro2::{TokenTree, Spacing, Span, Op};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23815,"byte_end":23867,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23872,"byte_end":23875,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ pub struct Path {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23880,"byte_end":23901,"line_start":23,"line_end":23,"column_start":5,"column_end":26}},{"value":"/     pub global: bool,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23906,"byte_end":23931,"line_start":24,"line_end":24,"column_start":5,"column_end":30}},{"value":"/     pub segments: Vec<PathSegment>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23936,"byte_end":23975,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23980,"byte_end":23985,"line_start":26,"line_end":26,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23990,"byte_end":23993,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for Path {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":23998,"byte_end":24026,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24031,"byte_end":24081,"line_start":29,"line_end":29,"column_start":5,"column_end":55}},{"value":"/         for (i, segment) in self.segments.iter().enumerate() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24086,"byte_end":24152,"line_start":30,"line_end":30,"column_start":5,"column_end":71}},{"value":"/             if i > 0 || self.global {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24157,"byte_end":24198,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/                 // Double colon `::`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24203,"byte_end":24243,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/                 tokens.append(Op::new(':', Spacing::Joint));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24248,"byte_end":24312,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/                 tokens.append(Op::new(':', Spacing::Alone));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24317,"byte_end":24381,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/             }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24386,"byte_end":24403,"line_start":35,"line_end":35,"column_start":5,"column_end":22}},{"value":"/             segment.to_tokens(tokens);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24408,"byte_end":24450,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24455,"byte_end":24468,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24473,"byte_end":24482,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24487,"byte_end":24492,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24497,"byte_end":24502,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ # pub struct PathSegment;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24507,"byte_end":24536,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24541,"byte_end":24546,"line_start":42,"line_end":42,"column_start":5,"column_end":10}},{"value":"/ # impl ToTokens for PathSegment {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24551,"byte_end":24588,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ #     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24593,"byte_end":24645,"line_start":44,"line_end":44,"column_start":5,"column_end":57}},{"value":"/ #         unimplemented!()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24650,"byte_end":24680,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24685,"byte_end":24696,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24701,"byte_end":24708,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24713,"byte_end":24718,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24723,"byte_end":24741,"line_start":49,"line_end":49,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24746,"byte_end":24753,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25017,"byte_end":25028,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"into_tokens","qualname":"::to_tokens::ToTokens::into_tokens","value":"pub fn into_tokens(Self) -> Tokens where Self: Sized","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Convert `self` directly into a `Tokens` object.","sig":null,"attributes":[{"value":"/ Convert `self` directly into a `Tokens` object.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24805,"byte_end":24856,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24861,"byte_end":24864,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is implicitly implemented using `to_tokens`, and acts as a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24869,"byte_end":24943,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ convenience method for consumers of the `ToTokens` trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":24948,"byte_end":25009,"line_start":56,"line_end":56,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3573,"byte_end":3577,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"name":"__rt","qualname":"::__rt","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/lib.rs","byte_start":3666,"byte_end":3671,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"parse","qualname":"::__rt::parse","value":"pub fn parse(&mut ::Tokens, Span, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16562,"byte_end":16568,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18559,"byte_end":18565,"line_start":96,"line_end":96,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18750,"byte_end":18761,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18924,"byte_end":18935,"line_start":113,"line_end":113,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19127,"byte_end":19133,"line_start":120,"line_end":120,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19538,"byte_end":19546,"line_start":139,"line_end":139,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19694,"byte_end":19700,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19860,"byte_end":19866,"line_start":154,"line_end":154,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":20016,"byte_end":20030,"line_start":158,"line_end":158,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":21868,"byte_end":21874,"line_start":215,"line_end":215,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":23131,"byte_end":23137,"line_start":259,"line_end":259,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25381,"byte_end":25384,"line_start":73,"line_end":73,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25526,"byte_end":25529,"line_start":79,"line_end":79,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25658,"byte_end":25664,"line_start":85,"line_end":85,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25950,"byte_end":25956,"line_start":99,"line_end":99,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":26953,"byte_end":26957,"line_start":145,"line_end":145,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27071,"byte_end":27078,"line_start":151,"line_end":151,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27192,"byte_end":27201,"line_start":157,"line_end":157,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27309,"byte_end":27320,"line_start":163,"line_end":163,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":16562,"byte_end":16568,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18559,"byte_end":18565,"line_start":96,"line_end":96,"column_start":19,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":138},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18750,"byte_end":18761,"line_start":106,"line_end":106,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":17,"index":399},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":18924,"byte_end":18935,"line_start":113,"line_end":113,"column_start":35,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":16,"index":3041},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19127,"byte_end":19133,"line_start":120,"line_end":120,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19538,"byte_end":19546,"line_start":139,"line_end":139,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19694,"byte_end":19700,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":19860,"byte_end":19866,"line_start":154,"line_end":154,"column_start":16,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":20016,"byte_end":20030,"line_start":158,"line_end":158,"column_start":31,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":21868,"byte_end":21874,"line_start":215,"line_end":215,"column_start":20,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/tokens.rs","byte_start":23131,"byte_end":23137,"line_start":259,"line_end":259,"column_start":19,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25381,"byte_end":25384,"line_start":73,"line_end":73,"column_start":55,"column_end":58},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":340},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25526,"byte_end":25529,"line_start":79,"line_end":79,"column_start":41,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25658,"byte_end":25664,"line_start":85,"line_end":85,"column_start":32,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":31731},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":25950,"byte_end":25956,"line_start":99,"line_end":99,"column_start":19,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":26953,"byte_end":26957,"line_start":145,"line_end":145,"column_start":19,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":17,"index":480},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27071,"byte_end":27078,"line_start":151,"line_end":151,"column_start":19,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":17,"index":487},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27192,"byte_end":27201,"line_start":157,"line_end":157,"column_start":19,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":17,"index":410},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.5.1/src/to_tokens.rs","byte_start":27309,"byte_end":27320,"line_start":163,"line_end":163,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":17,"index":399},"to":{"krate":0,"index":93}}]}