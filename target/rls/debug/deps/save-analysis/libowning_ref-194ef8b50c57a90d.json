{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","owning_ref","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=194ef8b50c57a90d","-C","extra-filename=-194ef8b50c57a90d","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","stable_deref_trait=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libstable_deref_trait-13366624e63dd59b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libowning_ref-194ef8b50c57a90d.rmeta"},"prelude":{"crate_id":{"name":"owning_ref","disambiguator":[17474200199922494482,2403595965018194842]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","num":16,"id":{"name":"stable_deref_trait","disambiguator":[18308454576481566026,3614472565272176724]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":0,"byte_end":59988,"line_start":1,"line_end":1891,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":5},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6066,"byte_end":6077,"line_start":247,"line_end":247,"column_start":30,"column_end":41},"alias_span":null,"name":"StableAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":6},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6096,"byte_end":6112,"line_start":247,"line_end":247,"column_start":60,"column_end":76},"alias_span":null,"name":"CloneStableAddress","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":0,"byte_end":59988,"line_start":1,"line_end":1891,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":44},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":107},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":356},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":362},{"krate":0,"index":124},{"krate":0,"index":364},{"krate":0,"index":125},{"krate":0,"index":366},{"krate":0,"index":126},{"krate":0,"index":368},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":372},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":137},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":290},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":326},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342}],"decl_id":null,"docs":"# An owning reference.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"*\n# An owning reference.\n\nThis crate provides the _owning reference_ types `OwningRef` and `OwningRefMut`\nthat enables it to bundle a reference together with the owner of the data it points to.\nThis allows moving and dropping of a `OwningRef` without needing to recreate the reference.\n\nThis can sometimes be useful because Rust borrowing rules normally prevent\nmoving a type that has been moved from. For example, this kind of code gets rejected:\n\n```rust,ignore\nfn return_owned_and_referenced<'a>() -> (Vec<u8>, &'a [u8]) {\n    let v = vec![1, 2, 3, 4];\n    let s = &v[1..3];\n    (v, s)\n}\n```\n\nEven though, from a memory-layout point of view, this can be entirely safe\nif the new location of the vector still lives longer than the lifetime `'a`\nof the reference because the backing allocation of the vector does not change.\n\nThis library enables this safe usage by keeping the owner and the reference\nbundled together in a wrapper type that ensure that lifetime constraint:\n\n```rust\n# extern crate owning_ref;\n# use owning_ref::OwningRef;\n# fn main() {\nfn return_owned_and_referenced() -> OwningRef<Vec<u8>, [u8]> {\n    let v = vec![1, 2, 3, 4];\n    let or = OwningRef::new(v);\n    let or = or.map(|v| &v[1..3]);\n    or\n}\n# }\n```\n\nIt works by requiring owner types to dereference to stable memory locations\nand preventing mutable access to root containers, which in practice requires heap allocation\nas provided by `Box<T>`, `Rc<T>`, etc.\n\nAlso provided are typedefs for common owner type combinations,\nwhich allow for less verbose type signatures. For example, `BoxRef<T>` instead of `OwningRef<Box<T>, T>`.\n\nThe crate also provides the more advanced `OwningHandle` type,\nwhich allows more freedom in bundling a dependent handle object\nalong with the data it depends on, at the cost of some unsafe needed in the API.\nSee the documentation around `OwningHandle` for more details.\n\n# Examples\n\n## Basics\n\n```\nextern crate owning_ref;\nuse owning_ref::BoxRef;\n\nfn main() {\n    // Create an array owned by a Box.\n    let arr = Box::new([1, 2, 3, 4]) as Box<[i32]>;\n\n    // Transfer into a BoxRef.\n    let arr: BoxRef<[i32]> = BoxRef::new(arr);\n    assert_eq!(&*arr, &[1, 2, 3, 4]);\n\n    // We can slice the array without losing ownership or changing type.\n    let arr: BoxRef<[i32]> = arr.map(|arr| &arr[1..3]);\n    assert_eq!(&*arr, &[2, 3]);\n\n    // Also works for Arc, Rc, String and Vec!\n}\n```\n\n## Caching a reference to a struct field\n\n```\nextern crate owning_ref;\nuse owning_ref::BoxRef;\n\nfn main() {\n    struct Foo {\n        tag: u32,\n        x: u16,\n        y: u16,\n        z: u16,\n    }\n    let foo = Foo { tag: 1, x: 100, y: 200, z: 300 };\n\n    let or = BoxRef::new(Box::new(foo)).map(|foo| {\n        match foo.tag {\n            0 => &foo.x,\n            1 => &foo.y,\n            2 => &foo.z,\n            _ => panic!(),\n        }\n    });\n\n    assert_eq!(*or, 200);\n}\n```\n\n## Caching a reference to an entry in a vector\n\n```\nextern crate owning_ref;\nuse owning_ref::VecRef;\n\nfn main() {\n    let v = VecRef::new(vec![1, 2, 3, 4, 5]).map(|v| &v[3]);\n    assert_eq!(*v, 4);\n}\n```\n\n## Caching a subslice of a String\n\n```\nextern crate owning_ref;\nuse owning_ref::StringRef;\n\nfn main() {\n    let s = StringRef::new(\"hello world\".to_owned())\n        .map(|s| s.split(' ').nth(1).unwrap());\n\n    assert_eq!(&*s, \"world\");\n}\n```\n\n## Reference counted slices that share ownership of the backing storage\n\n```\nextern crate owning_ref;\nuse owning_ref::RcRef;\nuse std::rc::Rc;\n\nfn main() {\n    let rc: RcRef<[i32]> = RcRef::new(Rc::new([1, 2, 3, 4]) as Rc<[i32]>);\n    assert_eq!(&*rc, &[1, 2, 3, 4]);\n\n    let rc_a: RcRef<[i32]> = rc.clone().map(|s| &s[0..2]);\n    let rc_b = rc.clone().map(|s| &s[1..3]);\n    let rc_c = rc.clone().map(|s| &s[2..4]);\n    assert_eq!(&*rc_a, &[1, 2]);\n    assert_eq!(&*rc_b, &[2, 3]);\n    assert_eq!(&*rc_c, &[3, 4]);\n\n    let rc_c_a = rc_c.clone().map(|s| &s[1]);\n    assert_eq!(&*rc_c_a, &4);\n}\n```\n\n## Atomic reference counted slices that share ownership of the backing storage\n\n```\nextern crate owning_ref;\nuse owning_ref::ArcRef;\nuse std::sync::Arc;\n\nfn main() {\n    use std::thread;\n\n    fn par_sum(rc: ArcRef<[i32]>) -> i32 {\n        if rc.len() == 0 {\n            return 0;\n        } else if rc.len() == 1 {\n            return rc[0];\n        }\n        let mid = rc.len() / 2;\n        let left = rc.clone().map(|s| &s[..mid]);\n        let right = rc.map(|s| &s[mid..]);\n\n        let left = thread::spawn(move || par_sum(left));\n        let right = thread::spawn(move || par_sum(right));\n\n        left.join().unwrap() + right.join().unwrap()\n    }\n\n    let rc: Arc<[i32]> = Arc::new([1, 2, 3, 4]);\n    let rc: ArcRef<[i32]> = rc.into();\n\n    assert_eq!(par_sum(rc), 10);\n}\n```\n\n## References into RAII locks\n\n```\nextern crate owning_ref;\nuse owning_ref::RefRef;\nuse std::cell::{RefCell, Ref};\n\nfn main() {\n    let refcell = RefCell::new((1, 2, 3, 4));\n    // Also works with Mutex and RwLock\n\n    let refref = {\n        let refref = RefRef::new(refcell.borrow()).map(|x| &x.3);\n        assert_eq!(*refref, 4);\n\n        // We move the RAII lock and the reference to one of\n        // the subfields in the data it guards here:\n        refref\n    };\n\n    assert_eq!(*refref, 4);\n\n    drop(refref);\n\n    assert_eq!(*refcell.borrow(), (1, 2, 3, 4));\n}\n```\n\n## Mutable reference\n\nWhen the owned container implements `DerefMut`, it is also possible to make\na _mutable owning reference_. (E.g. with `Box`, `RefMut`, `MutexGuard`)\n\n```\nextern crate owning_ref;\nuse owning_ref::RefMutRefMut;\nuse std::cell::{RefCell, RefMut};\n\nfn main() {\n    let refcell = RefCell::new((1, 2, 3, 4));\n\n    let mut refmut_refmut = {\n        let mut refmut_refmut = RefMutRefMut::new(refcell.borrow_mut()).map_mut(|x| &mut x.3);\n        assert_eq!(*refmut_refmut, 4);\n        *refmut_refmut *= 2;\n\n        refmut_refmut\n    };\n\n    assert_eq!(*refmut_refmut, 8);\n    *refmut_refmut *= 2;\n\n    drop(refmut_refmut);\n\n    assert_eq!(*refcell.borrow(), (1, 2, 3, 16));\n}\n```\n*/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24,"byte_end":6002,"line_start":3,"line_end":244,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":7},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6474,"byte_end":6483,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"OwningRef","qualname":"::OwningRef","value":"OwningRef {  }","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" An owning reference.","sig":null,"attributes":[{"value":"/ An owning reference.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6138,"byte_end":6162,"line_start":249,"line_end":249,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6163,"byte_end":6166,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ This wraps an owner `O` and a reference `&T` pointing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6167,"byte_end":6224,"line_start":251,"line_end":251,"column_start":1,"column_end":58}},{"value":"/ at something reachable from `O::Target` while keeping","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6225,"byte_end":6282,"line_start":252,"line_end":252,"column_start":1,"column_end":58}},{"value":"/ the ability to move `self` around.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6283,"byte_end":6321,"line_start":253,"line_end":253,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6322,"byte_end":6325,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ The owner is usually a pointer that points at some base type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6326,"byte_end":6391,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6392,"byte_end":6395,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ For more details and examples, see the module and method docs.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6396,"byte_end":6462,"line_start":257,"line_end":257,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6890,"byte_end":6902,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"OwningRefMut","qualname":"::OwningRefMut","value":"OwningRefMut {  }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" An mutable owning reference.","sig":null,"attributes":[{"value":"/ An mutable owning reference.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6542,"byte_end":6574,"line_start":263,"line_end":263,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6575,"byte_end":6578,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ This wraps an owner `O` and a reference `&mut T` pointing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6579,"byte_end":6640,"line_start":265,"line_end":265,"column_start":1,"column_end":62}},{"value":"/ at something reachable from `O::Target` while keeping","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6641,"byte_end":6698,"line_start":266,"line_end":266,"column_start":1,"column_end":58}},{"value":"/ the ability to move `self` around.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6699,"byte_end":6737,"line_start":267,"line_end":267,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6738,"byte_end":6741,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ The owner is usually a pointer that points at some base type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6742,"byte_end":6807,"line_start":269,"line_end":269,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6808,"byte_end":6811,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ For more details and examples, see the module and method docs.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6812,"byte_end":6878,"line_start":271,"line_end":271,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7152,"byte_end":7158,"line_start":280,"line_end":280,"column_start":11,"column_end":17},"name":"Erased","qualname":"::Erased","value":"Erased","parent":null,"children":[],"decl_id":null,"docs":" Helper trait for an erased concrete type an owner dereferences to.\n This is used in form of a trait object for keeping\n something around to (virtually) call the destructor.\n","sig":null,"attributes":[{"value":"/ Helper trait for an erased concrete type an owner dereferences to.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":6959,"byte_end":7029,"line_start":277,"line_end":277,"column_start":1,"column_end":71}},{"value":"/ This is used in form of a trait object for keeping","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7030,"byte_end":7084,"line_start":278,"line_end":278,"column_start":1,"column_end":55}},{"value":"/ something around to (virtually) call the destructor.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7085,"byte_end":7141,"line_start":279,"line_end":279,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7402,"byte_end":7412,"line_start":286,"line_end":286,"column_start":18,"column_end":28},"name":"IntoErased","qualname":"::IntoErased","value":"IntoErased<'a>","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" Helper trait for erasing the concrete type of what an owner derferences to,\n for example `Box<T> -> Box<Erased>`. This would be unneeded with\n higher kinded types support in the language.\n","sig":null,"attributes":[{"value":"/ Helper trait for erasing the concrete type of what an owner derferences to,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7187,"byte_end":7266,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/ for example `Box<T> -> Box<Erased>`. This would be unneeded with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7267,"byte_end":7335,"line_start":284,"line_end":284,"column_start":1,"column_end":69}},{"value":"/ higher kinded types support in the language.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7336,"byte_end":7384,"line_start":285,"line_end":285,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7493,"byte_end":7499,"line_start":288,"line_end":288,"column_start":10,"column_end":16},"name":"Erased","qualname":"::IntoErased::Erased","value":"type Erased;","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Owner with the dereference type substituted to `Erased`.\n","sig":null,"attributes":[{"value":"/ Owner with the dereference type substituted to `Erased`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7423,"byte_end":7483,"line_start":287,"line_end":287,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7542,"byte_end":7553,"line_start":290,"line_end":290,"column_start":8,"column_end":19},"name":"into_erased","qualname":"::IntoErased::into_erased","value":"pub fn into_erased(Self) -> Self::Erased","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Perform the type erasure.\n","sig":null,"attributes":[{"value":"/ Perform the type erasure.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7505,"byte_end":7534,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8159,"byte_end":8162,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"new","qualname":"<OwningRef<O, T>>::new","value":"pub fn new(O) -> Self where O: StableAddress, O: Deref<Target = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owning reference from a owner\n initialized to the direct dereference of it.","sig":null,"attributes":[{"value":"/ Creates a new owning reference from a owner","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7791,"byte_end":7838,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ initialized to the direct dereference of it.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7843,"byte_end":7891,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7896,"byte_end":7899,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7904,"byte_end":7917,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7922,"byte_end":7929,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7934,"byte_end":7962,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRef;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7967,"byte_end":7997,"line_start":304,"line_end":304,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8002,"byte_end":8005,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8010,"byte_end":8025,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"/     let owning_ref = OwningRef::new(Box::new(42));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8030,"byte_end":8084,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(*owning_ref, 42);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8089,"byte_end":8125,"line_start":308,"line_end":308,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8130,"byte_end":8135,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8140,"byte_end":8147,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8709,"byte_end":8734,"line_start":326,"line_end":326,"column_start":19,"column_end":44},"name":"new_assert_stable_address","qualname":"<OwningRef<O, T>>::new_assert_stable_address","value":"pub unsafe fn new_assert_stable_address(O) -> Self where O: Deref<Target = T>","parent":null,"children":[],"decl_id":null,"docs":" Like `new`, but doesn’t require `O` to implement the `StableAddress` trait.\n Instead, the caller is responsible to make the same promises as implementing the trait.","sig":null,"attributes":[{"value":"/ Like `new`, but doesn’t require `O` to implement the `StableAddress` trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8342,"byte_end":8423,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ Instead, the caller is responsible to make the same promises as implementing the trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8428,"byte_end":8519,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8524,"byte_end":8527,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This is useful for cases where coherence rules prevents implementing the trait","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8532,"byte_end":8614,"line_start":324,"line_end":324,"column_start":5,"column_end":87}},{"value":"/ without adding a dependency to this crate in a third-party library.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8619,"byte_end":8690,"line_start":325,"line_end":325,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9610,"byte_end":9613,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"map","qualname":"<OwningRef<O, T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwningRef<O, U> where O: StableAddress,\nF: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new owning reference that points at something reachable\n from the previous one.","sig":null,"attributes":[{"value":"/ Converts `self` into a new owning reference that points at something reachable","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8882,"byte_end":8964,"line_start":335,"line_end":335,"column_start":5,"column_end":87}},{"value":"/ from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":8969,"byte_end":8995,"line_start":336,"line_end":336,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9000,"byte_end":9003,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9008,"byte_end":9090,"line_start":338,"line_end":338,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9095,"byte_end":9158,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9163,"byte_end":9166,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9171,"byte_end":9184,"line_start":341,"line_end":341,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9189,"byte_end":9196,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9201,"byte_end":9229,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRef;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9234,"byte_end":9264,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9269,"byte_end":9272,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9277,"byte_end":9292,"line_start":346,"line_end":346,"column_start":5,"column_end":20}},{"value":"/     let owning_ref = OwningRef::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9297,"byte_end":9361,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9366,"byte_end":9369,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9374,"byte_end":9429,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9434,"byte_end":9472,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/     let owning_ref = owning_ref.map(|array| &array[2]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9477,"byte_end":9536,"line_start":351,"line_end":351,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(*owning_ref, 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9541,"byte_end":9576,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9581,"byte_end":9586,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9591,"byte_end":9598,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10659,"byte_end":10666,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwningRef<O, T>>::try_map","value":"pub fn try_map<F, U: ?Sized, E>(Self, F) -> Result<OwningRef<O, U>, E> where\nO: StableAddress, F: FnOnce(&T) -> Result<&U, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `self` into a new owning reference that points\n at something reachable from the previous one.","sig":null,"attributes":[{"value":"/ Tries to convert `self` into a new owning reference that points","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9836,"byte_end":9903,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ at something reachable from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9908,"byte_end":9957,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9962,"byte_end":9965,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":9970,"byte_end":10052,"line_start":368,"line_end":368,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10057,"byte_end":10120,"line_start":369,"line_end":369,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10125,"byte_end":10128,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10133,"byte_end":10146,"line_start":371,"line_end":371,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10151,"byte_end":10158,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10163,"byte_end":10191,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRef;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10196,"byte_end":10226,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10231,"byte_end":10234,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10239,"byte_end":10254,"line_start":376,"line_end":376,"column_start":5,"column_end":20}},{"value":"/     let owning_ref = OwningRef::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10259,"byte_end":10323,"line_start":377,"line_end":377,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10328,"byte_end":10331,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10336,"byte_end":10391,"line_start":379,"line_end":379,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10396,"byte_end":10434,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/     let owning_ref = owning_ref.try_map(|array| {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10439,"byte_end":10492,"line_start":381,"line_end":381,"column_start":5,"column_end":58}},{"value":"/         if array[2] == 3 { Ok(&array[2]) } else { Err(()) }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10497,"byte_end":10560,"line_start":382,"line_end":382,"column_start":5,"column_end":68}},{"value":"/     });","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10565,"byte_end":10576,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(*owning_ref.unwrap(), 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10581,"byte_end":10625,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10630,"byte_end":10635,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10640,"byte_end":10647,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11253,"byte_end":11262,"line_start":402,"line_end":402,"column_start":19,"column_end":28},"name":"map_owner","qualname":"<OwningRef<O, T>>::map_owner","value":"pub unsafe fn map_owner<F, P>(Self, F) -> OwningRef<P, T> where\nO: StableAddress, P: StableAddress, F: FnOnce(O) -> P","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new owning reference with a different owner type.","sig":null,"attributes":[{"value":"/ Converts `self` into a new owning reference with a different owner type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":10919,"byte_end":10995,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11000,"byte_end":11003,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The new owner type needs to still contain the original owner in some way","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11008,"byte_end":11084,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ so that the reference into it remains valid. This function is marked unsafe","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11089,"byte_end":11168,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"/ because the user needs to manually uphold this guarantee.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11173,"byte_end":11234,"line_start":401,"line_end":401,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11763,"byte_end":11776,"line_start":418,"line_end":418,"column_start":12,"column_end":25},"name":"map_owner_box","qualname":"<OwningRef<O, T>>::map_owner_box","value":"pub fn map_owner_box(Self) -> OwningRef<Box<O>, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new owning reference where the owner is wrapped\n in an additional `Box<O>`.","sig":null,"attributes":[{"value":"/ Converts `self` into a new owning reference where the owner is wrapped","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11516,"byte_end":11590,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ in an additional `Box<O>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11595,"byte_end":11625,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11630,"byte_end":11633,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This can be used to safely erase the owner of any `OwningRef<O, T>`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11638,"byte_end":11709,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ to a `OwningRef<Box<Erased>, T>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11714,"byte_end":11751,"line_start":417,"line_end":417,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13182,"byte_end":13193,"line_start":457,"line_end":457,"column_start":12,"column_end":23},"name":"erase_owner","qualname":"<OwningRef<O, T>>::erase_owner","value":"pub fn erase_owner<'a>(Self) -> OwningRef<O::Erased, T> where O: IntoErased","parent":null,"children":[],"decl_id":null,"docs":" Erases the concrete base type of the owner with a trait object.","sig":null,"attributes":[{"value":"/ Erases the concrete base type of the owner with a trait object.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":11930,"byte_end":11997,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12002,"byte_end":12005,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This allows mixing of owned references with different owner base types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12010,"byte_end":12085,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12090,"byte_end":12093,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12098,"byte_end":12111,"line_start":429,"line_end":429,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12116,"byte_end":12123,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12128,"byte_end":12156,"line_start":431,"line_end":431,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::{OwningRef, Erased};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12161,"byte_end":12201,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12206,"byte_end":12209,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12214,"byte_end":12229,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/     // NB: Using the concrete types here for explicitnes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12234,"byte_end":12295,"line_start":435,"line_end":435,"column_start":5,"column_end":66}},{"value":"/     // For less verbose code type aliases like `BoxRef` are provided.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12300,"byte_end":12373,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12378,"byte_end":12381,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_a: OwningRef<Box<[i32; 4]>, [i32; 4]>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12386,"byte_end":12446,"line_start":438,"line_end":438,"column_start":5,"column_end":65}},{"value":"/         = OwningRef::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12451,"byte_end":12504,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12509,"byte_end":12512,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_b: OwningRef<Box<Vec<(i32, bool)>>, Vec<(i32, bool)>>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12517,"byte_end":12593,"line_start":441,"line_end":441,"column_start":5,"column_end":81}},{"value":"/         = OwningRef::new(Box::new(vec![(0, false), (1, true)]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12598,"byte_end":12666,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12671,"byte_end":12674,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_a: OwningRef<Box<[i32; 4]>, i32>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12679,"byte_end":12734,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/         = owning_ref_a.map(|a| &a[0]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12739,"byte_end":12781,"line_start":445,"line_end":445,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12786,"byte_end":12789,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_b: OwningRef<Box<Vec<(i32, bool)>>, i32>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12794,"byte_end":12857,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/         = owning_ref_b.map(|a| &a[1].0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12862,"byte_end":12906,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12911,"byte_end":12914,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/     let owning_refs: [OwningRef<Box<Erased>, i32>; 2]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12919,"byte_end":12976,"line_start":450,"line_end":450,"column_start":5,"column_end":62}},{"value":"/         = [owning_ref_a.erase_owner(), owning_ref_b.erase_owner()];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":12981,"byte_end":13052,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13057,"byte_end":13060,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*owning_refs[0], 1);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13065,"byte_end":13104,"line_start":453,"line_end":453,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(*owning_refs[1], 1);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13109,"byte_end":13148,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13153,"byte_end":13158,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13163,"byte_end":13170,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13503,"byte_end":13508,"line_start":470,"line_end":470,"column_start":12,"column_end":17},"name":"owner","qualname":"<OwningRef<O, T>>::owner","value":"pub fn owner(&Self) -> &O","parent":null,"children":[],"decl_id":null,"docs":" A getter for the underlying owner.\n","sig":null,"attributes":[{"value":"/ A getter for the underlying owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13453,"byte_end":13491,"line_start":469,"line_end":469,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13651,"byte_end":13661,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OwningRef<O, T>>::into_inner","value":"pub fn into_inner(Self) -> O","parent":null,"children":[],"decl_id":null,"docs":" Discards the reference and retrieves the owner.\n","sig":null,"attributes":[{"value":"/ Discards the reference and retrieves the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13588,"byte_end":13639,"line_start":475,"line_end":475,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14129,"byte_end":14132,"line_start":495,"line_end":495,"column_start":12,"column_end":15},"name":"new","qualname":"<OwningRefMut<O, T>>::new","value":"pub fn new(O) -> Self where O: StableAddress, O: DerefMut<Target = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owning reference from a owner\n initialized to the direct dereference of it.","sig":null,"attributes":[{"value":"/ Creates a new owning reference from a owner","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13747,"byte_end":13794,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ initialized to the direct dereference of it.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13799,"byte_end":13847,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13852,"byte_end":13855,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13860,"byte_end":13873,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13878,"byte_end":13885,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13890,"byte_end":13918,"line_start":487,"line_end":487,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRefMut;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13923,"byte_end":13956,"line_start":488,"line_end":488,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13961,"byte_end":13964,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13969,"byte_end":13984,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/     let owning_ref_mut = OwningRefMut::new(Box::new(42));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13989,"byte_end":14050,"line_start":491,"line_end":491,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(*owning_ref_mut, 42);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14055,"byte_end":14095,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14100,"byte_end":14105,"line_start":493,"line_end":493,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14110,"byte_end":14117,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14693,"byte_end":14718,"line_start":510,"line_end":510,"column_start":19,"column_end":44},"name":"new_assert_stable_address","qualname":"<OwningRefMut<O, T>>::new_assert_stable_address","value":"pub unsafe fn new_assert_stable_address(O) -> Self where O: DerefMut<Target =\nT>","parent":null,"children":[],"decl_id":null,"docs":" Like `new`, but doesn’t require `O` to implement the `StableAddress` trait.\n Instead, the caller is responsible to make the same promises as implementing the trait.","sig":null,"attributes":[{"value":"/ Like `new`, but doesn’t require `O` to implement the `StableAddress` trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14326,"byte_end":14407,"line_start":505,"line_end":505,"column_start":5,"column_end":84}},{"value":"/ Instead, the caller is responsible to make the same promises as implementing the trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14412,"byte_end":14503,"line_start":506,"line_end":506,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14508,"byte_end":14511,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This is useful for cases where coherence rules prevents implementing the trait","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14516,"byte_end":14598,"line_start":508,"line_end":508,"column_start":5,"column_end":87}},{"value":"/ without adding a dependency to this crate in a third-party library.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14603,"byte_end":14674,"line_start":509,"line_end":509,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15631,"byte_end":15634,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"map","qualname":"<OwningRefMut<O, T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwningRef<O, U> where O: StableAddress,\nF: FnOnce(&mut T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new _shared_ owning reference that points at\n something reachable from the previous one.","sig":null,"attributes":[{"value":"/ Converts `self` into a new _shared_ owning reference that points at","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14880,"byte_end":14951,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ something reachable from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":14956,"byte_end":15002,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15007,"byte_end":15010,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15015,"byte_end":15097,"line_start":522,"line_end":522,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15102,"byte_end":15165,"line_start":523,"line_end":523,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15170,"byte_end":15173,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15178,"byte_end":15191,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15196,"byte_end":15203,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15208,"byte_end":15236,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRefMut;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15241,"byte_end":15274,"line_start":528,"line_end":528,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15279,"byte_end":15282,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15287,"byte_end":15302,"line_start":530,"line_end":530,"column_start":5,"column_end":20}},{"value":"/     let owning_ref_mut = OwningRefMut::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15307,"byte_end":15378,"line_start":531,"line_end":531,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15383,"byte_end":15386,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15391,"byte_end":15446,"line_start":533,"line_end":533,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15451,"byte_end":15489,"line_start":534,"line_end":534,"column_start":5,"column_end":43}},{"value":"/     let owning_ref = owning_ref_mut.map(|array| &array[2]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15494,"byte_end":15557,"line_start":535,"line_end":535,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(*owning_ref, 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15562,"byte_end":15597,"line_start":536,"line_end":536,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15602,"byte_end":15607,"line_start":537,"line_end":537,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15612,"byte_end":15619,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16637,"byte_end":16644,"line_start":569,"line_end":569,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<OwningRefMut<O, T>>::map_mut","value":"pub fn map_mut<F, U: ?Sized>(Self, F) -> OwningRefMut<O, U> where\nO: StableAddress, F: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new _mutable_ owning reference that points at\n something reachable from the previous one.","sig":null,"attributes":[{"value":"/ Converts `self` into a new _mutable_ owning reference that points at","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15869,"byte_end":15941,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ something reachable from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15946,"byte_end":15992,"line_start":550,"line_end":550,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":15997,"byte_end":16000,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16005,"byte_end":16087,"line_start":552,"line_end":552,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16092,"byte_end":16155,"line_start":553,"line_end":553,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16160,"byte_end":16163,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16168,"byte_end":16181,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16186,"byte_end":16193,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16198,"byte_end":16226,"line_start":557,"line_end":557,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRefMut;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16231,"byte_end":16264,"line_start":558,"line_end":558,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16269,"byte_end":16272,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16277,"byte_end":16292,"line_start":560,"line_end":560,"column_start":5,"column_end":20}},{"value":"/     let owning_ref_mut = OwningRefMut::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16297,"byte_end":16368,"line_start":561,"line_end":561,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16373,"byte_end":16376,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16381,"byte_end":16436,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16441,"byte_end":16479,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/     let owning_ref_mut = owning_ref_mut.map_mut(|array| &mut array[2]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16484,"byte_end":16559,"line_start":565,"line_end":565,"column_start":5,"column_end":80}},{"value":"/     assert_eq!(*owning_ref_mut, 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16564,"byte_end":16603,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16608,"byte_end":16613,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16618,"byte_end":16625,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17735,"byte_end":17742,"line_start":601,"line_end":601,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwningRefMut<O, T>>::try_map","value":"pub fn try_map<F, U: ?Sized, E>(Self, F) -> Result<OwningRef<O, U>, E> where\nO: StableAddress, F: FnOnce(&mut T) -> Result<&U, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `self` into a new _shared_ owning reference that points\n at something reachable from the previous one.","sig":null,"attributes":[{"value":"/ Tries to convert `self` into a new _shared_ owning reference that points","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16889,"byte_end":16965,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ at something reachable from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":16970,"byte_end":17019,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17024,"byte_end":17027,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17032,"byte_end":17114,"line_start":582,"line_end":582,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17119,"byte_end":17182,"line_start":583,"line_end":583,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17187,"byte_end":17190,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17195,"byte_end":17208,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17213,"byte_end":17220,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17225,"byte_end":17253,"line_start":587,"line_end":587,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRefMut;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17258,"byte_end":17291,"line_start":588,"line_end":588,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17296,"byte_end":17299,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17304,"byte_end":17319,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/     let owning_ref_mut = OwningRefMut::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17324,"byte_end":17395,"line_start":591,"line_end":591,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17400,"byte_end":17403,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17408,"byte_end":17463,"line_start":593,"line_end":593,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17468,"byte_end":17506,"line_start":594,"line_end":594,"column_start":5,"column_end":43}},{"value":"/     let owning_ref = owning_ref_mut.try_map(|array| {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17511,"byte_end":17568,"line_start":595,"line_end":595,"column_start":5,"column_end":62}},{"value":"/         if array[2] == 3 { Ok(&array[2]) } else { Err(()) }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17573,"byte_end":17636,"line_start":596,"line_end":596,"column_start":5,"column_end":68}},{"value":"/     });","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17641,"byte_end":17652,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(*owning_ref.unwrap(), 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17657,"byte_end":17701,"line_start":598,"line_end":598,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17706,"byte_end":17711,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":17716,"byte_end":17723,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18870,"byte_end":18881,"line_start":633,"line_end":633,"column_start":12,"column_end":23},"name":"try_map_mut","qualname":"<OwningRefMut<O, T>>::try_map_mut","value":"pub fn try_map_mut<F, U: ?Sized, E>(Self, F) -> Result<OwningRefMut<O, U>, E>\nwhere O: StableAddress, F: FnOnce(&mut T) -> Result<&mut U, E>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert `self` into a new _mutable_ owning reference that points\n at something reachable from the previous one.","sig":null,"attributes":[{"value":"/ Tries to convert `self` into a new _mutable_ owning reference that points","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18007,"byte_end":18084,"line_start":611,"line_end":611,"column_start":5,"column_end":82}},{"value":"/ at something reachable from the previous one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18089,"byte_end":18138,"line_start":612,"line_end":612,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18143,"byte_end":18146,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ This can be a reference to a field of `U`, something reachable from a field of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18151,"byte_end":18233,"line_start":614,"line_end":614,"column_start":5,"column_end":87}},{"value":"/ `U`, or even something unrelated with a `'static` lifetime.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18238,"byte_end":18301,"line_start":615,"line_end":615,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18306,"byte_end":18309,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18314,"byte_end":18327,"line_start":617,"line_end":617,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18332,"byte_end":18339,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18344,"byte_end":18372,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::OwningRefMut;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18377,"byte_end":18410,"line_start":620,"line_end":620,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18415,"byte_end":18418,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18423,"byte_end":18438,"line_start":622,"line_end":622,"column_start":5,"column_end":20}},{"value":"/     let owning_ref_mut = OwningRefMut::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18443,"byte_end":18514,"line_start":623,"line_end":623,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18519,"byte_end":18522,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/     // create a owning reference that points at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18527,"byte_end":18582,"line_start":625,"line_end":625,"column_start":5,"column_end":60}},{"value":"/     // third element of the array.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18587,"byte_end":18625,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/     let owning_ref_mut = owning_ref_mut.try_map_mut(|array| {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18630,"byte_end":18695,"line_start":627,"line_end":627,"column_start":5,"column_end":70}},{"value":"/         if array[2] == 3 { Ok(&mut array[2]) } else { Err(()) }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18700,"byte_end":18767,"line_start":628,"line_end":628,"column_start":5,"column_end":72}},{"value":"/     });","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18772,"byte_end":18783,"line_start":629,"line_end":629,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(*owning_ref_mut.unwrap(), 3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18788,"byte_end":18836,"line_start":630,"line_end":630,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18841,"byte_end":18846,"line_start":631,"line_end":631,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":18851,"byte_end":18858,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19490,"byte_end":19499,"line_start":648,"line_end":648,"column_start":19,"column_end":28},"name":"map_owner","qualname":"<OwningRefMut<O, T>>::map_owner","value":"pub unsafe fn map_owner<F, P>(Self, F) -> OwningRefMut<P, T> where\nO: StableAddress, P: StableAddress, F: FnOnce(O) -> P","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new owning reference with a different owner type.","sig":null,"attributes":[{"value":"/ Converts `self` into a new owning reference with a different owner type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19156,"byte_end":19232,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19237,"byte_end":19240,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The new owner type needs to still contain the original owner in some way","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19245,"byte_end":19321,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ so that the reference into it remains valid. This function is marked unsafe","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19326,"byte_end":19405,"line_start":646,"line_end":646,"column_start":5,"column_end":84}},{"value":"/ because the user needs to manually uphold this guarantee.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19410,"byte_end":19471,"line_start":647,"line_end":647,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20012,"byte_end":20025,"line_start":664,"line_end":664,"column_start":12,"column_end":25},"name":"map_owner_box","qualname":"<OwningRefMut<O, T>>::map_owner_box","value":"pub fn map_owner_box(Self) -> OwningRefMut<Box<O>, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into a new owning reference where the owner is wrapped\n in an additional `Box<O>`.","sig":null,"attributes":[{"value":"/ Converts `self` into a new owning reference where the owner is wrapped","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19759,"byte_end":19833,"line_start":659,"line_end":659,"column_start":5,"column_end":79}},{"value":"/ in an additional `Box<O>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19838,"byte_end":19868,"line_start":660,"line_end":660,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19873,"byte_end":19876,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ This can be used to safely erase the owner of any `OwningRefMut<O, T>`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19881,"byte_end":19955,"line_start":662,"line_end":662,"column_start":5,"column_end":79}},{"value":"/ to a `OwningRefMut<Box<Erased>, T>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":19960,"byte_end":20000,"line_start":663,"line_end":663,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21521,"byte_end":21532,"line_start":703,"line_end":703,"column_start":12,"column_end":23},"name":"erase_owner","qualname":"<OwningRefMut<O, T>>::erase_owner","value":"pub fn erase_owner<'a>(Self) -> OwningRefMut<O::Erased, T> where O: IntoErased","parent":null,"children":[],"decl_id":null,"docs":" Erases the concrete base type of the owner with a trait object.","sig":null,"attributes":[{"value":"/ Erases the concrete base type of the owner with a trait object.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20185,"byte_end":20252,"line_start":671,"line_end":671,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20257,"byte_end":20260,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ This allows mixing of owned references with different owner base types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20265,"byte_end":20340,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20345,"byte_end":20348,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20353,"byte_end":20366,"line_start":675,"line_end":675,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20371,"byte_end":20378,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ extern crate owning_ref;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20383,"byte_end":20411,"line_start":677,"line_end":677,"column_start":5,"column_end":33}},{"value":"/ use owning_ref::{OwningRefMut, Erased};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20416,"byte_end":20459,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20464,"byte_end":20467,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20472,"byte_end":20487,"line_start":680,"line_end":680,"column_start":5,"column_end":20}},{"value":"/     // NB: Using the concrete types here for explicitnes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20492,"byte_end":20553,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/     // For less verbose code type aliases like `BoxRef` are provided.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20558,"byte_end":20631,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20636,"byte_end":20639,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_mut_a: OwningRefMut<Box<[i32; 4]>, [i32; 4]>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20644,"byte_end":20711,"line_start":684,"line_end":684,"column_start":5,"column_end":72}},{"value":"/         = OwningRefMut::new(Box::new([1, 2, 3, 4]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20716,"byte_end":20772,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20777,"byte_end":20780,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_mut_b: OwningRefMut<Box<Vec<(i32, bool)>>, Vec<(i32, bool)>>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20785,"byte_end":20868,"line_start":687,"line_end":687,"column_start":5,"column_end":88}},{"value":"/         = OwningRefMut::new(Box::new(vec![(0, false), (1, true)]));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20873,"byte_end":20944,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20949,"byte_end":20952,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_mut_a: OwningRefMut<Box<[i32; 4]>, i32>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":20957,"byte_end":21019,"line_start":690,"line_end":690,"column_start":5,"column_end":67}},{"value":"/         = owning_ref_mut_a.map_mut(|a| &mut a[0]);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21024,"byte_end":21078,"line_start":691,"line_end":691,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21083,"byte_end":21086,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/     let owning_ref_mut_b: OwningRefMut<Box<Vec<(i32, bool)>>, i32>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21091,"byte_end":21161,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/         = owning_ref_mut_b.map_mut(|a| &mut a[1].0);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21166,"byte_end":21222,"line_start":694,"line_end":694,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21227,"byte_end":21230,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/     let owning_refs_mut: [OwningRefMut<Box<Erased>, i32>; 2]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21235,"byte_end":21299,"line_start":696,"line_end":696,"column_start":5,"column_end":69}},{"value":"/         = [owning_ref_mut_a.erase_owner(), owning_ref_mut_b.erase_owner()];","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21304,"byte_end":21383,"line_start":697,"line_end":697,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21388,"byte_end":21391,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*owning_refs_mut[0], 1);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21396,"byte_end":21439,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*owning_refs_mut[1], 1);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21444,"byte_end":21487,"line_start":700,"line_end":700,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21492,"byte_end":21497,"line_start":701,"line_end":701,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21502,"byte_end":21509,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21848,"byte_end":21853,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"owner","qualname":"<OwningRefMut<O, T>>::owner","value":"pub fn owner(&Self) -> &O","parent":null,"children":[],"decl_id":null,"docs":" A getter for the underlying owner.\n","sig":null,"attributes":[{"value":"/ A getter for the underlying owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21798,"byte_end":21836,"line_start":715,"line_end":715,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21996,"byte_end":22006,"line_start":722,"line_end":722,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OwningRefMut<O, T>>::into_inner","value":"pub fn into_inner(Self) -> O","parent":null,"children":[],"decl_id":null,"docs":" Discards the reference and retrieves the owner.\n","sig":null,"attributes":[{"value":"/ Discards the reference and retrieves the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":21933,"byte_end":21984,"line_start":721,"line_end":721,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23438,"byte_end":23450,"line_start":752,"line_end":752,"column_start":12,"column_end":24},"name":"OwningHandle","qualname":"::OwningHandle","value":"OwningHandle {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" `OwningHandle` is a complement to `OwningRef`. Where `OwningRef` allows\n consumers to pass around an owned object and a dependent reference,\n `OwningHandle` contains an owned object and a dependent _object_.","sig":null,"attributes":[{"value":"/ `OwningHandle` is a complement to `OwningRef`. Where `OwningRef` allows","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22255,"byte_end":22330,"line_start":733,"line_end":733,"column_start":1,"column_end":76}},{"value":"/ consumers to pass around an owned object and a dependent reference,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22331,"byte_end":22402,"line_start":734,"line_end":734,"column_start":1,"column_end":72}},{"value":"/ `OwningHandle` contains an owned object and a dependent _object_.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22403,"byte_end":22472,"line_start":735,"line_end":735,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22473,"byte_end":22476,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ `OwningHandle` can encapsulate a `RefMut` along with its associated","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22477,"byte_end":22548,"line_start":737,"line_end":737,"column_start":1,"column_end":72}},{"value":"/ `RefCell`, or an `RwLockReadGuard` along with its associated `RwLock`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22549,"byte_end":22623,"line_start":738,"line_end":738,"column_start":1,"column_end":75}},{"value":"/ However, the API is completely generic and there are no restrictions on","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22624,"byte_end":22699,"line_start":739,"line_end":739,"column_start":1,"column_end":76}},{"value":"/ what types of owning and dependent objects may be used.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22700,"byte_end":22759,"line_start":740,"line_end":740,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22760,"byte_end":22763,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ `OwningHandle` is created by passing an owner object (which dereferences","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22764,"byte_end":22840,"line_start":742,"line_end":742,"column_start":1,"column_end":77}},{"value":"/ to a stable address) along with a callback which receives a pointer to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22841,"byte_end":22915,"line_start":743,"line_end":743,"column_start":1,"column_end":75}},{"value":"/ that stable location. The callback may then dereference the pointer and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22916,"byte_end":22991,"line_start":744,"line_end":744,"column_start":1,"column_end":76}},{"value":"/ mint a dependent object, with the guarantee that the returned object will","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":22992,"byte_end":23069,"line_start":745,"line_end":745,"column_start":1,"column_end":78}},{"value":"/ not outlive the referent of the pointer.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23070,"byte_end":23114,"line_start":746,"line_end":746,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23115,"byte_end":23118,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ Since the callback needs to dereference a raw pointer, it requires `unsafe`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23119,"byte_end":23198,"line_start":748,"line_end":748,"column_start":1,"column_end":80}},{"value":"/ code. To avoid forcing this unsafety on most callers, the `ToHandle` trait is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23199,"byte_end":23280,"line_start":749,"line_end":749,"column_start":1,"column_end":82}},{"value":"/ implemented for common data structures. Types that implement `ToHandle` can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23281,"byte_end":23360,"line_start":750,"line_end":750,"column_start":1,"column_end":80}},{"value":"/ be wrapped into an `OwningHandle` without passing a callback.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23361,"byte_end":23426,"line_start":751,"line_end":751,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":91},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24077,"byte_end":24085,"line_start":781,"line_end":781,"column_start":11,"column_end":19},"name":"ToHandle","qualname":"::ToHandle","value":"ToHandle","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" Trait to implement the conversion of owner to handle for common types.\n","sig":null,"attributes":[{"value":"/ Trait to implement the conversion of owner to handle for common types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23992,"byte_end":24066,"line_start":780,"line_end":780,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":92},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24164,"byte_end":24170,"line_start":783,"line_end":783,"column_start":10,"column_end":16},"name":"Handle","qualname":"::ToHandle::Handle","value":"type Handle: Deref;","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" The type of handle to be encapsulated by the OwningHandle.\n","sig":null,"attributes":[{"value":"/ The type of handle to be encapsulated by the OwningHandle.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24092,"byte_end":24154,"line_start":782,"line_end":782,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24324,"byte_end":24333,"line_start":787,"line_end":787,"column_start":15,"column_end":24},"name":"to_handle","qualname":"::ToHandle::to_handle","value":"pub unsafe fn to_handle(*const Self) -> Self::Handle","parent":{"krate":0,"index":91},"children":[],"decl_id":null,"docs":" Given an appropriately-long-lived pointer to ourselves, create a\n handle to be encapsulated by the `OwningHandle`.\n","sig":null,"attributes":[{"value":"/ Given an appropriately-long-lived pointer to ourselves, create a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24184,"byte_end":24252,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"/ handle to be encapsulated by the `OwningHandle`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24257,"byte_end":24309,"line_start":786,"line_end":786,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24463,"byte_end":24474,"line_start":791,"line_end":791,"column_start":11,"column_end":22},"name":"ToHandleMut","qualname":"::ToHandleMut","value":"ToHandleMut","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" Trait to implement the conversion of owner to mutable handle for common types.\n","sig":null,"attributes":[{"value":"/ Trait to implement the conversion of owner to mutable handle for common types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24370,"byte_end":24452,"line_start":790,"line_end":790,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24553,"byte_end":24562,"line_start":793,"line_end":793,"column_start":10,"column_end":19},"name":"HandleMut","qualname":"::ToHandleMut::HandleMut","value":"type HandleMut: DerefMut;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" The type of handle to be encapsulated by the OwningHandle.\n","sig":null,"attributes":[{"value":"/ The type of handle to be encapsulated by the OwningHandle.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24481,"byte_end":24543,"line_start":792,"line_end":792,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24727,"byte_end":24740,"line_start":797,"line_end":797,"column_start":15,"column_end":28},"name":"to_handle_mut","qualname":"::ToHandleMut::to_handle_mut","value":"pub unsafe fn to_handle_mut(*const Self) -> Self::HandleMut","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Given an appropriately-long-lived pointer to ourselves, create a\n mutable handle to be encapsulated by the `OwningHandle`.\n","sig":null,"attributes":[{"value":"/ Given an appropriately-long-lived pointer to ourselves, create a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24579,"byte_end":24647,"line_start":795,"line_end":795,"column_start":5,"column_end":73}},{"value":"/ mutable handle to be encapsulated by the `OwningHandle`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24652,"byte_end":24712,"line_start":796,"line_end":796,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25114,"byte_end":25117,"line_start":806,"line_end":806,"column_start":12,"column_end":15},"name":"new","qualname":"<OwningHandle<O, H>>::new","value":"pub fn new(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OwningHandle` for a type that implements `ToHandle`. For types\n that don't implement `ToHandle`, callers may invoke `new_with_fn`, which accepts\n a callback to perform the conversion.\n","sig":null,"attributes":[{"value":"/ Create a new `OwningHandle` for a type that implements `ToHandle`. For types","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24887,"byte_end":24967,"line_start":803,"line_end":803,"column_start":5,"column_end":85}},{"value":"/ that don't implement `ToHandle`, callers may invoke `new_with_fn`, which accepts","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24972,"byte_end":25056,"line_start":804,"line_end":804,"column_start":5,"column_end":89}},{"value":"/ a callback to perform the conversion.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25061,"byte_end":25102,"line_start":805,"line_end":805,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25429,"byte_end":25436,"line_start":815,"line_end":815,"column_start":12,"column_end":19},"name":"new_mut","qualname":"<OwningHandle<O, H>>::new_mut","value":"pub fn new_mut(O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new mutable `OwningHandle` for a type that implements `ToHandleMut`.\n","sig":null,"attributes":[{"value":"/ Create a new mutable `OwningHandle` for a type that implements `ToHandleMut`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25336,"byte_end":25417,"line_start":814,"line_end":814,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25877,"byte_end":25888,"line_start":827,"line_end":827,"column_start":12,"column_end":23},"name":"new_with_fn","qualname":"<OwningHandle<O, H>>::new_with_fn","value":"pub fn new_with_fn<F>(O, F) -> Self where F: FnOnce(*const O::Target) -> H","parent":null,"children":[],"decl_id":null,"docs":" Create a new OwningHandle. The provided callback will be invoked with\n a pointer to the object owned by `o`, and the returned value is stored\n as the object to which this `OwningHandle` will forward `Deref` and\n `DerefMut`.\n","sig":null,"attributes":[{"value":"/ Create a new OwningHandle. The provided callback will be invoked with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25617,"byte_end":25690,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ a pointer to the object owned by `o`, and the returned value is stored","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25695,"byte_end":25769,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/ as the object to which this `OwningHandle` will forward `Deref` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25774,"byte_end":25845,"line_start":825,"line_end":825,"column_start":5,"column_end":76}},{"value":"/ `DerefMut`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25850,"byte_end":25865,"line_start":826,"line_end":826,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":26400,"byte_end":26407,"line_start":845,"line_end":845,"column_start":12,"column_end":19},"name":"try_new","qualname":"<OwningHandle<O, H>>::try_new","value":"pub fn try_new<F, E>(O, F) -> Result<Self, E> where\nF: FnOnce(*const O::Target) -> Result<H, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a new OwningHandle. The provided callback will be invoked with\n a pointer to the object owned by `o`, and the returned value is stored\n as the object to which this `OwningHandle` will forward `Deref` and\n `DerefMut`.\n","sig":null,"attributes":[{"value":"/ Create a new OwningHandle. The provided callback will be invoked with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":26140,"byte_end":26213,"line_start":841,"line_end":841,"column_start":5,"column_end":78}},{"value":"/ a pointer to the object owned by `o`, and the returned value is stored","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":26218,"byte_end":26292,"line_start":842,"line_end":842,"column_start":5,"column_end":79}},{"value":"/ as the object to which this `OwningHandle` will forward `Deref` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":26297,"byte_end":26368,"line_start":843,"line_end":843,"column_start":5,"column_end":76}},{"value":"/ `DerefMut`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":26373,"byte_end":26388,"line_start":844,"line_end":844,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":269},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32650,"byte_end":32656,"line_start":1088,"line_end":1088,"column_start":10,"column_end":16},"name":"BoxRef","qualname":"::BoxRef","value":"OwningRef<Box<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `Box` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `Box` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32575,"byte_end":32640,"line_start":1087,"line_end":1087,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":272},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32766,"byte_end":32772,"line_start":1090,"line_end":1090,"column_start":10,"column_end":16},"name":"VecRef","qualname":"::VecRef","value":"OwningRef<Vec<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `Vec` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `Vec` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32691,"byte_end":32756,"line_start":1089,"line_end":1089,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":275},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32885,"byte_end":32894,"line_start":1092,"line_end":1092,"column_start":10,"column_end":19},"name":"StringRef","qualname":"::StringRef","value":"OwningRef<String, str>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `String` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `String` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32807,"byte_end":32875,"line_start":1091,"line_end":1091,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":276},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32996,"byte_end":33001,"line_start":1095,"line_end":1095,"column_start":10,"column_end":15},"name":"RcRef","qualname":"::RcRef","value":"OwningRef<Rc<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `Rc` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `Rc` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32922,"byte_end":32986,"line_start":1094,"line_end":1094,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":279},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33110,"byte_end":33116,"line_start":1097,"line_end":1097,"column_start":10,"column_end":16},"name":"ArcRef","qualname":"::ArcRef","value":"OwningRef<Arc<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `Arc` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `Arc` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33035,"byte_end":33100,"line_start":1096,"line_end":1096,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":282},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33227,"byte_end":33233,"line_start":1100,"line_end":1100,"column_start":10,"column_end":16},"name":"RefRef","qualname":"::RefRef","value":"OwningRef<Ref, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `Ref` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `Ref` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33152,"byte_end":33217,"line_start":1099,"line_end":1099,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":286},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33354,"byte_end":33363,"line_start":1102,"line_end":1102,"column_start":10,"column_end":19},"name":"RefMutRef","qualname":"::RefMutRef","value":"OwningRef<RefMut, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `RefMut` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `RefMut` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33276,"byte_end":33344,"line_start":1101,"line_end":1101,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":290},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33491,"byte_end":33504,"line_start":1104,"line_end":1104,"column_start":10,"column_end":23},"name":"MutexGuardRef","qualname":"::MutexGuardRef","value":"OwningRef<MutexGuard, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `MutexGuard` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `MutexGuard` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33409,"byte_end":33481,"line_start":1103,"line_end":1103,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":294},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33641,"byte_end":33659,"line_start":1106,"line_end":1106,"column_start":10,"column_end":28},"name":"RwLockReadGuardRef","qualname":"::RwLockReadGuardRef","value":"OwningRef<RwLockReadGuard, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `RwLockReadGuard` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `RwLockReadGuard` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33554,"byte_end":33631,"line_start":1105,"line_end":1105,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":298},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33802,"byte_end":33821,"line_start":1108,"line_end":1108,"column_start":10,"column_end":29},"name":"RwLockWriteGuardRef","qualname":"::RwLockWriteGuardRef","value":"OwningRef<RwLockWriteGuard, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses a `RwLockWriteGuard` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses a `RwLockWriteGuard` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33714,"byte_end":33792,"line_start":1107,"line_end":1107,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33961,"byte_end":33970,"line_start":1111,"line_end":1111,"column_start":10,"column_end":19},"name":"BoxRefMut","qualname":"::BoxRefMut","value":"OwningRefMut<Box<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `Box` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `Box` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":33878,"byte_end":33951,"line_start":1110,"line_end":1110,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":305},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34091,"byte_end":34100,"line_start":1113,"line_end":1113,"column_start":10,"column_end":19},"name":"VecRefMut","qualname":"::VecRefMut","value":"OwningRefMut<Vec<T>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `Vec` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `Vec` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34008,"byte_end":34081,"line_start":1112,"line_end":1112,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":308},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34224,"byte_end":34236,"line_start":1115,"line_end":1115,"column_start":10,"column_end":22},"name":"StringRefMut","qualname":"::StringRefMut","value":"OwningRefMut<String, str>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `String` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `String` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34138,"byte_end":34214,"line_start":1114,"line_end":1114,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":309},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34353,"byte_end":34365,"line_start":1118,"line_end":1118,"column_start":10,"column_end":22},"name":"RefMutRefMut","qualname":"::RefMutRefMut","value":"OwningRefMut<RefMut, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `RefMut` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `RefMut` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34267,"byte_end":34343,"line_start":1117,"line_end":1117,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":313},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34504,"byte_end":34520,"line_start":1120,"line_end":1120,"column_start":10,"column_end":26},"name":"MutexGuardRefMut","qualname":"::MutexGuardRefMut","value":"OwningRefMut<MutexGuard, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `MutexGuard` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `MutexGuard` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34414,"byte_end":34494,"line_start":1119,"line_end":1119,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":317},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34669,"byte_end":34691,"line_start":1122,"line_end":1122,"column_start":10,"column_end":32},"name":"RwLockWriteGuardRefMut","qualname":"::RwLockWriteGuardRefMut","value":"OwningRef<RwLockWriteGuard, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses a `RwLockWriteGuard` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses a `RwLockWriteGuard` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34573,"byte_end":34659,"line_start":1121,"line_end":1121,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35283,"byte_end":35295,"line_start":1144,"line_end":1144,"column_start":10,"column_end":22},"name":"ErasedBoxRef","qualname":"::ErasedBoxRef","value":"OwningRef<Box<Erased>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses an erased `Box` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses an erased `Box` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35200,"byte_end":35273,"line_start":1143,"line_end":1143,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":338},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35410,"byte_end":35421,"line_start":1146,"line_end":1146,"column_start":10,"column_end":21},"name":"ErasedRcRef","qualname":"::ErasedRcRef","value":"OwningRef<Rc<Erased>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses an erased `Rc` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses an erased `Rc` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35328,"byte_end":35400,"line_start":1145,"line_end":1145,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35536,"byte_end":35548,"line_start":1148,"line_end":1148,"column_start":10,"column_end":22},"name":"ErasedArcRef","qualname":"::ErasedArcRef","value":"OwningRef<Arc<Erased>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a owning reference that uses an erased `Arc` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a owning reference that uses an erased `Arc` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35453,"byte_end":35526,"line_start":1147,"line_end":1147,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":342},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35673,"byte_end":35688,"line_start":1151,"line_end":1151,"column_start":10,"column_end":25},"name":"ErasedBoxRefMut","qualname":"::ErasedBoxRefMut","value":"OwningRefMut<Box<Erased>, U>","parent":null,"children":[],"decl_id":null,"docs":" Typedef of a mutable owning reference that uses an erased `Box` as the owner.\n","sig":null,"attributes":[{"value":"/ Typedef of a mutable owning reference that uses an erased `Box` as the owner.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35582,"byte_end":35663,"line_start":1150,"line_end":1150,"column_start":1,"column_end":82}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7181,"byte_end":7182,"line_start":281,"line_end":281,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7769,"byte_end":7778,"line_start":297,"line_end":297,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13722,"byte_end":13734,"line_start":481,"line_end":481,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23551,"byte_end":23563,"line_start":759,"line_end":759,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23748,"byte_end":23760,"line_start":768,"line_end":768,"column_start":37,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23841,"byte_end":23853,"line_start":772,"line_end":772,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24791,"byte_end":24803,"line_start":800,"line_end":800,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25231,"byte_end":25243,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25554,"byte_end":25566,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27086,"byte_end":27095,"line_start":871,"line_end":871,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27248,"byte_end":27260,"line_start":881,"line_end":881,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27416,"byte_end":27428,"line_start":891,"line_end":891,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27590,"byte_end":27599,"line_start":899,"line_end":899,"column_start":45,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27642,"byte_end":27651,"line_start":901,"line_end":901,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27745,"byte_end":27757,"line_start":907,"line_end":907,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27851,"byte_end":27863,"line_start":913,"line_end":913,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27970,"byte_end":27979,"line_start":919,"line_end":919,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28072,"byte_end":28081,"line_start":925,"line_end":925,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28252,"byte_end":28264,"line_start":934,"line_end":934,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28457,"byte_end":28466,"line_start":943,"line_end":943,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28797,"byte_end":28806,"line_start":957,"line_end":957,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29097,"byte_end":29109,"line_start":969,"line_end":969,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29403,"byte_end":29412,"line_start":981,"line_end":981,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29650,"byte_end":29659,"line_start":992,"line_end":992,"column_start":50,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29737,"byte_end":29746,"line_start":995,"line_end":995,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29832,"byte_end":29841,"line_start":997,"line_end":997,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29928,"byte_end":29940,"line_start":1000,"line_end":1000,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30030,"byte_end":30042,"line_start":1002,"line_end":1002,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30265,"byte_end":30274,"line_start":1011,"line_end":1011,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30420,"byte_end":30429,"line_start":1017,"line_end":1017,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30486,"byte_end":30495,"line_start":1019,"line_end":1019,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30672,"byte_end":30681,"line_start":1025,"line_end":1025,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30828,"byte_end":30837,"line_start":1031,"line_end":1031,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30985,"byte_end":30997,"line_start":1037,"line_end":1037,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31143,"byte_end":31155,"line_start":1043,"line_end":1043,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31212,"byte_end":31224,"line_start":1045,"line_end":1045,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31401,"byte_end":31413,"line_start":1051,"line_end":1051,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31560,"byte_end":31572,"line_start":1057,"line_end":1057,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32087,"byte_end":32094,"line_start":1073,"line_end":1073,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32245,"byte_end":32252,"line_start":1078,"line_end":1078,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34790,"byte_end":34793,"line_start":1124,"line_end":1124,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34941,"byte_end":34943,"line_start":1130,"line_end":1130,"column_start":43,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35090,"byte_end":35093,"line_start":1136,"line_end":1136,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7181,"byte_end":7182,"line_start":281,"line_end":281,"column_start":20,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":7769,"byte_end":7778,"line_start":297,"line_end":297,"column_start":20,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":7},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":13722,"byte_end":13734,"line_start":481,"line_end":481,"column_start":20,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23551,"byte_end":23563,"line_start":759,"line_end":759,"column_start":22,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23748,"byte_end":23760,"line_start":768,"line_end":768,"column_start":37,"column_end":49},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":74},"to":{"krate":16,"index":5}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":23841,"byte_end":23853,"line_start":772,"line_end":772,"column_start":25,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":24791,"byte_end":24803,"line_start":800,"line_end":800,"column_start":12,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25231,"byte_end":25243,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":25554,"byte_end":25566,"line_start":820,"line_end":820,"column_start":12,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27086,"byte_end":27095,"line_start":871,"line_end":871,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27248,"byte_end":27260,"line_start":881,"line_end":881,"column_start":30,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27416,"byte_end":27428,"line_start":891,"line_end":891,"column_start":33,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27590,"byte_end":27599,"line_start":899,"line_end":899,"column_start":45,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":7},"to":{"krate":16,"index":5}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27642,"byte_end":27651,"line_start":901,"line_end":901,"column_start":33,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27745,"byte_end":27757,"line_start":907,"line_end":907,"column_start":33,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27851,"byte_end":27863,"line_start":913,"line_end":913,"column_start":33,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1946}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":27970,"byte_end":27979,"line_start":919,"line_end":919,"column_start":34,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1710}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28072,"byte_end":28081,"line_start":925,"line_end":925,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28252,"byte_end":28264,"line_start":934,"line_end":934,"column_start":32,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28457,"byte_end":28466,"line_start":943,"line_end":943,"column_start":49,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":28797,"byte_end":28806,"line_start":957,"line_end":957,"column_start":30,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29097,"byte_end":29109,"line_start":969,"line_end":969,"column_start":30,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29403,"byte_end":29412,"line_start":981,"line_end":981,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29650,"byte_end":29659,"line_start":992,"line_end":992,"column_start":50,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":7},"to":{"krate":16,"index":6}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29737,"byte_end":29746,"line_start":995,"line_end":995,"column_start":36,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29832,"byte_end":29841,"line_start":997,"line_end":997,"column_start":36,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":29928,"byte_end":29940,"line_start":1000,"line_end":1000,"column_start":36,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30030,"byte_end":30042,"line_start":1002,"line_end":1002,"column_start":36,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30265,"byte_end":30274,"line_start":1011,"line_end":1011,"column_start":34,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30420,"byte_end":30429,"line_start":1017,"line_end":1017,"column_start":27,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30486,"byte_end":30495,"line_start":1019,"line_end":1019,"column_start":35,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30672,"byte_end":30681,"line_start":1025,"line_end":1025,"column_start":28,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30828,"byte_end":30837,"line_start":1031,"line_end":1031,"column_start":29,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":30985,"byte_end":30997,"line_start":1037,"line_end":1037,"column_start":34,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31143,"byte_end":31155,"line_start":1043,"line_end":1043,"column_start":27,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31212,"byte_end":31224,"line_start":1045,"line_end":1045,"column_start":35,"column_end":47},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31401,"byte_end":31413,"line_start":1051,"line_end":1051,"column_start":28,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":31560,"byte_end":31572,"line_start":1057,"line_end":1057,"column_start":29,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32087,"byte_end":32094,"line_start":1073,"line_end":1073,"column_start":31,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":2967},"to":{"krate":0,"index":91}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":32245,"byte_end":32252,"line_start":1078,"line_end":1078,"column_start":34,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":2,"index":2967},"to":{"krate":0,"index":94}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34790,"byte_end":34793,"line_start":1124,"line_end":1124,"column_start":43,"column_end":46},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":34941,"byte_end":34943,"line_start":1130,"line_end":1130,"column_start":43,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":5,"index":3324},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/owning_ref-0.3.3/src/lib.rs","byte_start":35090,"byte_end":35093,"line_start":1136,"line_end":1136,"column_start":43,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":20}}]}