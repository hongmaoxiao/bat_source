{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","term_size","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=6a9109ea561850f0","-C","extra-filename=-6a9109ea561850f0","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","libc=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/liblibc-45456c704780836c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libterm_size-6a9109ea561850f0.rmeta"},"prelude":{"crate_id":{"name":"term_size","disambiguator":[16821999925108955986,3774811163787982368]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[8000104344433599533,15219794654319678357]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":209,"byte_end":8943,"line_start":6,"line_end":237,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":25},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":784,"byte_end":794,"line_start":22,"line_end":22,"column_start":20,"column_end":30},"alias_span":null,"name":"dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":796,"byte_end":813,"line_start":22,"line_end":22,"column_start":32,"column_end":49},"alias_span":null,"name":"dimensions_stdout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":815,"byte_end":831,"line_start":22,"line_end":22,"column_start":51,"column_end":67},"alias_span":null,"name":"dimensions_stdin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":833,"byte_end":850,"line_start":22,"line_end":22,"column_start":69,"column_end":86},"alias_span":null,"name":"dimensions_stderr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":209,"byte_end":8943,"line_start":6,"line_end":237,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" System calls for getting the terminal size.","sig":null,"attributes":[{"value":"/ System calls for getting the terminal size.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":209,"byte_end":256,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":257,"byte_end":260,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Getting the terminal size is performed using an ioctl command that takes","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":261,"byte_end":337,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ the file handle to the terminal -- which in this case, is stdout -- and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":338,"byte_end":413,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ populates a structure containing the values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":414,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":463,"byte_end":466,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The size is needed when the user wants the output formatted into columns:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":467,"byte_end":544,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ the default grid view, or the hybrid grid-details view.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":545,"byte_end":604,"line_start":13,"line_end":13,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4471,"byte_end":4481,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"dimensions","qualname":"::platform::dimensions","value":"pub fn dimensions() -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's output (`stdout`), input (`stdin`), and error (`stderr`) in\n that order, in the attempt to dtermine terminal width. If one of those streams is actually\n a tty, this function returns its width and height as a number of characters.","sig":null,"attributes":[{"value":"/ Query the current processes's output (`stdout`), input (`stdin`), and error (`stderr`) in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4074,"byte_end":4167,"line_start":118,"line_end":118,"column_start":5,"column_end":98}},{"value":"/ that order, in the attempt to dtermine terminal width. If one of those streams is actually","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4172,"byte_end":4266,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ a tty, this function returns its width and height as a number of characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4271,"byte_end":4351,"line_start":120,"line_end":120,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4356,"byte_end":4359,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ If *all* of the streams are not ttys or return any errors this function will return `None`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4364,"byte_end":4459,"line_start":122,"line_end":122,"column_start":5,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5061,"byte_end":5078,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"dimensions_stdout","qualname":"::platform::dimensions_stdout","value":"pub fn dimensions_stdout() -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's output (`stdout`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[{"value":"/ Query the current processes's output (`stdout`) *only*, in the attempt to dtermine","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4718,"byte_end":4804,"line_start":133,"line_end":133,"column_start":5,"column_end":91}},{"value":"/ terminal width. If that streams is actually a tty, this function returns its width","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4809,"byte_end":4895,"line_start":134,"line_end":134,"column_start":5,"column_end":91}},{"value":"/ and height as a number of characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4900,"byte_end":4941,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4946,"byte_end":4949,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If *all* of the streams are not ttys or return any errors this function will return `None`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":4954,"byte_end":5049,"line_start":137,"line_end":137,"column_start":5,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5656,"byte_end":5672,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"dimensions_stdin","qualname":"::platform::dimensions_stdin","value":"pub fn dimensions_stdin() -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's input (`stdin`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[{"value":"/ Query the current processes's input (`stdin`) *only*, in the attempt to dtermine","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5315,"byte_end":5399,"line_start":148,"line_end":148,"column_start":5,"column_end":89}},{"value":"/ terminal width. If that streams is actually a tty, this function returns its width","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5404,"byte_end":5490,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/ and height as a number of characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5495,"byte_end":5536,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5541,"byte_end":5544,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If *all* of the streams are not ttys or return any errors this function will return `None`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5549,"byte_end":5644,"line_start":152,"line_end":152,"column_start":5,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":6257,"byte_end":6274,"line_start":168,"line_end":168,"column_start":12,"column_end":29},"name":"dimensions_stderr","qualname":"::platform::dimensions_stderr","value":"pub fn dimensions_stderr() -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Query the current processes's error output (`stderr`) *only*, in the attempt to dtermine\n terminal width. If that streams is actually a tty, this function returns its width\n and height as a number of characters.","sig":null,"attributes":[{"value":"/ Query the current processes's error output (`stderr`) *only*, in the attempt to dtermine","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":5908,"byte_end":6000,"line_start":163,"line_end":163,"column_start":5,"column_end":97}},{"value":"/ terminal width. If that streams is actually a tty, this function returns its width","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":6005,"byte_end":6091,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/ and height as a number of characters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":6096,"byte_end":6137,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":6142,"byte_end":6145,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If *all* of the streams are not ttys or return any errors this function will return `None`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/term_size-0.3.1/src/lib.rs","byte_start":6150,"byte_end":6245,"line_start":167,"line_end":167,"column_start":5,"column_end":100}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}