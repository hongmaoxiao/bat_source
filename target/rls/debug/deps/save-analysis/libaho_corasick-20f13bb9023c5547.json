{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","aho_corasick","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=20f13bb9023c5547","-C","extra-filename=-20f13bb9023c5547","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","memchr=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libmemchr-be49b899f3ba80c8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libaho_corasick-20f13bb9023c5547.rmeta"},"prelude":{"crate_id":{"name":"aho_corasick","disambiguator":[1598786794577177181,1838912178302860244]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6444011135382677553,13623871977643040854]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[8000104344433599533,15219794654319678357]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":0,"byte_end":30756,"line_start":1,"line_end":925,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4378,"byte_end":4387,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"alias_span":null,"name":"Automaton","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4389,"byte_end":4394,"line_start":133,"line_end":133,"column_start":16,"column_end":21},"alias_span":null,"name":"Match","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4400,"byte_end":4407,"line_start":134,"line_end":134,"column_start":5,"column_end":12},"alias_span":null,"name":"Matches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4409,"byte_end":4427,"line_start":134,"line_end":134,"column_start":14,"column_end":32},"alias_span":null,"name":"MatchesOverlapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4429,"byte_end":4442,"line_start":134,"line_end":134,"column_start":34,"column_end":47},"alias_span":null,"name":"StreamMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4444,"byte_end":4468,"line_start":134,"line_end":134,"column_start":49,"column_end":73},"alias_span":null,"name":"StreamMatchesOverlapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4493,"byte_end":4508,"line_start":136,"line_end":136,"column_start":21,"column_end":36},"alias_span":null,"name":"FullAcAutomaton","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":0,"byte_end":30756,"line_start":1,"line_end":925,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":106},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":330},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":346},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":170},{"krate":0,"index":179},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":349},{"krate":0,"index":354},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":365},{"krate":0,"index":363},{"krate":0,"index":200},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":370},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","sig":null,"attributes":[{"value":"*\nAn implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).\n\nThe Aho-Corasick algorithm is principally useful when you need to search many\nlarge texts for a fixed (possibly large) set of keywords. In particular, the\nAho-Corasick algorithm preprocesses the set of keywords by constructing a\nfinite state machine. The search phase is then a quick linear scan through the\ntext. Each character in the search text causes a state transition in the\nautomaton. Matches are reported when the automaton enters a match state.\n\n# Examples\n\nThe main type exposed by this crate is `AcAutomaton`, which can be constructed\nfrom an iterator of pattern strings:\n\n```rust\nuse aho_corasick::{Automaton, AcAutomaton};\n\nlet aut = AcAutomaton::new(vec![\"apple\", \"maple\"]);\n\n// AcAutomaton also implements `FromIterator`:\nlet aut: AcAutomaton<&str> = [\"apple\", \"maple\"].iter().cloned().collect();\n```\n\nFinding matches can be done with `find`:\n\n```rust\nuse aho_corasick::{Automaton, AcAutomaton, Match};\n\nlet aut = AcAutomaton::new(vec![\"apple\", \"maple\"]);\nlet mut it = aut.find(\"I like maple apples.\");\nassert_eq!(it.next(), Some(Match {\n    pati: 1,\n    start: 7,\n    end: 12,\n}));\nassert_eq!(it.next(), Some(Match {\n    pati: 0,\n    start: 13,\n    end: 18,\n}));\nassert_eq!(it.next(), None);\n```\n\nUse `find_overlapping` if you want to report all matches, even if they\noverlap with each other.\n\n```rust\nuse aho_corasick::{Automaton, AcAutomaton, Match};\n\nlet aut = AcAutomaton::new(vec![\"abc\", \"a\"]);\nlet matches: Vec<_> = aut.find_overlapping(\"abc\").collect();\nassert_eq!(matches, vec![\n    Match { pati: 1, start: 0, end: 1}, Match { pati: 0, start: 0, end: 3 },\n]);\n\n// Regular `find` will report only one match:\nlet matches: Vec<_> = aut.find(\"abc\").collect();\nassert_eq!(matches, vec![Match { pati: 1, start: 0, end: 1}]);\n```\n\nFinally, there are also methods for finding matches on *streams*. Namely, the\nsearch text does not have to live in memory. It's useful to run this on files\nthat can't fit into memory:\n\n```no_run\nuse std::fs::File;\n\nuse aho_corasick::{Automaton, AcAutomaton};\n\nlet aut = AcAutomaton::new(vec![\"foo\", \"bar\", \"baz\"]);\nlet rdr = File::open(\"search.txt\").unwrap();\nfor m in aut.stream_find(rdr) {\n    let m = m.unwrap(); // could be an IO error\n    println!(\"Pattern '{}' matched at: ({}, {})\",\n             aut.pattern(m.pati), m.start, m.end);\n}\n```\n\nThere is also `stream_find_overlapping`, which is just like `find_overlapping`,\nbut it operates on streams.\n\nPlease see `dict-search.rs` in this crate's `examples` directory for a more\ncomplete example. It creates a large automaton from a dictionary and can do a\nstreaming match over arbitrarily large data.\n\n# Memory usage\n\nA key aspect of an Aho-Corasick implementation is how the state transitions\nare represented. The easiest way to make the automaton fast is to store a\nsparse 256-slot map in each state. It maps an input byte to a state index.\nThis makes the matching loop extremely fast, since it translates to a simple\npointer read.\n\nThe problem is that as the automaton accumulates more states, you end up paying\na `256 * 4` (`4` is for the `u32` state index) byte penalty for every state\nregardless of how many transitions it has.\n\nTo solve this, only states near the root of the automaton have this sparse\nmap representation. States near the leaves of the automaton use a dense mapping\nthat requires a linear scan.\n\n(The specific limit currently set is `3`, so that states with a depth less than\nor equal to `3` are less memory efficient. The result is that the memory usage\nof the automaton stops growing rapidly past ~60MB, even for automatons with\nthousands of patterns.)\n\nIf you'd like to opt for the less-memory-efficient-but-faster version, then\nyou can construct an `AcAutomaton` with a `Sparse` transition strategy:\n\n```rust\nuse aho_corasick::{Automaton, AcAutomaton, Match, Sparse};\n\nlet aut = AcAutomaton::<&str, Sparse>::with_transitions(vec![\"abc\", \"a\"]);\nlet matches: Vec<_> = aut.find(\"abc\").collect();\nassert_eq!(matches, vec![Match { pati: 1, start: 0, end: 1}]);\n```\n*/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":0,"byte_end":4141,"line_start":1,"line_end":119,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4143,"byte_end":4165,"line_start":121,"line_end":121,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31077,"byte_end":31086,"line_start":11,"line_end":11,"column_start":11,"column_end":20},"name":"Automaton","qualname":"::autiter::Automaton","value":"Automaton<P>","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":49}],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[{"value":"/ An abstraction over automatons and their corresponding iterators.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":30896,"byte_end":30965,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ The type parameter `P` is the type of the pattern that was used to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":30966,"byte_end":31036,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ construct this Automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31037,"byte_end":31066,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31173,"byte_end":31183,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"next_state","qualname":"::autiter::Automaton::next_state","value":"pub fn next_state(&Self, StateIdx, u8) -> StateIdx","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Return the next state given the current state and next character.\n","sig":null,"attributes":[{"value":"/ Return the next state given the current state and next character.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31096,"byte_end":31165,"line_start":12,"line_end":12,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31336,"byte_end":31345,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"has_match","qualname":"::autiter::Automaton::has_match","value":"pub fn has_match(&Self, StateIdx, usize) -> bool","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Return true if and only if the given state and current pattern index\n indicate a match.\n","sig":null,"attributes":[{"value":"/ Return true if and only if the given state and current pattern index","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31230,"byte_end":31302,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ indicate a match.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31307,"byte_end":31328,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31475,"byte_end":31484,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"get_match","qualname":"::autiter::Automaton::get_match","value":"pub fn get_match(&Self, StateIdx, usize, usize) -> Match","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Build a match given the current state, pattern index and input index.\n","sig":null,"attributes":[{"value":"/ Build a match given the current state, pattern index and input index.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31394,"byte_end":31467,"line_start":19,"line_end":19,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31624,"byte_end":31635,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"start_bytes","qualname":"::autiter::Automaton::start_bytes","value":"pub fn start_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Return the set of bytes that have transitions in the root state.\n","sig":null,"attributes":[{"value":"/ Return the set of bytes that have transitions in the root state.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31548,"byte_end":31616,"line_start":22,"line_end":22,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31805,"byte_end":31813,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"patterns","qualname":"::autiter::Automaton::patterns","value":"pub fn patterns(&Self) -> &[P]","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns all of the patterns matched by this automaton.","sig":null,"attributes":[{"value":"/ Returns all of the patterns matched by this automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31658,"byte_end":31716,"line_start":25,"line_end":25,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31721,"byte_end":31724,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The order of the patterns is the order in which they were added.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31729,"byte_end":31797,"line_start":27,"line_end":27,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32010,"byte_end":32017,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"pattern","qualname":"::autiter::Automaton::pattern","value":"pub fn pattern(&Self, usize) -> &P","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns the pattern indexed at `i`.","sig":null,"attributes":[{"value":"/ Returns the pattern indexed at `i`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31835,"byte_end":31874,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31879,"byte_end":31882,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The index corresponds to the position at which the pattern was added","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31887,"byte_end":31959,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ to the automaton, starting at `0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":31964,"byte_end":32002,"line_start":33,"line_end":33,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32120,"byte_end":32123,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"len","qualname":"::autiter::Automaton::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Return the number of patterns in the automaton.\n","sig":null,"attributes":[{"value":"/ Return the number of patterns in the automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32047,"byte_end":32098,"line_start":36,"line_end":36,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32103,"byte_end":32112,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32255,"byte_end":32263,"line_start":44,"line_end":44,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::autiter::Automaton::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns true if the automaton has no patterns.\n","sig":null,"attributes":[{"value":"/ Returns true if the automaton has no patterns.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32183,"byte_end":32233,"line_start":42,"line_end":42,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32238,"byte_end":32247,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32382,"byte_end":32386,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"find","qualname":"::autiter::Automaton::find","value":"pub fn find<'a, 's, Q: ?Sized + AsRef<[u8]>>(&'a Self, &'s Q) -> Matches where\nSelf: Sized","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns an iterator of non-overlapping matches in `s`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of non-overlapping matches in `s`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32316,"byte_end":32374,"line_start":48,"line_end":48,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32748,"byte_end":32764,"line_start":64,"line_end":64,"column_start":8,"column_end":24},"name":"find_overlapping","qualname":"::autiter::Automaton::find_overlapping","value":"pub fn find_overlapping<'a, 's, Q: ?Sized + AsRef<[u8]>>(&'a Self, &'s Q)\n-> MatchesOverlapping where Self: Sized","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns an iterator of overlapping matches in `s`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of overlapping matches in `s`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":32686,"byte_end":32740,"line_start":63,"line_end":63,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":33186,"byte_end":33197,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"stream_find","qualname":"::autiter::Automaton::stream_find","value":"pub fn stream_find<'a, R: io::Read>(&'a Self, R) -> StreamMatches where\nSelf: Sized","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns an iterator of non-overlapping matches in the given reader.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of non-overlapping matches in the given reader.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":33107,"byte_end":33178,"line_start":79,"line_end":79,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":33577,"byte_end":33600,"line_start":95,"line_end":95,"column_start":8,"column_end":31},"name":"stream_find_overlapping","qualname":"::autiter::Automaton::stream_find_overlapping","value":"pub fn stream_find_overlapping<'a, R: io::Read>(&'a Self, R)\n-> StreamMatchesOverlapping where Self: Sized","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Returns an iterator of overlapping matches in the given reader.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of overlapping matches in the given reader.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":33502,"byte_end":33569,"line_start":94,"line_end":94,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34691,"byte_end":34696,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"Match","qualname":"::autiter::Match","value":"Match { pati, start, end }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" Records a match in the search text.\n","sig":null,"attributes":[{"value":"/ Records a match in the search text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34589,"byte_end":34628,"line_start":138,"line_end":138,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34865,"byte_end":34869,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"pati","qualname":"::autiter::Match::pati","value":"usize","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" The pattern index.","sig":null,"attributes":[{"value":"/ The pattern index.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34703,"byte_end":34725,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34730,"byte_end":34733,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the ordering in which the matched pattern was","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34738,"byte_end":34807,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ added to the automaton, starting at `0`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34812,"byte_end":34856,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":238},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34952,"byte_end":34957,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"name":"start","qualname":"::autiter::Match::start","value":"usize","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" The starting byte offset of the match in the search text.\n","sig":null,"attributes":[{"value":"/ The starting byte offset of the match in the search text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34882,"byte_end":34943,"line_start":146,"line_end":146,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35185,"byte_end":35188,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"end","qualname":"::autiter::Match::end","value":"usize","parent":{"krate":0,"index":236},"children":[],"decl_id":null,"docs":" The ending byte offset of the match in the search text.","sig":null,"attributes":[{"value":"/ The ending byte offset of the match in the search text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":34970,"byte_end":35029,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35034,"byte_end":35037,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ (This can be re-captiulated with `pati` and adding the pattern's","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35042,"byte_end":35110,"line_start":150,"line_end":150,"column_start":5,"column_end":73}},{"value":"/ length to `start`, but it is convenient to have it here.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35115,"byte_end":35176,"line_start":151,"line_end":151,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35476,"byte_end":35483,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"Matches","qualname":"::autiter::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" An iterator of non-overlapping matches for in-memory text.","sig":null,"attributes":[{"value":"/ An iterator of non-overlapping matches for in-memory text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35200,"byte_end":35262,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35263,"byte_end":35266,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This iterator yields `Match` values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35267,"byte_end":35307,"line_start":157,"line_end":157,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35308,"byte_end":35311,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the automaton, `'s` is the lifetime of the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35312,"byte_end":35382,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ search text, and `P` is the type of the Automaton's pattern.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":35383,"byte_end":35447,"line_start":160,"line_end":160,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41763,"byte_end":41776,"line_start":365,"line_end":365,"column_start":12,"column_end":25},"name":"StreamMatches","qualname":"::autiter::StreamMatches","value":"StreamMatches {  }","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"decl_id":null,"docs":" An iterator of non-overlapping matches for streaming text.","sig":null,"attributes":[{"value":"/ An iterator of non-overlapping matches for streaming text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41470,"byte_end":41532,"line_start":358,"line_end":358,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41533,"byte_end":41536,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ This iterator yields `io::Result<Match>` values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41537,"byte_end":41589,"line_start":360,"line_end":360,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41590,"byte_end":41593,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the automaton, `R` is the type of the underlying","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41594,"byte_end":41670,"line_start":362,"line_end":362,"column_start":1,"column_end":77}},{"value":"/ `io::Read`er, and P is the type of the Automaton's pattern.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41671,"byte_end":41734,"line_start":363,"line_end":363,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43274,"byte_end":43292,"line_start":412,"line_end":412,"column_start":12,"column_end":30},"name":"MatchesOverlapping","qualname":"::autiter::MatchesOverlapping","value":"MatchesOverlapping {  }","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":" An iterator of overlapping matches for in-memory text.","sig":null,"attributes":[{"value":"/ An iterator of overlapping matches for in-memory text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43002,"byte_end":43060,"line_start":405,"line_end":405,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43061,"byte_end":43064,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ This iterator yields `Match` values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43065,"byte_end":43105,"line_start":407,"line_end":407,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43106,"byte_end":43109,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the automaton, `'s` is the lifetime of the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43110,"byte_end":43180,"line_start":409,"line_end":409,"column_start":1,"column_end":71}},{"value":"/ search text, and `P` is the type of the Automaton's pattern.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43181,"byte_end":43245,"line_start":410,"line_end":410,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45468,"byte_end":45492,"line_start":479,"line_end":479,"column_start":12,"column_end":36},"name":"StreamMatchesOverlapping","qualname":"::autiter::StreamMatchesOverlapping","value":"StreamMatchesOverlapping {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" An iterator of overlapping matches for streaming text.","sig":null,"attributes":[{"value":"/ An iterator of overlapping matches for streaming text.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45179,"byte_end":45237,"line_start":472,"line_end":472,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45238,"byte_end":45241,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This iterator yields `io::Result<Match>` values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45242,"byte_end":45294,"line_start":474,"line_end":474,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45295,"byte_end":45298,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ `'a` is the lifetime of the automaton, `R` is the type of the underlying","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45299,"byte_end":45375,"line_start":476,"line_end":476,"column_start":1,"column_end":77}},{"value":"/ `io::Read`er, and P is the type of the Automaton's pattern.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45376,"byte_end":45439,"line_start":477,"line_end":477,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47798,"byte_end":47813,"line_start":20,"line_end":20,"column_start":12,"column_end":27},"name":"FullAcAutomaton","qualname":"::full::FullAcAutomaton","value":"FullAcAutomaton {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" A complete Aho-Corasick automaton.","sig":null,"attributes":[{"value":"/ A complete Aho-Corasick automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47370,"byte_end":47408,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47409,"byte_end":47412,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This uses a single transition matrix that permits each input character","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47413,"byte_end":47487,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ to move to the next state with a single lookup in the matrix.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47488,"byte_end":47553,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47554,"byte_end":47557,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This is as fast as it gets, but it is guaranteed to use a lot of memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47558,"byte_end":47634,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ Namely, it will use at least `4 * 256 * #states`, where the number of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47635,"byte_end":47708,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ states is capped at length of all patterns concatenated.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47709,"byte_end":47769,"line_start":18,"line_end":18,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":48132,"byte_end":48135,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FullAcAutomaton<P>>::new","value":"pub fn new<T: Transitions>(AcAutomaton<P, T>) -> FullAcAutomaton<P>","parent":null,"children":[],"decl_id":null,"docs":" Build a new expanded Aho-Corasick automaton from an existing\n Aho-Corasick automaton.\n","sig":null,"attributes":[{"value":"/ Build a new expanded Aho-Corasick automaton from an existing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":48024,"byte_end":48088,"line_start":28,"line_end":28,"column_start":5,"column_end":69}},{"value":"/ Aho-Corasick automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":48093,"byte_end":48120,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":48567,"byte_end":48579,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"memory_usage","qualname":"<FullAcAutomaton<P>>::memory_usage","value":"pub fn memory_usage(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":48941,"byte_end":48951,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"heap_bytes","qualname":"<FullAcAutomaton<P>>::heap_bytes","value":"pub fn heap_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":49497,"byte_end":49507,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"num_states","qualname":"<FullAcAutomaton<P>>::num_states","value":"pub fn num_states(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":49476,"byte_end":49485,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":150},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4934,"byte_end":4942,"line_start":150,"line_end":150,"column_start":10,"column_end":18},"name":"StateIdx","qualname":"::StateIdx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The integer type used for the state index.","sig":null,"attributes":[{"value":"/ The integer type used for the state index.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4744,"byte_end":4790,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4791,"byte_end":4794,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Limiting this to 32 bit integers can have a big impact on memory usage","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4795,"byte_end":4869,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ when using the `Sparse` transition representation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":4870,"byte_end":4924,"line_start":149,"line_end":149,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6564,"byte_end":6575,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"AcAutomaton","qualname":"::AcAutomaton","value":"AcAutomaton {  }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" An Aho-Corasick finite automaton.","sig":null,"attributes":[{"value":"/ An Aho-Corasick finite automaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6391,"byte_end":6428,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6429,"byte_end":6432,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ The type parameter `P` is the type of the pattern that was used to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6433,"byte_end":6503,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/ construct this AcAutomaton.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6504,"byte_end":6535,"line_start":184,"line_end":184,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6981,"byte_end":6984,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<AcAutomaton<P>>::new","value":"pub fn new<I>(I) -> AcAutomaton<P, Dense> where I: IntoIterator<Item = P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new automaton from an iterator of patterns.","sig":null,"attributes":[{"value":"/ Create a new automaton from an iterator of patterns.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6814,"byte_end":6870,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6875,"byte_end":6878,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ The patterns must be convertible to bytes (`&[u8]`) via the `AsRef`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6883,"byte_end":6954,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6959,"byte_end":6969,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7432,"byte_end":7448,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"with_transitions","qualname":"<AcAutomaton<P, T>>::with_transitions","value":"pub fn with_transitions<I>(I) -> AcAutomaton<P, T> where I: IntoIterator<Item\n= P>","parent":null,"children":[],"decl_id":null,"docs":" Create a new automaton from an iterator of patterns.","sig":null,"attributes":[{"value":"/ Create a new automaton from an iterator of patterns.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7180,"byte_end":7236,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7241,"byte_end":7244,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This constructor allows one to choose the transition representation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7249,"byte_end":7321,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7326,"byte_end":7329,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The patterns must be convertible to bytes (`&[u8]`) via the `AsRef`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7334,"byte_end":7405,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7410,"byte_end":7420,"line_start":217,"line_end":217,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":8017,"byte_end":8026,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"into_full","qualname":"<AcAutomaton<P, T>>::into_full","value":"pub fn into_full(Self) -> FullAcAutomaton<P>","parent":null,"children":[],"decl_id":null,"docs":" Build out the entire automaton into a single matrix.","sig":null,"attributes":[{"value":"/ Build out the entire automaton into a single matrix.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7810,"byte_end":7866,"line_start":227,"line_end":227,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7871,"byte_end":7874,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This will make searching as fast as possible at the expense of using","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7879,"byte_end":7951,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ at least `4 * 256 * #states` bytes of memory.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7956,"byte_end":8005,"line_start":230,"line_end":230,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":8129,"byte_end":8139,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"num_states","qualname":"<AcAutomaton<P, T>>::num_states","value":"pub fn num_states(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":8221,"byte_end":8231,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"heap_bytes","qualname":"<AcAutomaton<P, T>>::heap_bytes","value":"pub fn heap_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13735,"byte_end":13746,"line_start":410,"line_end":410,"column_start":11,"column_end":22},"name":"Transitions","qualname":"::Transitions","value":"Transitions","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[{"value":"/ An abstraction over state transition strategies.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13444,"byte_end":13496,"line_start":403,"line_end":403,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13497,"byte_end":13500,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ This is an attempt to let the caller choose the space/time trade offs","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13501,"byte_end":13574,"line_start":405,"line_end":405,"column_start":1,"column_end":74}},{"value":"/ used for state transitions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13575,"byte_end":13606,"line_start":406,"line_end":406,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13607,"byte_end":13610,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ (It's possible that this interface is merely good enough for just the two","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13611,"byte_end":13688,"line_start":408,"line_end":408,"column_start":1,"column_end":78}},{"value":"/ implementations in this crate.)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13689,"byte_end":13724,"line_start":409,"line_end":409,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13803,"byte_end":13806,"line_start":412,"line_end":412,"column_start":8,"column_end":11},"name":"new","qualname":"::Transitions::new","value":"pub fn new(u32) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Return a new state at the given depth.\n","sig":null,"attributes":[{"value":"/ Return a new state at the given depth.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13753,"byte_end":13795,"line_start":411,"line_end":411,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13897,"byte_end":13901,"line_start":414,"line_end":414,"column_start":8,"column_end":12},"name":"goto","qualname":"::Transitions::goto","value":"pub fn goto(&Self, u8) -> StateIdx","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Return the next state index given the next character.\n","sig":null,"attributes":[{"value":"/ Return the next state index given the next character.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13832,"byte_end":13889,"line_start":413,"line_end":413,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13998,"byte_end":14006,"line_start":416,"line_end":416,"column_start":8,"column_end":16},"name":"set_goto","qualname":"::Transitions::set_goto","value":"pub fn set_goto(&mut Self, u8, StateIdx)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Set the next state index for the character given.\n","sig":null,"attributes":[{"value":"/ Set the next state index for the character given.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":13937,"byte_end":13990,"line_start":415,"line_end":415,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14125,"byte_end":14135,"line_start":418,"line_end":418,"column_start":8,"column_end":18},"name":"heap_bytes","qualname":"::Transitions::heap_bytes","value":"pub fn heap_bytes(&Self) -> usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" The memory use in bytes (on the heap) of this set of transitions.\n","sig":null,"attributes":[{"value":"/ The memory use in bytes (on the heap) of this set of transitions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14048,"byte_end":14117,"line_start":417,"line_end":417,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14328,"byte_end":14333,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"Dense","qualname":"::Dense","value":"","parent":null,"children":[],"decl_id":null,"docs":" State transitions that can be stored either sparsely or densely.","sig":null,"attributes":[{"value":"/ State transitions that can be stored either sparsely or densely.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14156,"byte_end":14224,"line_start":421,"line_end":421,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14225,"byte_end":14228,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ This uses less space but at the expense of slower matching.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14229,"byte_end":14292,"line_start":423,"line_end":423,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15687,"byte_end":15693,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"Sparse","qualname":"::Sparse","value":"","parent":null,"children":[],"decl_id":null,"docs":" State transitions that are always sparse.","sig":null,"attributes":[{"value":"/ State transitions that are always sparse.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15497,"byte_end":15542,"line_start":471,"line_end":471,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15543,"byte_end":15546,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ This can use enormous amounts of memory when there are many patterns,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15547,"byte_end":15620,"line_start":473,"line_end":473,"column_start":1,"column_end":74}},{"value":"/ but matching is very fast.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15621,"byte_end":15651,"line_start":474,"line_end":474,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":17851,"byte_end":17854,"line_start":550,"line_end":550,"column_start":12,"column_end":15},"name":"dot","qualname":"<AcAutomaton<String, T>>::dot","value":"pub fn dot(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":39980,"byte_end":39987,"line_start":318,"line_end":318,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41989,"byte_end":42002,"line_start":374,"line_end":374,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43516,"byte_end":43534,"line_start":422,"line_end":422,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45731,"byte_end":45755,"line_start":489,"line_end":489,"column_start":22,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47999,"byte_end":48014,"line_start":27,"line_end":27,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":49596,"byte_end":49611,"line_start":79,"line_end":79,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":50570,"byte_end":50585,"line_start":119,"line_end":119,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":51025,"byte_end":51040,"line_start":132,"line_end":132,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6793,"byte_end":6804,"line_start":200,"line_end":200,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7156,"byte_end":7167,"line_start":211,"line_end":211,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":8601,"byte_end":8612,"line_start":252,"line_end":252,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":9944,"byte_end":9955,"line_start":304,"line_end":304,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":12964,"byte_end":12969,"line_start":379,"line_end":379,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14498,"byte_end":14503,"line_start":433,"line_end":433,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15732,"byte_end":15738,"line_start":478,"line_end":478,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16097,"byte_end":16108,"line_start":497,"line_end":497,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16490,"byte_end":16501,"line_start":508,"line_end":508,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16972,"byte_end":16977,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":17653,"byte_end":17658,"line_start":542,"line_end":542,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":17796,"byte_end":17807,"line_start":548,"line_end":548,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":39980,"byte_end":39987,"line_start":318,"line_end":318,"column_start":56,"column_end":63},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":41989,"byte_end":42002,"line_start":374,"line_end":374,"column_start":22,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":43516,"byte_end":43534,"line_start":422,"line_end":422,"column_start":22,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/autiter.rs","byte_start":45731,"byte_end":45755,"line_start":489,"line_end":489,"column_start":22,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":304},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":47999,"byte_end":48014,"line_start":27,"line_end":27,"column_start":22,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":49596,"byte_end":49611,"line_start":79,"line_end":79,"column_start":39,"column_end":54},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":50570,"byte_end":50585,"line_start":119,"line_end":119,"column_start":22,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/full.rs","byte_start":51025,"byte_end":51040,"line_start":132,"line_end":132,"column_start":50,"column_end":65},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":6793,"byte_end":6804,"line_start":200,"line_end":200,"column_start":22,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":7156,"byte_end":7167,"line_start":211,"line_end":211,"column_start":38,"column_end":49},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":8601,"byte_end":8612,"line_start":252,"line_end":252,"column_start":55,"column_end":66},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":9944,"byte_end":9955,"line_start":304,"line_end":304,"column_start":38,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":12964,"byte_end":12969,"line_start":379,"line_end":379,"column_start":22,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":14498,"byte_end":14503,"line_start":433,"line_end":433,"column_start":22,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":349},"to":{"krate":0,"index":195}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":15732,"byte_end":15738,"line_start":478,"line_end":478,"column_start":22,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":367},"to":{"krate":0,"index":195}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16097,"byte_end":16108,"line_start":497,"line_end":497,"column_start":42,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":5183}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16490,"byte_end":16501,"line_start":508,"line_end":508,"column_start":24,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":16972,"byte_end":16977,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":17653,"byte_end":17658,"line_start":542,"line_end":542,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","byte_start":17796,"byte_end":17807,"line_start":548,"line_end":548,"column_start":22,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}}]}