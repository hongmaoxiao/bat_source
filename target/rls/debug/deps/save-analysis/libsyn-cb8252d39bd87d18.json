{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","syn","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"clone-impls\"","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"parsing\"","--cfg","feature=\"printing\"","--cfg","feature=\"proc-macro\"","--cfg","feature=\"quote\"","--cfg","feature=\"visit\"","-C","metadata=cb8252d39bd87d18","-C","extra-filename=-cb8252d39bd87d18","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","proc_macro2=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libproc_macro2-879088eb77fe3ae1.rmeta","--extern","quote=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libquote-df1dceaeafec702e.rmeta","--extern","unicode_xid=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libunicode_xid-0b394020c9006002.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libsyn-cb8252d39bd87d18.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[13298266187466570539,6996940594978761357]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":16,"id":{"name":"proc_macro2","disambiguator":[9111951295025778107,5248206520849953426]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":17,"id":{"name":"proc_macro","disambiguator":[3173480412573258375,5543799431244878056]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":18,"id":{"name":"unicode_xid","disambiguator":[17911482992332937885,14093164206535051177]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","num":19,"id":{"name":"quote","disambiguator":[10400330033380315087,11391671680320067742]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":337,"byte_end":25624,"line_start":9,"line_end":724,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10600,"byte_end":10609,"line_start":286,"line_end":286,"column_start":16,"column_end":25},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3466},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10611,"byte_end":10620,"line_start":286,"line_end":286,"column_start":27,"column_end":36},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3490},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10622,"byte_end":10626,"line_start":286,"line_end":286,"column_start":38,"column_end":42},"alias_span":null,"name":"Meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3502},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10628,"byte_end":10636,"line_start":286,"line_end":286,"column_start":44,"column_end":52},"alias_span":null,"name":"MetaList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3508},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10638,"byte_end":10651,"line_start":286,"line_end":286,"column_start":54,"column_end":67},"alias_span":null,"name":"MetaNameValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3520},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10653,"byte_end":10663,"line_start":286,"line_end":286,"column_start":69,"column_end":79},"alias_span":null,"name":"NestedMeta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3571},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10792,"byte_end":10797,"line_start":291,"line_end":291,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10799,"byte_end":10805,"line_start":291,"line_end":291,"column_start":23,"column_end":29},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3559},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10807,"byte_end":10818,"line_start":291,"line_end":291,"column_start":31,"column_end":42},"alias_span":null,"name":"FieldsNamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10820,"byte_end":10833,"line_start":291,"line_end":291,"column_start":44,"column_end":57},"alias_span":null,"name":"FieldsUnnamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3537},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10835,"byte_end":10842,"line_start":291,"line_end":291,"column_start":59,"column_end":66},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3603},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10844,"byte_end":10852,"line_start":291,"line_end":291,"column_start":68,"column_end":76},"alias_span":null,"name":"VisCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3599},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10854,"byte_end":10863,"line_start":291,"line_end":291,"column_start":78,"column_end":87},"alias_span":null,"name":"VisPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3607},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10880,"byte_end":10893,"line_start":292,"line_end":292,"column_start":16,"column_end":29},"alias_span":null,"name":"VisRestricted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10895,"byte_end":10905,"line_start":292,"line_end":292,"column_start":31,"column_end":41},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3714},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11034,"byte_end":11038,"line_start":297,"line_end":297,"column_start":16,"column_end":20},"alias_span":null,"name":"Expr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3962},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11040,"byte_end":11053,"line_start":297,"line_end":297,"column_start":22,"column_end":35},"alias_span":null,"name":"ExprReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3845},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11055,"byte_end":11064,"line_start":297,"line_end":297,"column_start":37,"column_end":46},"alias_span":null,"name":"ExprArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3933},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11066,"byte_end":11076,"line_start":297,"line_end":297,"column_start":48,"column_end":58},"alias_span":null,"name":"ExprAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3937},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11078,"byte_end":11090,"line_start":297,"line_end":297,"column_start":60,"column_end":72},"alias_span":null,"name":"ExprAssignOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3864},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11092,"byte_end":11102,"line_start":297,"line_end":297,"column_start":74,"column_end":84},"alias_span":null,"name":"ExprBinary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3929},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11104,"byte_end":11113,"line_start":297,"line_end":297,"column_start":86,"column_end":95},"alias_span":null,"name":"ExprBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3837},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11130,"byte_end":11137,"line_start":298,"line_end":298,"column_start":16,"column_end":23},"alias_span":null,"name":"ExprBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3966},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11139,"byte_end":11148,"line_start":298,"line_end":298,"column_start":25,"column_end":34},"alias_span":null,"name":"ExprBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3849},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11150,"byte_end":11158,"line_start":298,"line_end":298,"column_start":36,"column_end":44},"alias_span":null,"name":"ExprCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3882},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11160,"byte_end":11168,"line_start":298,"line_end":298,"column_start":46,"column_end":54},"alias_span":null,"name":"ExprCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4004},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11170,"byte_end":11179,"line_start":298,"line_end":298,"column_start":56,"column_end":65},"alias_span":null,"name":"ExprCatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3921},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11181,"byte_end":11192,"line_start":298,"line_end":298,"column_start":67,"column_end":78},"alias_span":null,"name":"ExprClosure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3970},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11194,"byte_end":11206,"line_start":298,"line_end":298,"column_start":80,"column_end":92},"alias_span":null,"name":"ExprContinue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11223,"byte_end":11232,"line_start":299,"line_end":299,"column_start":16,"column_end":25},"alias_span":null,"name":"ExprField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3909},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11234,"byte_end":11245,"line_start":299,"line_end":299,"column_start":27,"column_end":38},"alias_span":null,"name":"ExprForLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3996},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11247,"byte_end":11256,"line_start":299,"line_end":299,"column_start":40,"column_end":49},"alias_span":null,"name":"ExprGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3893},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11258,"byte_end":11264,"line_start":299,"line_end":299,"column_start":51,"column_end":57},"alias_span":null,"name":"ExprIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3897},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11266,"byte_end":11275,"line_start":299,"line_end":299,"column_start":59,"column_end":68},"alias_span":null,"name":"ExprIfLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3841},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11277,"byte_end":11288,"line_start":299,"line_end":299,"column_start":70,"column_end":81},"alias_span":null,"name":"ExprInPlace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3945},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11290,"byte_end":11299,"line_start":299,"line_end":299,"column_start":83,"column_end":92},"alias_span":null,"name":"ExprIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3877},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11316,"byte_end":11323,"line_start":300,"line_end":300,"column_start":16,"column_end":23},"alias_span":null,"name":"ExprLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3913},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11325,"byte_end":11333,"line_start":300,"line_end":300,"column_start":25,"column_end":33},"alias_span":null,"name":"ExprLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11335,"byte_end":11344,"line_start":300,"line_end":300,"column_start":35,"column_end":44},"alias_span":null,"name":"ExprMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3917},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11346,"byte_end":11355,"line_start":300,"line_end":300,"column_start":46,"column_end":55},"alias_span":null,"name":"ExprMatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11357,"byte_end":11371,"line_start":300,"line_end":300,"column_start":57,"column_end":71},"alias_span":null,"name":"ExprMethodCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3990},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11373,"byte_end":11382,"line_start":300,"line_end":300,"column_start":73,"column_end":82},"alias_span":null,"name":"ExprParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3956},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11384,"byte_end":11392,"line_start":300,"line_end":300,"column_start":84,"column_end":92},"alias_span":null,"name":"ExprPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3952},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11409,"byte_end":11418,"line_start":301,"line_end":301,"column_start":16,"column_end":25},"alias_span":null,"name":"ExprRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3986},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11420,"byte_end":11430,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"alias_span":null,"name":"ExprRepeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3974},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11432,"byte_end":11442,"line_start":301,"line_end":301,"column_start":39,"column_end":49},"alias_span":null,"name":"ExprReturn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3982},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11444,"byte_end":11454,"line_start":301,"line_end":301,"column_start":51,"column_end":61},"alias_span":null,"name":"ExprStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4000},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11456,"byte_end":11463,"line_start":301,"line_end":301,"column_start":63,"column_end":70},"alias_span":null,"name":"ExprTry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3860},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11465,"byte_end":11474,"line_start":301,"line_end":301,"column_start":72,"column_end":81},"alias_span":null,"name":"ExprTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3889},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11476,"byte_end":11484,"line_start":301,"line_end":301,"column_start":83,"column_end":91},"alias_span":null,"name":"ExprType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3871},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11501,"byte_end":11510,"line_start":302,"line_end":302,"column_start":16,"column_end":25},"alias_span":null,"name":"ExprUnary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11512,"byte_end":11522,"line_start":302,"line_end":302,"column_start":27,"column_end":37},"alias_span":null,"name":"ExprUnsafe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11524,"byte_end":11536,"line_start":302,"line_end":302,"column_start":39,"column_end":51},"alias_span":null,"name":"ExprVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3901},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11538,"byte_end":11547,"line_start":302,"line_end":302,"column_start":53,"column_end":62},"alias_span":null,"name":"ExprWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3905},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11549,"byte_end":11561,"line_start":302,"line_end":302,"column_start":64,"column_end":76},"alias_span":null,"name":"ExprWhileLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4008},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11563,"byte_end":11572,"line_start":302,"line_end":302,"column_start":78,"column_end":87},"alias_span":null,"name":"ExprYield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4027},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11574,"byte_end":11579,"line_start":302,"line_end":302,"column_start":89,"column_end":94},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4018},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":11596,"byte_end":11602,"line_start":303,"line_end":303,"column_start":16,"column_end":22},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4130},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12070,"byte_end":12084,"line_start":314,"line_end":314,"column_start":20,"column_end":34},"alias_span":null,"name":"BoundLifetimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4097},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12086,"byte_end":12096,"line_start":314,"line_end":314,"column_start":36,"column_end":46},"alias_span":null,"name":"ConstParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4069},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12098,"byte_end":12110,"line_start":314,"line_end":314,"column_start":48,"column_end":60},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4054},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12112,"byte_end":12120,"line_start":314,"line_end":314,"column_start":62,"column_end":70},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4090},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12122,"byte_end":12133,"line_start":314,"line_end":314,"column_start":72,"column_end":83},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4206},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12135,"byte_end":12146,"line_start":314,"line_end":314,"column_start":85,"column_end":96},"alias_span":null,"name":"PredicateEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4200},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12167,"byte_end":12184,"line_start":315,"line_end":315,"column_start":20,"column_end":37},"alias_span":null,"name":"PredicateLifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4193},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12186,"byte_end":12199,"line_start":315,"line_end":315,"column_start":39,"column_end":52},"alias_span":null,"name":"PredicateType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4154},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12201,"byte_end":12211,"line_start":315,"line_end":315,"column_start":54,"column_end":64},"alias_span":null,"name":"TraitBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4161},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12213,"byte_end":12231,"line_start":315,"line_end":315,"column_start":66,"column_end":84},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4081},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12233,"byte_end":12242,"line_start":315,"line_end":315,"column_start":86,"column_end":95},"alias_span":null,"name":"TypeParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4143},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12263,"byte_end":12277,"line_start":316,"line_end":316,"column_start":20,"column_end":34},"alias_span":null,"name":"TypeParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4170},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12279,"byte_end":12290,"line_start":316,"line_end":316,"column_start":36,"column_end":47},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4181},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12292,"byte_end":12306,"line_start":316,"line_end":316,"column_start":49,"column_end":63},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4109},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12405,"byte_end":12417,"line_start":318,"line_end":318,"column_start":20,"column_end":32},"alias_span":null,"name":"ImplGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4123},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12419,"byte_end":12428,"line_start":318,"line_end":318,"column_start":34,"column_end":43},"alias_span":null,"name":"Turbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4116},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12430,"byte_end":12442,"line_start":318,"line_end":318,"column_start":45,"column_end":57},"alias_span":null,"name":"TypeGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4234},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":12472,"byte_end":12477,"line_start":321,"line_end":321,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4241},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13448,"byte_end":13456,"line_start":343,"line_end":343,"column_start":19,"column_end":27},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4361},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13582,"byte_end":13593,"line_start":348,"line_end":348,"column_start":15,"column_end":26},"alias_span":null,"name":"FloatSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13595,"byte_end":13604,"line_start":348,"line_end":348,"column_start":28,"column_end":37},"alias_span":null,"name":"IntSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4262},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13606,"byte_end":13609,"line_start":348,"line_end":348,"column_start":39,"column_end":42},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4313},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13611,"byte_end":13618,"line_start":348,"line_end":348,"column_start":44,"column_end":51},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4297},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13620,"byte_end":13627,"line_start":348,"line_end":348,"column_start":53,"column_end":60},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4293},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13629,"byte_end":13639,"line_start":348,"line_end":348,"column_start":62,"column_end":72},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4301},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13641,"byte_end":13648,"line_start":348,"line_end":348,"column_start":74,"column_end":81},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4309},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13650,"byte_end":13658,"line_start":348,"line_end":348,"column_start":83,"column_end":91},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4305},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13674,"byte_end":13680,"line_start":349,"line_end":349,"column_start":15,"column_end":21},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4289},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13682,"byte_end":13688,"line_start":349,"line_end":349,"column_start":23,"column_end":29},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13690,"byte_end":13701,"line_start":349,"line_end":349,"column_start":31,"column_end":42},"alias_span":null,"name":"LitVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4324},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13703,"byte_end":13711,"line_start":349,"line_end":349,"column_start":44,"column_end":52},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4391},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13838,"byte_end":13843,"line_start":354,"line_end":354,"column_start":15,"column_end":20},"alias_span":null,"name":"Macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4398},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13845,"byte_end":13859,"line_start":354,"line_end":354,"column_start":22,"column_end":36},"alias_span":null,"name":"MacroDelimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4425},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13969,"byte_end":13973,"line_start":359,"line_end":359,"column_start":18,"column_end":22},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4443},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13975,"byte_end":13983,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"alias_span":null,"name":"DataEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4437},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13985,"byte_end":13995,"line_start":359,"line_end":359,"column_start":34,"column_end":44},"alias_span":null,"name":"DataStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":13997,"byte_end":14006,"line_start":359,"line_end":359,"column_start":46,"column_end":55},"alias_span":null,"name":"DataUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4411},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14008,"byte_end":14019,"line_start":359,"line_end":359,"column_start":57,"column_end":68},"alias_span":null,"name":"DeriveInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4460},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14144,"byte_end":14149,"line_start":364,"line_end":364,"column_start":14,"column_end":19},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4548},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14151,"byte_end":14155,"line_start":364,"line_end":364,"column_start":21,"column_end":25},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4726},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14280,"byte_end":14283,"line_start":369,"line_end":369,"column_start":14,"column_end":17},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4731},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14285,"byte_end":14294,"line_start":369,"line_end":369,"column_start":19,"column_end":28},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4736},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14296,"byte_end":14309,"line_start":369,"line_end":369,"column_start":30,"column_end":43},"alias_span":null,"name":"BareFnArgName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4745},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14311,"byte_end":14321,"line_start":369,"line_end":369,"column_start":45,"column_end":55},"alias_span":null,"name":"ReturnType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4593},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14323,"byte_end":14327,"line_start":369,"line_end":369,"column_start":57,"column_end":61},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4646},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14329,"byte_end":14338,"line_start":369,"line_end":369,"column_start":63,"column_end":72},"alias_span":null,"name":"TypeArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4667},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14340,"byte_end":14350,"line_start":369,"line_end":369,"column_start":74,"column_end":84},"alias_span":null,"name":"TypeBareFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4707},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14352,"byte_end":14361,"line_start":369,"line_end":369,"column_start":86,"column_end":95},"alias_span":null,"name":"TypeGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4697},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14376,"byte_end":14389,"line_start":370,"line_end":370,"column_start":14,"column_end":27},"alias_span":null,"name":"TypeImplTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4712},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14391,"byte_end":14400,"line_start":370,"line_end":370,"column_start":29,"column_end":38},"alias_span":null,"name":"TypeInfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4716},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14402,"byte_end":14411,"line_start":370,"line_end":370,"column_start":40,"column_end":49},"alias_span":null,"name":"TypeMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4678},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14413,"byte_end":14422,"line_start":370,"line_end":370,"column_start":51,"column_end":60},"alias_span":null,"name":"TypeNever","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4702},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14424,"byte_end":14433,"line_start":370,"line_end":370,"column_start":62,"column_end":71},"alias_span":null,"name":"TypeParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4687},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14435,"byte_end":14443,"line_start":370,"line_end":370,"column_start":73,"column_end":81},"alias_span":null,"name":"TypePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4653},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14445,"byte_end":14452,"line_start":370,"line_end":370,"column_start":83,"column_end":90},"alias_span":null,"name":"TypePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4660},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14467,"byte_end":14480,"line_start":371,"line_end":371,"column_start":14,"column_end":27},"alias_span":null,"name":"TypeReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4641},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14482,"byte_end":14491,"line_start":371,"line_end":371,"column_start":29,"column_end":38},"alias_span":null,"name":"TypeSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4692},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14493,"byte_end":14508,"line_start":371,"line_end":371,"column_start":40,"column_end":55},"alias_span":null,"name":"TypeTraitObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4682},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14510,"byte_end":14519,"line_start":371,"line_end":371,"column_start":57,"column_end":66},"alias_span":null,"name":"TypeTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4720},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14521,"byte_end":14533,"line_start":371,"line_end":371,"column_start":68,"column_end":80},"alias_span":null,"name":"TypeVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4838},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14662,"byte_end":14692,"line_start":376,"line_end":376,"column_start":16,"column_end":46},"alias_span":null,"name":"AngleBracketedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4845},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14694,"byte_end":14701,"line_start":376,"line_end":376,"column_start":48,"column_end":55},"alias_span":null,"name":"Binding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4823},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14703,"byte_end":14718,"line_start":376,"line_end":376,"column_start":57,"column_end":72},"alias_span":null,"name":"GenericArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4851},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14735,"byte_end":14764,"line_start":377,"line_end":377,"column_start":16,"column_end":45},"alias_span":null,"name":"ParenthesizedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4794},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14766,"byte_end":14770,"line_start":377,"line_end":377,"column_start":47,"column_end":51},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4812},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14772,"byte_end":14785,"line_start":377,"line_end":377,"column_start":53,"column_end":66},"alias_span":null,"name":"PathArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4807},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14787,"byte_end":14798,"line_start":377,"line_end":377,"column_start":68,"column_end":79},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4857},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14800,"byte_end":14805,"line_start":377,"line_end":377,"column_start":81,"column_end":86},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4799},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14899,"byte_end":14909,"line_start":379,"line_end":379,"column_start":15,"column_end":25},"alias_span":null,"name":"PathTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4800},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14899,"byte_end":14909,"line_start":379,"line_end":379,"column_start":15,"column_end":25},"alias_span":null,"name":"PathTokens","value":"","parent":{"krate":0,"index":971}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400249,"byte_end":400256,"line_start":156,"line_end":156,"column_start":17,"column_end":24},"alias_span":null,"name":"PResult","value":"","parent":{"krate":0,"index":1031}},{"kind":"Use","ref_id":{"krate":0,"index":4910},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400258,"byte_end":400268,"line_start":156,"line_end":156,"column_start":26,"column_end":36},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":1031}},{"kind":"Use","ref_id":{"krate":2,"index":1952},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432516,"byte_end":432520,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"alias_span":null,"name":"From","value":"","parent":{"krate":0,"index":1304}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":19546,"byte_end":19547,"line_start":513,"line_end":513,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"visit","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1755},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":19857,"byte_end":19868,"line_start":528,"line_end":528,"column_start":16,"column_end":27},"alias_span":null,"name":"parse_error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":337,"byte_end":25624,"line_start":9,"line_end":724,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":41},{"krate":0,"index":49},{"krate":0,"index":103},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":5423},{"krate":0,"index":972},{"krate":0,"index":1031},{"krate":0,"index":1056},{"krate":0,"index":1289},{"krate":0,"index":1304},{"krate":0,"index":1330},{"krate":0,"index":1342},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1778}],"decl_id":null,"docs":" Syn is a parsing library for parsing a stream of Rust tokens into a syntax\n tree of Rust source code.","sig":null,"attributes":[{"value":"/ Syn is a parsing library for parsing a stream of Rust tokens into a syntax","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":337,"byte_end":415,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ tree of Rust source code.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":416,"byte_end":445,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":446,"byte_end":449,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Currently this library is geared toward the [custom derive] use case but","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":450,"byte_end":526,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ contains some APIs that may be useful for Rust procedural macros more","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":527,"byte_end":600,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ generally.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":601,"byte_end":615,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":616,"byte_end":619,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [custom derive]: https://github.com/rust-lang/rfcs/blob/master/text/1681-macros-1.1.md","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":620,"byte_end":710,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":711,"byte_end":714,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - **Data structures** — Syn provides a complete syntax tree that can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":715,"byte_end":789,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/   represent any valid Rust source code. The syntax tree is rooted at","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":790,"byte_end":862,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/   [`syn::File`] which represents a full source file, but there are other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":863,"byte_end":939,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   entry points that may be useful to procedural macros including","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":940,"byte_end":1008,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/   [`syn::Item`], [`syn::Expr`] and [`syn::Type`].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1009,"byte_end":1062,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - **Custom derives** — Of particular interest to custom derives is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1067,"byte_end":1139,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/   [`syn::DeriveInput`] which is any of the three legal input items to a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1140,"byte_end":1215,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   derive macro. An example below shows using this type in a library that can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1216,"byte_end":1296,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/   derive implementations of a trait of your own.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1297,"byte_end":1349,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1350,"byte_end":1353,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - **Parser combinators** — Parsing in Syn is built on a suite of public","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1354,"byte_end":1431,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/   parser combinator macros that you can use for parsing any token-based","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1432,"byte_end":1507,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/   syntax you dream up within a `functionlike!(...)` procedural macro. Every","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1508,"byte_end":1587,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/   syntax tree node defined by Syn is individually parsable and may be used","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1588,"byte_end":1666,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   as a building block for custom syntaxes, or you may do it all yourself","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1667,"byte_end":1743,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/   working from the most primitive tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1744,"byte_end":1789,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1790,"byte_end":1793,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ - **Location information** — Every token parsed by Syn is associated with a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1794,"byte_end":1875,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/   `Span` that tracks line and column information back to the source of that","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1876,"byte_end":1955,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/   token. These spans allow a procedural macro to display detailed error","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":1956,"byte_end":2031,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/   messages pointing to all the right places in the user's code. There is an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2032,"byte_end":2111,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/   example of this below.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2112,"byte_end":2140,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2141,"byte_end":2144,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - **Feature flags** — Functionality is aggressively feature gated so your","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2145,"byte_end":2224,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   procedural macros enable only what they need, and do not pay in compile","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2225,"byte_end":2302,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/   time for all the rest.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2303,"byte_end":2331,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2332,"byte_end":2335,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`syn::File`]: struct.File.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2336,"byte_end":2371,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ [`syn::Item`]: enum.Item.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2372,"byte_end":2405,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ [`syn::Expr`]: enum.Expr.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2406,"byte_end":2439,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ [`syn::Type`]: enum.Type.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2440,"byte_end":2473,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ [`syn::DeriveInput`]: struct.DeriveInput.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2474,"byte_end":2523,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2524,"byte_end":2527,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ *Version requirement: Syn supports any compiler version back to Rust's very","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2528,"byte_end":2607,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ first support for procedural macros in Rust 1.15.0. Some features especially","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2608,"byte_end":2688,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ around error reporting are only available in newer compilers or on the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2689,"byte_end":2763,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ nightly channel.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2764,"byte_end":2785,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2786,"byte_end":2789,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## Example of a custom derive","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2790,"byte_end":2823,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2824,"byte_end":2827,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The canonical custom derive using Syn looks like this. We write an ordinary","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2828,"byte_end":2907,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ Rust function tagged with a `proc_macro_derive` attribute and the name of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2908,"byte_end":2985,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ the trait we are deriving. Any time that derive appears in the user's code,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":2986,"byte_end":3065,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ the Rust compiler passes their data structure as tokens into our macro. We","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3066,"byte_end":3144,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ get to execute arbitrary Rust code to figure out what to do with those","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3145,"byte_end":3219,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ tokens, then hand some tokens back to the compiler to compile into the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3220,"byte_end":3294,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ user's crate.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3295,"byte_end":3312,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3313,"byte_end":3316,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`TokenStream`]: https://doc.rust-lang.org/proc_macro/struct.TokenStream.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3317,"byte_end":3398,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3399,"byte_end":3402,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3403,"byte_end":3414,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3415,"byte_end":3433,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ syn = \"0.13\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3434,"byte_end":3450,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/ quote = \"0.5\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3451,"byte_end":3468,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3469,"byte_end":3472,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [lib]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3473,"byte_end":3482,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/ proc-macro = true","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3483,"byte_end":3504,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3505,"byte_end":3512,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3513,"byte_end":3516,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3517,"byte_end":3528,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ extern crate proc_macro;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3529,"byte_end":3557,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3558,"byte_end":3579,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3580,"byte_end":3583,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3584,"byte_end":3600,"line_start":82,"line_end":82,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3601,"byte_end":3624,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3625,"byte_end":3628,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3629,"byte_end":3661,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/ use syn::DeriveInput;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3662,"byte_end":3687,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3688,"byte_end":3691,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3692,"byte_end":3738,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3739,"byte_end":3772,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3773,"byte_end":3781,"line_start":90,"line_end":90,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3782,"byte_end":3838,"line_start":91,"line_end":91,"column_start":1,"column_end":57}},{"value":"/     // Parse the input tokens into a syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3839,"byte_end":3891,"line_start":92,"line_end":92,"column_start":1,"column_end":53}},{"value":"/     let input: DeriveInput = syn::parse(input).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3892,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3953,"byte_end":3956,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":3957,"byte_end":4016,"line_start":95,"line_end":95,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4017,"byte_end":4048,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"/         // ...","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4049,"byte_end":4067,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4068,"byte_end":4078,"line_start":98,"line_end":98,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4079,"byte_end":4082,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     // Hand the output tokens back to the compiler","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4083,"byte_end":4137,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/     expanded.into()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4138,"byte_end":4161,"line_start":101,"line_end":101,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4162,"byte_end":4167,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4168,"byte_end":4173,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4174,"byte_end":4192,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4193,"byte_end":4200,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4201,"byte_end":4204,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The [`heapsize`] example directory shows a complete working Macros 1.1","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4205,"byte_end":4279,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ implementation of a custom derive. It works on any Rust compiler \\>=1.15.0.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4280,"byte_end":4359,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ The example derives a `HeapSize` trait which computes an estimate of the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4360,"byte_end":4436,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ amount of heap memory owned by a value.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4437,"byte_end":4480,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4481,"byte_end":4484,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`heapsize`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4485,"byte_end":4563,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4564,"byte_end":4567,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4568,"byte_end":4579,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ pub trait HeapSize {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4580,"byte_end":4604,"line_start":115,"line_end":115,"column_start":1,"column_end":25}},{"value":"/     /// Total number of bytes of heap memory owned by `self`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4605,"byte_end":4670,"line_start":116,"line_end":116,"column_start":1,"column_end":66}},{"value":"/     fn heap_size_of_children(&self) -> usize;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4671,"byte_end":4720,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4721,"byte_end":4726,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4727,"byte_end":4734,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4735,"byte_end":4738,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The custom derive allows users to write `#[derive(HeapSize)]` on data","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4739,"byte_end":4812,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ structures in their program.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4813,"byte_end":4845,"line_start":122,"line_end":122,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4846,"byte_end":4849,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4850,"byte_end":4861,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4862,"byte_end":4908,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4909,"byte_end":4932,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4933,"byte_end":4941,"line_start":127,"line_end":127,"column_start":1,"column_end":9}},{"value":"/ struct Demo<'a, T: ?Sized> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4942,"byte_end":4974,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/     a: Box<T>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4975,"byte_end":4993,"line_start":129,"line_end":129,"column_start":1,"column_end":19}},{"value":"/     b: u8,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":4994,"byte_end":5008,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/     c: &'a str,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5009,"byte_end":5028,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/     d: String,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5029,"byte_end":5047,"line_start":132,"line_end":132,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5048,"byte_end":5053,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5054,"byte_end":5061,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5062,"byte_end":5065,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ## Spans and error reporting","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5066,"byte_end":5098,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5099,"byte_end":5102,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The [`heapsize2`] example directory is an extension of the `heapsize`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5103,"byte_end":5176,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ example that demonstrates some of the hygiene and error reporting properties","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5177,"byte_end":5257,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ of Macros 2.0. This example currently requires a nightly Rust compiler","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5258,"byte_end":5332,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ \\>=1.24.0-nightly but we are working to stabilize all of the APIs involved.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5333,"byte_end":5412,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5413,"byte_end":5416,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`heapsize2`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize2","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5417,"byte_end":5497,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5498,"byte_end":5501,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The token-based procedural macro API provides great control over where the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5502,"byte_end":5580,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ compiler's error messages are displayed in user code. Consider the error the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5581,"byte_end":5661,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ user sees if one of their field types does not implement `HeapSize`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5662,"byte_end":5734,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5735,"byte_end":5738,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5739,"byte_end":5750,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5751,"byte_end":5797,"line_start":150,"line_end":150,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5798,"byte_end":5821,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5822,"byte_end":5830,"line_start":152,"line_end":152,"column_start":1,"column_end":9}},{"value":"/ struct Broken {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5831,"byte_end":5850,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/     ok: String,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5851,"byte_end":5870,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     bad: std::thread::Thread,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5871,"byte_end":5904,"line_start":155,"line_end":155,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5905,"byte_end":5910,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5911,"byte_end":5918,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5919,"byte_end":5922,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ In the Macros 1.1 string-based procedural macro world, the resulting error","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":5923,"byte_end":6001,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ would point unhelpfully to the invocation of the derive macro and not to the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6002,"byte_end":6082,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ actual problematic field.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6083,"byte_end":6112,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6113,"byte_end":6116,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6117,"byte_end":6128,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/ error[E0599]: no method named `heap_size_of_children` found for type `std::thread::Thread` in the current scope","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6129,"byte_end":6244,"line_start":164,"line_end":164,"column_start":1,"column_end":116}},{"value":"/  --> src/main.rs:4:10","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6245,"byte_end":6270,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/   |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6271,"byte_end":6278,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ 4 | #[derive(HeapSize)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6279,"byte_end":6306,"line_start":167,"line_end":167,"column_start":1,"column_end":28}},{"value":"/   |          ^^^^^^^^","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6307,"byte_end":6332,"line_start":168,"line_end":168,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6333,"byte_end":6340,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6341,"byte_end":6344,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ By tracking span information all the way through the expansion of a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6345,"byte_end":6416,"line_start":171,"line_end":171,"column_start":1,"column_end":72}},{"value":"/ procedural macro as shown in the `heapsize2` example, token-based macros in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6417,"byte_end":6496,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ Syn are able to trigger errors that directly pinpoint the source of the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6497,"byte_end":6572,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"/ problem.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6573,"byte_end":6585,"line_start":174,"line_end":174,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6586,"byte_end":6589,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6590,"byte_end":6601,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `std::thread::Thread: HeapSize` is not satisfied","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6602,"byte_end":6684,"line_start":177,"line_end":177,"column_start":1,"column_end":83}},{"value":"/  --> src/main.rs:7:5","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6685,"byte_end":6709,"line_start":178,"line_end":178,"column_start":1,"column_end":25}},{"value":"/   |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6710,"byte_end":6717,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ 7 |     bad: std::thread::Thread,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6718,"byte_end":6755,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HeapSize` is not implemented for `Thread`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6756,"byte_end":6845,"line_start":181,"line_end":181,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6846,"byte_end":6853,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6854,"byte_end":6857,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ## Parsing a custom syntax using combinators","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6858,"byte_end":6906,"line_start":184,"line_end":184,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6907,"byte_end":6910,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`lazy-static`] example directory shows the implementation of a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6911,"byte_end":6982,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ `functionlike!(...)` procedural macro in which the input tokens are parsed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":6983,"byte_end":7061,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/ using [`nom`]-style parser combinators.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7062,"byte_end":7105,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7106,"byte_end":7109,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`lazy-static`]: https://github.com/dtolnay/syn/tree/master/examples/lazy-static","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7110,"byte_end":7194,"line_start":190,"line_end":190,"column_start":1,"column_end":85}},{"value":"/ [`nom`]: https://github.com/Geal/nom","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7195,"byte_end":7235,"line_start":191,"line_end":191,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7236,"byte_end":7239,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ The example reimplements the popular `lazy_static` crate from crates.io as a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7240,"byte_end":7320,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"/ procedural macro.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7321,"byte_end":7342,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7343,"byte_end":7346,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7347,"byte_end":7354,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/ # macro_rules! lazy_static {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7355,"byte_end":7387,"line_start":197,"line_end":197,"column_start":1,"column_end":33}},{"value":"/ #     ($($tt:tt)*) => {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7388,"byte_end":7416,"line_start":198,"line_end":198,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7417,"byte_end":7424,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7425,"byte_end":7430,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/ lazy_static! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7431,"byte_end":7449,"line_start":201,"line_end":201,"column_start":1,"column_end":19}},{"value":"/     static ref USERNAME: Regex = Regex::new(\"^[a-z0-9_-]{3,16}$\").unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7450,"byte_end":7529,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7530,"byte_end":7535,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7536,"byte_end":7543,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7544,"byte_end":7547,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ The implementation shows how to trigger custom warnings and error messages","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7548,"byte_end":7626,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ on the macro input.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7627,"byte_end":7650,"line_start":207,"line_end":207,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7651,"byte_end":7654,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7655,"byte_end":7666,"line_start":209,"line_end":209,"column_start":1,"column_end":12}},{"value":"/ warning: come on, pick a more creative name","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7667,"byte_end":7714,"line_start":210,"line_end":210,"column_start":1,"column_end":48}},{"value":"/   --> src/main.rs:10:16","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7715,"byte_end":7742,"line_start":211,"line_end":211,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7743,"byte_end":7751,"line_start":212,"line_end":212,"column_start":1,"column_end":9}},{"value":"/ 10 |     static ref FOO: String = \"lazy_static\".to_owned();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7752,"byte_end":7815,"line_start":213,"line_end":213,"column_start":1,"column_end":64}},{"value":"/    |                ^^^","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7816,"byte_end":7843,"line_start":214,"line_end":214,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7844,"byte_end":7851,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7852,"byte_end":7855,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## Debugging","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7856,"byte_end":7872,"line_start":217,"line_end":217,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7873,"byte_end":7876,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ When developing a procedural macro it can be helpful to look at what the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7877,"byte_end":7953,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ generated code looks like. Use `cargo rustc -- -Zunstable-options","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":7954,"byte_end":8023,"line_start":220,"line_end":220,"column_start":1,"column_end":70}},{"value":"/ --pretty=expanded` or the [`cargo expand`] subcommand.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8024,"byte_end":8082,"line_start":221,"line_end":221,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8083,"byte_end":8086,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [`cargo expand`]: https://github.com/dtolnay/cargo-expand","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8087,"byte_end":8148,"line_start":223,"line_end":223,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8149,"byte_end":8152,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ To show the expanded code for some crate that uses your procedural macro,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8153,"byte_end":8230,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ run `cargo expand` from that crate. To show the expanded code for one of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8231,"byte_end":8307,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ your own test cases, run `cargo expand --test the_test_case` where the last","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8308,"byte_end":8387,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ argument is the name of the test file without the `.rs` extension.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8388,"byte_end":8458,"line_start":228,"line_end":228,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8459,"byte_end":8462,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ This write-up by Brandon W Maister discusses debugging in more detail:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8463,"byte_end":8537,"line_start":230,"line_end":230,"column_start":1,"column_end":75}},{"value":"/ [Debugging Rust's new Custom Derive system][debugging].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8538,"byte_end":8597,"line_start":231,"line_end":231,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8598,"byte_end":8601,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ [debugging]: https://quodlibetor.github.io/posts/debugging-rusts-new-custom-derive-system/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8602,"byte_end":8696,"line_start":233,"line_end":233,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8697,"byte_end":8700,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8701,"byte_end":8725,"line_start":235,"line_end":235,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8726,"byte_end":8729,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Syn puts a lot of functionality behind optional features in order to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8730,"byte_end":8802,"line_start":237,"line_end":237,"column_start":1,"column_end":73}},{"value":"/ optimize compile time for the most common use cases. The following features","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8803,"byte_end":8882,"line_start":238,"line_end":238,"column_start":1,"column_end":80}},{"value":"/ are available.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8883,"byte_end":8901,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8902,"byte_end":8905,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ - **`derive`** *(enabled by default)* — Data structures for representing the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8906,"byte_end":8988,"line_start":241,"line_end":241,"column_start":1,"column_end":81}},{"value":"/   possible input to a custom derive, including structs and enums and types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":8989,"byte_end":9068,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ - **`full`** — Data structures for representing the syntax tree of all valid","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9069,"byte_end":9151,"line_start":243,"line_end":243,"column_start":1,"column_end":81}},{"value":"/   Rust source code, including items and expressions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9152,"byte_end":9208,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ - **`parsing`** *(enabled by default)* — Ability to parse input tokens into","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9209,"byte_end":9290,"line_start":245,"line_end":245,"column_start":1,"column_end":80}},{"value":"/   a syntax tree node of a chosen type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9291,"byte_end":9333,"line_start":246,"line_end":246,"column_start":1,"column_end":43}},{"value":"/ - **`printing`** *(enabled by default)* — Ability to print a syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9334,"byte_end":9412,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/   node as tokens of Rust source code.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9413,"byte_end":9454,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ - **`visit`** — Trait for traversing a syntax tree.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9455,"byte_end":9512,"line_start":249,"line_end":249,"column_start":1,"column_end":56}},{"value":"/ - **`visit-mut`** — Trait for traversing and mutating in place a syntax","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9513,"byte_end":9590,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"/   tree.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9591,"byte_end":9602,"line_start":251,"line_end":251,"column_start":1,"column_end":12}},{"value":"/ - **`fold`** — Trait for transforming an owned syntax tree.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9603,"byte_end":9668,"line_start":252,"line_end":252,"column_start":1,"column_end":64}},{"value":"/ - **`clone-impls`** *(enabled by default)* — Clone impls for all syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9669,"byte_end":9751,"line_start":253,"line_end":253,"column_start":1,"column_end":81}},{"value":"/   types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9752,"byte_end":9764,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"/ - **`extra-traits`** — Debug, Eq, PartialEq, Hash impls for all syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9765,"byte_end":9846,"line_start":255,"line_end":255,"column_start":1,"column_end":80}},{"value":"/   types.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":9847,"byte_end":9859,"line_start":256,"line_end":256,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parsers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsers","qualname":"::parsers","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parsers.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":22},{"krate":0,"index":32}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10346,"byte_end":10373,"line_start":272,"line_end":272,"column_start":1,"column_end":28}},{"value":"macro_use","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10374,"byte_end":10386,"line_start":273,"line_end":273,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parsers.rs","byte_start":31795,"byte_end":31801,"line_start":204,"line_end":204,"column_start":8,"column_end":14},"name":"invoke","qualname":"::parsers::invoke","value":"pub fn invoke<T, R, F: FnOnce(T) -> R>(F, T) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parsers.rs","byte_start":40123,"byte_end":40128,"line_start":496,"line_end":496,"column_start":8,"column_end":13},"name":"many0","qualname":"::parsers::many0","value":"pub fn many0<T>(Cursor, fn(: Cursor) -> PResult<, T>) -> PResult<, Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parsers.rs","byte_start":55832,"byte_end":55841,"line_start":1074,"line_end":1074,"column_start":8,"column_end":17},"name":"input_end","qualname":"::parsers::input_end","value":"pub fn input_end(Cursor) -> PResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":49},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":1796},{"krate":0,"index":1803},{"krate":0,"index":1800},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1818},{"krate":0,"index":1825},{"krate":0,"index":1822},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1840},{"krate":0,"index":1847},{"krate":0,"index":1844},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1862},{"krate":0,"index":1869},{"krate":0,"index":1866},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1884},{"krate":0,"index":1891},{"krate":0,"index":1888},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1881},{"krate":0,"index":1906},{"krate":0,"index":1913},{"krate":0,"index":1910},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1928},{"krate":0,"index":1935},{"krate":0,"index":1932},{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1950},{"krate":0,"index":1957},{"krate":0,"index":1954},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1972},{"krate":0,"index":1979},{"krate":0,"index":1976},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1994},{"krate":0,"index":2001},{"krate":0,"index":1998},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":2016},{"krate":0,"index":2023},{"krate":0,"index":2020},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2038},{"krate":0,"index":2045},{"krate":0,"index":2042},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2060},{"krate":0,"index":2067},{"krate":0,"index":2064},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2082},{"krate":0,"index":2089},{"krate":0,"index":2086},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2104},{"krate":0,"index":2111},{"krate":0,"index":2108},{"krate":0,"index":2090},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2126},{"krate":0,"index":2133},{"krate":0,"index":2130},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2148},{"krate":0,"index":2155},{"krate":0,"index":2152},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2170},{"krate":0,"index":2177},{"krate":0,"index":2174},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2192},{"krate":0,"index":2199},{"krate":0,"index":2196},{"krate":0,"index":2178},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2189},{"krate":0,"index":2214},{"krate":0,"index":2221},{"krate":0,"index":2218},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2236},{"krate":0,"index":2243},{"krate":0,"index":2240},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2258},{"krate":0,"index":2265},{"krate":0,"index":2262},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2280},{"krate":0,"index":2287},{"krate":0,"index":2284},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2302},{"krate":0,"index":2309},{"krate":0,"index":2306},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2324},{"krate":0,"index":2331},{"krate":0,"index":2328},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2346},{"krate":0,"index":2353},{"krate":0,"index":2350},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2368},{"krate":0,"index":2375},{"krate":0,"index":2372},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2390},{"krate":0,"index":2397},{"krate":0,"index":2394},{"krate":0,"index":2376},{"krate":0,"index":2379},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2412},{"krate":0,"index":2419},{"krate":0,"index":2416},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2434},{"krate":0,"index":2441},{"krate":0,"index":2438},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2456},{"krate":0,"index":2463},{"krate":0,"index":2460},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2478},{"krate":0,"index":2485},{"krate":0,"index":2482},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2500},{"krate":0,"index":2507},{"krate":0,"index":2504},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2497},{"krate":0,"index":2522},{"krate":0,"index":2529},{"krate":0,"index":2526},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2544},{"krate":0,"index":2551},{"krate":0,"index":2548},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2566},{"krate":0,"index":2573},{"krate":0,"index":2570},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2563},{"krate":0,"index":2588},{"krate":0,"index":2595},{"krate":0,"index":2592},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2610},{"krate":0,"index":2617},{"krate":0,"index":2614},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2632},{"krate":0,"index":2639},{"krate":0,"index":2636},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2654},{"krate":0,"index":2661},{"krate":0,"index":2658},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2676},{"krate":0,"index":2683},{"krate":0,"index":2680},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2698},{"krate":0,"index":2705},{"krate":0,"index":2702},{"krate":0,"index":2684},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2720},{"krate":0,"index":2727},{"krate":0,"index":2724},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2742},{"krate":0,"index":2749},{"krate":0,"index":2746},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2764},{"krate":0,"index":2771},{"krate":0,"index":2768},{"krate":0,"index":2750},{"krate":0,"index":2753},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2782},{"krate":0,"index":2787},{"krate":0,"index":2785},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2780},{"krate":0,"index":2798},{"krate":0,"index":2803},{"krate":0,"index":2801},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2796},{"krate":0,"index":2814},{"krate":0,"index":2819},{"krate":0,"index":2817},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2812},{"krate":0,"index":2830},{"krate":0,"index":2835},{"krate":0,"index":2833},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2828},{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2848},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2860},{"krate":0,"index":2865},{"krate":0,"index":2863},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2875},{"krate":0,"index":2880},{"krate":0,"index":2878},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2890},{"krate":0,"index":2895},{"krate":0,"index":2893},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2905},{"krate":0,"index":2910},{"krate":0,"index":2908},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2920},{"krate":0,"index":2925},{"krate":0,"index":2923},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2935},{"krate":0,"index":2940},{"krate":0,"index":2938},{"krate":0,"index":2926},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2933},{"krate":0,"index":2950},{"krate":0,"index":2955},{"krate":0,"index":2953},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2965},{"krate":0,"index":2970},{"krate":0,"index":2968},{"krate":0,"index":2956},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2980},{"krate":0,"index":2985},{"krate":0,"index":2983},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2995},{"krate":0,"index":3000},{"krate":0,"index":2998},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":3010},{"krate":0,"index":3015},{"krate":0,"index":3013},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3025},{"krate":0,"index":3030},{"krate":0,"index":3028},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3040},{"krate":0,"index":3045},{"krate":0,"index":3043},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":3055},{"krate":0,"index":3060},{"krate":0,"index":3058},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3070},{"krate":0,"index":3075},{"krate":0,"index":3073},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3068},{"krate":0,"index":3085},{"krate":0,"index":3090},{"krate":0,"index":3088},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3100},{"krate":0,"index":3105},{"krate":0,"index":3103},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3098},{"krate":0,"index":3115},{"krate":0,"index":3120},{"krate":0,"index":3118},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3130},{"krate":0,"index":3135},{"krate":0,"index":3133},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3145},{"krate":0,"index":3150},{"krate":0,"index":3148},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3143},{"krate":0,"index":3160},{"krate":0,"index":3165},{"krate":0,"index":3163},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3158},{"krate":0,"index":3175},{"krate":0,"index":3180},{"krate":0,"index":3178},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3190},{"krate":0,"index":3195},{"krate":0,"index":3193},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3205},{"krate":0,"index":3210},{"krate":0,"index":3208},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3220},{"krate":0,"index":3225},{"krate":0,"index":3223},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3218},{"krate":0,"index":3235},{"krate":0,"index":3240},{"krate":0,"index":3238},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3250},{"krate":0,"index":3255},{"krate":0,"index":3253},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3265},{"krate":0,"index":3270},{"krate":0,"index":3268},{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3280},{"krate":0,"index":3285},{"krate":0,"index":3283},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3278},{"krate":0,"index":3295},{"krate":0,"index":3300},{"krate":0,"index":3298},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3310},{"krate":0,"index":3315},{"krate":0,"index":3313},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3325},{"krate":0,"index":3330},{"krate":0,"index":3328},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3340},{"krate":0,"index":3345},{"krate":0,"index":3343},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3355},{"krate":0,"index":3360},{"krate":0,"index":3358},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3353},{"krate":0,"index":3370},{"krate":0,"index":3375},{"krate":0,"index":3373},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3385},{"krate":0,"index":3390},{"krate":0,"index":3388},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3400},{"krate":0,"index":3405},{"krate":0,"index":3403},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3398},{"krate":0,"index":3415},{"krate":0,"index":3420},{"krate":0,"index":3418},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3430},{"krate":0,"index":3435},{"krate":0,"index":3433},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3445},{"krate":0,"index":3450},{"krate":0,"index":3448},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3440},{"krate":0,"index":3443},{"krate":0,"index":3460},{"krate":0,"index":3465},{"krate":0,"index":3463},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":58},{"krate":0,"index":90}],"decl_id":null,"docs":" Tokens representing Rust punctuation, keywords, and delimiters.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10446,"byte_end":10458,"line_start":280,"line_end":280,"column_start":1,"column_end":13}},{"value":"/ Tokens representing Rust punctuation, keywords, and delimiters.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69435,"byte_end":69502,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69503,"byte_end":69506,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The type names in this module can be difficult to keep straight, so we","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69507,"byte_end":69581,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ prefer to use the [`Token!`] macro instead. This is a type-macro that","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69582,"byte_end":69655,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ expands to the token type of the given token.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69656,"byte_end":69705,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69706,"byte_end":69709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Token!`]: ../macro.Token.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69710,"byte_end":69745,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69746,"byte_end":69749,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69750,"byte_end":69763,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69764,"byte_end":69767,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The [`ItemStatic`] syntax tree node is defined like this.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69768,"byte_end":69829,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69830,"byte_end":69833,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`ItemStatic`]: ../struct.ItemStatic.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69834,"byte_end":69879,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69880,"byte_end":69883,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69884,"byte_end":69891,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69892,"byte_end":69910,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ # extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69911,"byte_end":69934,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69935,"byte_end":69940,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # use syn::{Attribute, Visibility, Ident, Type, Expr};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":69941,"byte_end":69999,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70000,"byte_end":70005,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ pub struct ItemStatic {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70006,"byte_end":70033,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/     pub attrs: Vec<Attribute>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70034,"byte_end":70068,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/     pub vis: Visibility,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70069,"byte_end":70097,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     pub static_token: Token![static],","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70098,"byte_end":70139,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/     pub mutability: Option<Token![mut]>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70140,"byte_end":70184,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/     pub ident: Ident,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70185,"byte_end":70210,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     pub colon_token: Token![:],","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70211,"byte_end":70246,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/     pub ty: Box<Type>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70247,"byte_end":70273,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/     pub eq_token: Token![=],","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70274,"byte_end":70306,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/     pub expr: Box<Expr>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70307,"byte_end":70335,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     pub semi_token: Token![;],","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70336,"byte_end":70370,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70371,"byte_end":70376,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70377,"byte_end":70382,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70383,"byte_end":70401,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70402,"byte_end":70409,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70410,"byte_end":70413,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Parsing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70414,"byte_end":70427,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70428,"byte_end":70431,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ These tokens can be parsed using the [`Synom`] trait and the parser","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70432,"byte_end":70503,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ combinator macros [`punct!`], [`keyword!`], [`parens!`], [`braces!`], and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70504,"byte_end":70581,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ [`brackets!`].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70582,"byte_end":70600,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70601,"byte_end":70604,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Synom`]: ../synom/trait.Synom.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70605,"byte_end":70645,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ [`punct!`]: ../macro.punct.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70646,"byte_end":70681,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/ [`keyword!`]: ../macro.keyword.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70682,"byte_end":70721,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/ [`parens!`]: ../macro.parens.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70722,"byte_end":70759,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/ [`braces!`]: ../macro.braces.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70760,"byte_end":70797,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/ [`brackets!`]: ../macro.brackets.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70798,"byte_end":70839,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70840,"byte_end":70843,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70844,"byte_end":70851,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70852,"byte_end":70868,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70869,"byte_end":70890,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70891,"byte_end":70894,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ use syn::synom::Synom;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70895,"byte_end":70921,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"/ use syn::{Attribute, Visibility, Ident, Type, Expr};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70922,"byte_end":70978,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70979,"byte_end":70984,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ # struct ItemStatic;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":70985,"byte_end":71009,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ # use syn::ItemStatic as SynItemStatic;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71010,"byte_end":71053,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71054,"byte_end":71057,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Parse the ItemStatic struct shown above.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71058,"byte_end":71105,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/ impl Synom for ItemStatic {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71106,"byte_end":71137,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     named!(parse -> Self, do_parse!(","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71138,"byte_end":71178,"line_start":70,"line_end":70,"column_start":1,"column_end":41}},{"value":"/ #       (ItemStatic)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71179,"byte_end":71203,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/ #   ));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71204,"byte_end":71215,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71216,"byte_end":71223,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71224,"byte_end":71229,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ # mod example {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71230,"byte_end":71249,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ #   use super::*;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71250,"byte_end":71271,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/ #   use super::SynItemStatic as ItemStatic;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71272,"byte_end":71319,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71320,"byte_end":71325,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ #   named!(parse -> ItemStatic, do_parse!(","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71326,"byte_end":71372,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"/         attrs: many0!(Attribute::parse_outer) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71373,"byte_end":71425,"line_start":80,"line_end":80,"column_start":1,"column_end":53}},{"value":"/         vis: syn!(Visibility) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71426,"byte_end":71462,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/         static_token: keyword!(static) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71463,"byte_end":71508,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/         mutability: option!(keyword!(mut)) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71509,"byte_end":71558,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/         ident: syn!(Ident) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71559,"byte_end":71592,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/         colon_token: punct!(:) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71593,"byte_end":71630,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/         ty: syn!(Type) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71631,"byte_end":71660,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/         eq_token: punct!(=) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71661,"byte_end":71695,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/         expr: syn!(Expr) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71696,"byte_end":71727,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/         semi_token: punct!(;) >>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71728,"byte_end":71764,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/         (ItemStatic {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71765,"byte_end":71790,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/             attrs, vis, static_token, mutability, ident, colon_token,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71791,"byte_end":71864,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/             ty: Box::new(ty), eq_token, expr: Box::new(expr), semi_token,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71865,"byte_end":71942,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"/         })","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71943,"byte_end":71957,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"/     ));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71958,"byte_end":71969,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71970,"byte_end":71975,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71976,"byte_end":71981,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":71982,"byte_end":72000,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72001,"byte_end":72008,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78597,"byte_end":78600,"line_start":324,"line_end":324,"column_start":31,"column_end":34},"name":"Add","qualname":"::token::Add","value":"","parent":null,"children":[],"decl_id":null,"docs":" `+`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78648,"byte_end":78653,"line_start":325,"line_end":325,"column_start":31,"column_end":36},"name":"AddEq","qualname":"::token::AddEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `+=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78700,"byte_end":78703,"line_start":326,"line_end":326,"column_start":31,"column_end":34},"name":"And","qualname":"::token::And","value":"","parent":null,"children":[],"decl_id":null,"docs":" `&`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78751,"byte_end":78757,"line_start":327,"line_end":327,"column_start":31,"column_end":37},"name":"AndAnd","qualname":"::token::AndAnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" `&&`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78803,"byte_end":78808,"line_start":328,"line_end":328,"column_start":31,"column_end":36},"name":"AndEq","qualname":"::token::AndEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `&=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78855,"byte_end":78857,"line_start":329,"line_end":329,"column_start":31,"column_end":33},"name":"At","qualname":"::token::At","value":"","parent":null,"children":[],"decl_id":null,"docs":" `@`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78906,"byte_end":78910,"line_start":330,"line_end":330,"column_start":31,"column_end":35},"name":"Bang","qualname":"::token::Bang","value":"","parent":null,"children":[],"decl_id":null,"docs":" `!`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":78957,"byte_end":78962,"line_start":331,"line_end":331,"column_start":31,"column_end":36},"name":"Caret","qualname":"::token::Caret","value":"","parent":null,"children":[],"decl_id":null,"docs":" `^`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79008,"byte_end":79015,"line_start":332,"line_end":332,"column_start":31,"column_end":38},"name":"CaretEq","qualname":"::token::CaretEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `^=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79060,"byte_end":79065,"line_start":333,"line_end":333,"column_start":31,"column_end":36},"name":"Colon","qualname":"::token::Colon","value":"","parent":null,"children":[],"decl_id":null,"docs":" `:`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79111,"byte_end":79117,"line_start":334,"line_end":334,"column_start":31,"column_end":37},"name":"Colon2","qualname":"::token::Colon2","value":"","parent":null,"children":[],"decl_id":null,"docs":" `::`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79163,"byte_end":79168,"line_start":335,"line_end":335,"column_start":31,"column_end":36},"name":"Comma","qualname":"::token::Comma","value":"","parent":null,"children":[],"decl_id":null,"docs":" `,`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79214,"byte_end":79217,"line_start":336,"line_end":336,"column_start":31,"column_end":34},"name":"Div","qualname":"::token::Div","value":"","parent":null,"children":[],"decl_id":null,"docs":" `/`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79265,"byte_end":79270,"line_start":337,"line_end":337,"column_start":31,"column_end":36},"name":"DivEq","qualname":"::token::DivEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `/=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79317,"byte_end":79320,"line_start":338,"line_end":338,"column_start":31,"column_end":34},"name":"Dot","qualname":"::token::Dot","value":"","parent":null,"children":[],"decl_id":null,"docs":" `.`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79368,"byte_end":79372,"line_start":339,"line_end":339,"column_start":31,"column_end":35},"name":"Dot2","qualname":"::token::Dot2","value":"","parent":null,"children":[],"decl_id":null,"docs":" `..`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79420,"byte_end":79424,"line_start":340,"line_end":340,"column_start":31,"column_end":35},"name":"Dot3","qualname":"::token::Dot3","value":"","parent":null,"children":[],"decl_id":null,"docs":" `...`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79473,"byte_end":79481,"line_start":341,"line_end":341,"column_start":31,"column_end":39},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `..=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79526,"byte_end":79528,"line_start":342,"line_end":342,"column_start":31,"column_end":33},"name":"Eq","qualname":"::token::Eq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79577,"byte_end":79581,"line_start":343,"line_end":343,"column_start":31,"column_end":35},"name":"EqEq","qualname":"::token::EqEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `==`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79629,"byte_end":79631,"line_start":344,"line_end":344,"column_start":31,"column_end":33},"name":"Ge","qualname":"::token::Ge","value":"","parent":null,"children":[],"decl_id":null,"docs":" `>=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79681,"byte_end":79683,"line_start":345,"line_end":345,"column_start":31,"column_end":33},"name":"Gt","qualname":"::token::Gt","value":"","parent":null,"children":[],"decl_id":null,"docs":" `>`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79732,"byte_end":79734,"line_start":346,"line_end":346,"column_start":31,"column_end":33},"name":"Le","qualname":"::token::Le","value":"","parent":null,"children":[],"decl_id":null,"docs":" `<=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79784,"byte_end":79786,"line_start":347,"line_end":347,"column_start":31,"column_end":33},"name":"Lt","qualname":"::token::Lt","value":"","parent":null,"children":[],"decl_id":null,"docs":" `<`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79835,"byte_end":79840,"line_start":348,"line_end":348,"column_start":31,"column_end":36},"name":"MulEq","qualname":"::token::MulEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `*=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79887,"byte_end":79889,"line_start":349,"line_end":349,"column_start":31,"column_end":33},"name":"Ne","qualname":"::token::Ne","value":"","parent":null,"children":[],"decl_id":null,"docs":" `!=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79939,"byte_end":79941,"line_start":350,"line_end":350,"column_start":31,"column_end":33},"name":"Or","qualname":"::token::Or","value":"","parent":null,"children":[],"decl_id":null,"docs":" `|`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":79990,"byte_end":79994,"line_start":351,"line_end":351,"column_start":31,"column_end":35},"name":"OrEq","qualname":"::token::OrEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `|=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80042,"byte_end":80046,"line_start":352,"line_end":352,"column_start":31,"column_end":35},"name":"OrOr","qualname":"::token::OrOr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `||`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80094,"byte_end":80099,"line_start":353,"line_end":353,"column_start":31,"column_end":36},"name":"Pound","qualname":"::token::Pound","value":"","parent":null,"children":[],"decl_id":null,"docs":" `#`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80145,"byte_end":80153,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"name":"Question","qualname":"::token::Question","value":"","parent":null,"children":[],"decl_id":null,"docs":" `?`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80196,"byte_end":80202,"line_start":355,"line_end":355,"column_start":31,"column_end":37},"name":"RArrow","qualname":"::token::RArrow","value":"","parent":null,"children":[],"decl_id":null,"docs":" `->`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80248,"byte_end":80254,"line_start":356,"line_end":356,"column_start":31,"column_end":37},"name":"LArrow","qualname":"::token::LArrow","value":"","parent":null,"children":[],"decl_id":null,"docs":" `<-`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80300,"byte_end":80303,"line_start":357,"line_end":357,"column_start":31,"column_end":34},"name":"Rem","qualname":"::token::Rem","value":"","parent":null,"children":[],"decl_id":null,"docs":" `%`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80351,"byte_end":80356,"line_start":358,"line_end":358,"column_start":31,"column_end":36},"name":"RemEq","qualname":"::token::RemEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `%=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80403,"byte_end":80411,"line_start":359,"line_end":359,"column_start":31,"column_end":39},"name":"FatArrow","qualname":"::token::FatArrow","value":"","parent":null,"children":[],"decl_id":null,"docs":" `=>`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80455,"byte_end":80459,"line_start":360,"line_end":360,"column_start":31,"column_end":35},"name":"Semi","qualname":"::token::Semi","value":"","parent":null,"children":[],"decl_id":null,"docs":" `;`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80506,"byte_end":80509,"line_start":361,"line_end":361,"column_start":31,"column_end":34},"name":"Shl","qualname":"::token::Shl","value":"","parent":null,"children":[],"decl_id":null,"docs":" `<<`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80558,"byte_end":80563,"line_start":362,"line_end":362,"column_start":31,"column_end":36},"name":"ShlEq","qualname":"::token::ShlEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `<<=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80611,"byte_end":80614,"line_start":363,"line_end":363,"column_start":31,"column_end":34},"name":"Shr","qualname":"::token::Shr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `>>`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80663,"byte_end":80668,"line_start":364,"line_end":364,"column_start":31,"column_end":36},"name":"ShrEq","qualname":"::token::ShrEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `>>=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80716,"byte_end":80720,"line_start":365,"line_end":365,"column_start":31,"column_end":35},"name":"Star","qualname":"::token::Star","value":"","parent":null,"children":[],"decl_id":null,"docs":" `*`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80767,"byte_end":80770,"line_start":366,"line_end":366,"column_start":31,"column_end":34},"name":"Sub","qualname":"::token::Sub","value":"","parent":null,"children":[],"decl_id":null,"docs":" `-`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80818,"byte_end":80823,"line_start":367,"line_end":367,"column_start":31,"column_end":36},"name":"SubEq","qualname":"::token::SubEq","value":"","parent":null,"children":[],"decl_id":null,"docs":" `-=`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80870,"byte_end":80880,"line_start":368,"line_end":368,"column_start":31,"column_end":41},"name":"Underscore","qualname":"::token::Underscore","value":"","parent":null,"children":[],"decl_id":null,"docs":" `_`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72843,"byte_end":72846,"line_start":124,"line_end":124,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72855,"byte_end":72924,"line_start":125,"line_end":125,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72933,"byte_end":72951,"line_start":126,"line_end":126,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72960,"byte_end":72963,"line_start":127,"line_end":127,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":72972,"byte_end":72998,"line_start":128,"line_end":128,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80944,"byte_end":80949,"line_start":371,"line_end":371,"column_start":31,"column_end":36},"name":"Brace","qualname":"::token::Brace","value":"","parent":null,"children":[],"decl_id":null,"docs":" `{...}`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":80999,"byte_end":81006,"line_start":372,"line_end":372,"column_start":31,"column_end":38},"name":"Bracket","qualname":"::token::Bracket","value":"","parent":null,"children":[],"decl_id":null,"docs":" `[...]`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81054,"byte_end":81059,"line_start":373,"line_end":373,"column_start":31,"column_end":36},"name":"Paren","qualname":"::token::Paren","value":"","parent":null,"children":[],"decl_id":null,"docs":" `(...)`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81109,"byte_end":81114,"line_start":374,"line_end":374,"column_start":31,"column_end":36},"name":"Group","qualname":"::token::Group","value":"","parent":null,"children":[],"decl_id":null,"docs":" None-delimited group\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81198,"byte_end":81200,"line_start":377,"line_end":377,"column_start":31,"column_end":33},"name":"As","qualname":"::token::As","value":"","parent":null,"children":[],"decl_id":null,"docs":" `as`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81250,"byte_end":81254,"line_start":378,"line_end":378,"column_start":31,"column_end":35},"name":"Auto","qualname":"::token::Auto","value":"","parent":null,"children":[],"decl_id":null,"docs":" `auto`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81304,"byte_end":81307,"line_start":379,"line_end":379,"column_start":31,"column_end":34},"name":"Box","qualname":"::token::Box","value":"","parent":null,"children":[],"decl_id":null,"docs":" `box`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81357,"byte_end":81362,"line_start":380,"line_end":380,"column_start":31,"column_end":36},"name":"Break","qualname":"::token::Break","value":"","parent":null,"children":[],"decl_id":null,"docs":" `break`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81412,"byte_end":81419,"line_start":381,"line_end":381,"column_start":31,"column_end":38},"name":"CapSelf","qualname":"::token::CapSelf","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81466,"byte_end":81471,"line_start":382,"line_end":382,"column_start":31,"column_end":36},"name":"Catch","qualname":"::token::Catch","value":"","parent":null,"children":[],"decl_id":null,"docs":" `catch`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81521,"byte_end":81526,"line_start":383,"line_end":383,"column_start":31,"column_end":36},"name":"Const","qualname":"::token::Const","value":"","parent":null,"children":[],"decl_id":null,"docs":" `const`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81576,"byte_end":81584,"line_start":384,"line_end":384,"column_start":31,"column_end":39},"name":"Continue","qualname":"::token::Continue","value":"","parent":null,"children":[],"decl_id":null,"docs":" `continue`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81634,"byte_end":81639,"line_start":385,"line_end":385,"column_start":31,"column_end":36},"name":"Crate","qualname":"::token::Crate","value":"","parent":null,"children":[],"decl_id":null,"docs":" `crate`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81689,"byte_end":81696,"line_start":386,"line_end":386,"column_start":31,"column_end":38},"name":"Default","qualname":"::token::Default","value":"","parent":null,"children":[],"decl_id":null,"docs":" `default`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81746,"byte_end":81748,"line_start":387,"line_end":387,"column_start":31,"column_end":33},"name":"Do","qualname":"::token::Do","value":"","parent":null,"children":[],"decl_id":null,"docs":" `do`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3010},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81798,"byte_end":81801,"line_start":388,"line_end":388,"column_start":31,"column_end":34},"name":"Dyn","qualname":"::token::Dyn","value":"","parent":null,"children":[],"decl_id":null,"docs":" `dyn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81851,"byte_end":81855,"line_start":389,"line_end":389,"column_start":31,"column_end":35},"name":"Else","qualname":"::token::Else","value":"","parent":null,"children":[],"decl_id":null,"docs":" `else`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81905,"byte_end":81909,"line_start":390,"line_end":390,"column_start":31,"column_end":35},"name":"Enum","qualname":"::token::Enum","value":"","parent":null,"children":[],"decl_id":null,"docs":" `enum`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":81959,"byte_end":81965,"line_start":391,"line_end":391,"column_start":31,"column_end":37},"name":"Extern","qualname":"::token::Extern","value":"","parent":null,"children":[],"decl_id":null,"docs":" `extern`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82015,"byte_end":82017,"line_start":392,"line_end":392,"column_start":31,"column_end":33},"name":"Fn","qualname":"::token::Fn","value":"","parent":null,"children":[],"decl_id":null,"docs":" `fn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82067,"byte_end":82070,"line_start":393,"line_end":393,"column_start":31,"column_end":34},"name":"For","qualname":"::token::For","value":"","parent":null,"children":[],"decl_id":null,"docs":" `for`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82120,"byte_end":82122,"line_start":394,"line_end":394,"column_start":31,"column_end":33},"name":"If","qualname":"::token::If","value":"","parent":null,"children":[],"decl_id":null,"docs":" `if`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82172,"byte_end":82176,"line_start":395,"line_end":395,"column_start":31,"column_end":35},"name":"Impl","qualname":"::token::Impl","value":"","parent":null,"children":[],"decl_id":null,"docs":" `impl`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82226,"byte_end":82228,"line_start":396,"line_end":396,"column_start":31,"column_end":33},"name":"In","qualname":"::token::In","value":"","parent":null,"children":[],"decl_id":null,"docs":" `in`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3145},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82278,"byte_end":82281,"line_start":397,"line_end":397,"column_start":31,"column_end":34},"name":"Let","qualname":"::token::Let","value":"","parent":null,"children":[],"decl_id":null,"docs":" `let`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82331,"byte_end":82335,"line_start":398,"line_end":398,"column_start":31,"column_end":35},"name":"Loop","qualname":"::token::Loop","value":"","parent":null,"children":[],"decl_id":null,"docs":" `loop`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82385,"byte_end":82390,"line_start":399,"line_end":399,"column_start":31,"column_end":36},"name":"Macro","qualname":"::token::Macro","value":"","parent":null,"children":[],"decl_id":null,"docs":" `macro`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3190},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82440,"byte_end":82445,"line_start":400,"line_end":400,"column_start":31,"column_end":36},"name":"Match","qualname":"::token::Match","value":"","parent":null,"children":[],"decl_id":null,"docs":" `match`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82495,"byte_end":82498,"line_start":401,"line_end":401,"column_start":31,"column_end":34},"name":"Mod","qualname":"::token::Mod","value":"","parent":null,"children":[],"decl_id":null,"docs":" `mod`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82548,"byte_end":82552,"line_start":402,"line_end":402,"column_start":31,"column_end":35},"name":"Move","qualname":"::token::Move","value":"","parent":null,"children":[],"decl_id":null,"docs":" `move`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82602,"byte_end":82605,"line_start":403,"line_end":403,"column_start":31,"column_end":34},"name":"Mut","qualname":"::token::Mut","value":"","parent":null,"children":[],"decl_id":null,"docs":" `mut`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82655,"byte_end":82658,"line_start":404,"line_end":404,"column_start":31,"column_end":34},"name":"Pub","qualname":"::token::Pub","value":"","parent":null,"children":[],"decl_id":null,"docs":" `pub`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82708,"byte_end":82711,"line_start":405,"line_end":405,"column_start":31,"column_end":34},"name":"Ref","qualname":"::token::Ref","value":"","parent":null,"children":[],"decl_id":null,"docs":" `ref`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82761,"byte_end":82767,"line_start":406,"line_end":406,"column_start":31,"column_end":37},"name":"Return","qualname":"::token::Return","value":"","parent":null,"children":[],"decl_id":null,"docs":" `return`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82817,"byte_end":82822,"line_start":407,"line_end":407,"column_start":31,"column_end":36},"name":"Self_","qualname":"::token::Self_","value":"","parent":null,"children":[],"decl_id":null,"docs":" `self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82871,"byte_end":82877,"line_start":408,"line_end":408,"column_start":31,"column_end":37},"name":"Static","qualname":"::token::Static","value":"","parent":null,"children":[],"decl_id":null,"docs":" `static`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3325},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82927,"byte_end":82933,"line_start":409,"line_end":409,"column_start":31,"column_end":37},"name":"Struct","qualname":"::token::Struct","value":"","parent":null,"children":[],"decl_id":null,"docs":" `struct`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":82983,"byte_end":82988,"line_start":410,"line_end":410,"column_start":31,"column_end":36},"name":"Super","qualname":"::token::Super","value":"","parent":null,"children":[],"decl_id":null,"docs":" `super`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83038,"byte_end":83043,"line_start":411,"line_end":411,"column_start":31,"column_end":36},"name":"Trait","qualname":"::token::Trait","value":"","parent":null,"children":[],"decl_id":null,"docs":" `trait`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3370},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83093,"byte_end":83097,"line_start":412,"line_end":412,"column_start":31,"column_end":35},"name":"Type","qualname":"::token::Type","value":"","parent":null,"children":[],"decl_id":null,"docs":" `type`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83147,"byte_end":83152,"line_start":413,"line_end":413,"column_start":31,"column_end":36},"name":"Union","qualname":"::token::Union","value":"","parent":null,"children":[],"decl_id":null,"docs":" `union`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83202,"byte_end":83208,"line_start":414,"line_end":414,"column_start":31,"column_end":37},"name":"Unsafe","qualname":"::token::Unsafe","value":"","parent":null,"children":[],"decl_id":null,"docs":" `unsafe`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83258,"byte_end":83261,"line_start":415,"line_end":415,"column_start":31,"column_end":34},"name":"Use","qualname":"::token::Use","value":"","parent":null,"children":[],"decl_id":null,"docs":" `use`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83311,"byte_end":83316,"line_start":416,"line_end":416,"column_start":31,"column_end":36},"name":"Where","qualname":"::token::Where","value":"","parent":null,"children":[],"decl_id":null,"docs":" `where`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83366,"byte_end":83371,"line_start":417,"line_end":417,"column_start":31,"column_end":36},"name":"While","qualname":"::token::While","value":"","parent":null,"children":[],"decl_id":null,"docs":" `while`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":83421,"byte_end":83426,"line_start":418,"line_end":418,"column_start":31,"column_end":36},"name":"Yield","qualname":"::token::Yield","value":"","parent":null,"children":[],"decl_id":null,"docs":" `yield`","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74923,"byte_end":74926,"line_start":197,"line_end":197,"column_start":9,"column_end":12}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":74935,"byte_end":75004,"line_start":198,"line_end":198,"column_start":9,"column_end":78}},{"value":"/ macro instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75013,"byte_end":75031,"line_start":199,"line_end":199,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75040,"byte_end":75043,"line_start":200,"line_end":200,"column_start":9,"column_end":12}},{"value":"/ [`Token!`]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":75052,"byte_end":75078,"line_start":201,"line_end":201,"column_start":9,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102779,"byte_end":102788,"line_start":61,"line_end":61,"column_start":16,"column_end":25},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { pound_token, style, bracket_token, path, tts, is_sugared_doc }","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472}],"decl_id":null,"docs":" An attribute like `#[repr(transparent)]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102824,"byte_end":102835,"line_start":62,"line_end":62,"column_start":13,"column_end":24},"name":"pound_token","qualname":"::attr::Attribute::pound_token","value":"token::Pound","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102860,"byte_end":102865,"line_start":63,"line_end":63,"column_start":13,"column_end":18},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102890,"byte_end":102903,"line_start":64,"line_end":64,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::attr::Attribute::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3470},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102933,"byte_end":102937,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::Attribute::path","value":"path::Path","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102957,"byte_end":102960,"line_start":66,"line_end":66,"column_start":13,"column_end":16},"name":"tts","qualname":"::attr::Attribute::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":102987,"byte_end":103001,"line_start":67,"line_end":67,"column_start":13,"column_end":27},"name":"is_sugared_doc","qualname":"::attr::Attribute::is_sugared_doc","value":"bool","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":103978,"byte_end":103992,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"interpret_meta","qualname":"<Attribute>::interpret_meta","value":"pub fn interpret_meta(&Self) -> Option<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the tokens after the path as a [`Meta`](enum.Meta.html) if\n possible.\n","sig":null,"attributes":[{"value":"/ Parses the tokens after the path as a [`Meta`](enum.Meta.html) if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":103879,"byte_end":103948,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/ possible.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":103953,"byte_end":103966,"line_start":101,"line_end":101,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":109396,"byte_end":109401,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3478},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":109411,"byte_end":109416,"line_start":285,"line_end":285,"column_start":9,"column_end":14},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner(crate::token::Bang)","parent":{"krate":0,"index":3475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":109376,"byte_end":109385,"line_start":283,"line_end":283,"column_start":14,"column_end":23},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"pub enum AttrStyle { Outer, Inner(crate::token::Bang), }","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3478}],"decl_id":null,"docs":" Distinguishes between attributes that decorate an item and attributes\n that are contained within an item.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110127,"byte_end":110131,"line_start":314,"line_end":314,"column_start":13,"column_end":17},"name":"Word","qualname":"::attr::Meta::Word","value":"Meta::Word(Ident)","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110349,"byte_end":110353,"line_start":319,"line_end":319,"column_start":13,"column_end":17},"name":"List","qualname":"::attr::Meta::List","value":"Meta::List(MetaList)","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110718,"byte_end":110727,"line_start":328,"line_end":328,"column_start":13,"column_end":22},"name":"NameValue","qualname":"::attr::Meta::NameValue","value":"Meta::NameValue(MetaNameValue)","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110108,"byte_end":110112,"line_start":313,"line_end":313,"column_start":14,"column_end":18},"name":"Meta","qualname":"::attr::Meta","value":"pub enum Meta {\n    Word(Ident),\n\n    #[doc =\n      r\" A structured list within an attribute, like `derive(Copy, Clone)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    List(MetaList),\n\n    #[doc =\n      r#\" A name-value pair within an attribute, like `feature = \"nightly\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    NameValue(MetaNameValue),\n}","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3494},{"krate":0,"index":3497}],"decl_id":null,"docs":" Content of a compile-time structured attribute.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110354,"byte_end":110362,"line_start":319,"line_end":319,"column_start":18,"column_end":26},"name":"MetaList","qualname":"::attr::MetaList","value":"MetaList { ident, paren_token, nested }","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505}],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110381,"byte_end":110386,"line_start":320,"line_end":320,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaList::ident","value":"ident::Ident","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110411,"byte_end":110422,"line_start":321,"line_end":321,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::attr::MetaList::paren_token","value":"token::Paren","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110454,"byte_end":110460,"line_start":322,"line_end":322,"column_start":17,"column_end":23},"name":"nested","qualname":"::attr::MetaList::nested","value":"punctuated::Punctuated<attr::NestedMeta, token::Comma>","parent":{"krate":0,"index":3502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110728,"byte_end":110741,"line_start":328,"line_end":328,"column_start":23,"column_end":36},"name":"MetaNameValue","qualname":"::attr::MetaNameValue","value":"MetaNameValue { ident, eq_token, lit }","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511}],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110760,"byte_end":110765,"line_start":329,"line_end":329,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaNameValue::ident","value":"ident::Ident","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110790,"byte_end":110798,"line_start":330,"line_end":330,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::attr::MetaNameValue::eq_token","value":"token::Eq","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110827,"byte_end":110830,"line_start":331,"line_end":331,"column_start":17,"column_end":20},"name":"lit","qualname":"::attr::MetaNameValue::lit","value":"lit::Lit","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111113,"byte_end":111117,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"name","qualname":"<Meta>::name","value":"pub fn name(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifier that begins this structured meta item.","sig":null,"attributes":[{"value":"/ Returns the identifier that begins this structured meta item.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110874,"byte_end":110939,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110944,"byte_end":110947,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For example this would return the `test` in `#[test]`, the `derive` in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110952,"byte_end":111026,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/ `#[derive(Copy)]`, and the `path` in `#[path = \"sys/windows.rs\"]`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111031,"byte_end":111101,"line_start":340,"line_end":340,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3521},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111661,"byte_end":111665,"line_start":358,"line_end":358,"column_start":13,"column_end":17},"name":"Meta","qualname":"::attr::NestedMeta::Meta","value":"NestedMeta::Meta(Meta)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\n would be a nested `Meta::Word`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111764,"byte_end":111771,"line_start":361,"line_end":361,"column_start":13,"column_end":20},"name":"Literal","qualname":"::attr::NestedMeta::Literal","value":"NestedMeta::Literal(Lit)","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111513,"byte_end":111523,"line_start":355,"line_end":355,"column_start":14,"column_end":24},"name":"NestedMeta","qualname":"::attr::NestedMeta","value":"pub enum NestedMeta {\n\n    #[doc =\n      r\" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\"]\n    #[doc = r\" would be a nested `Meta::Word`.\"]\n    Meta(Meta),\n\n    #[doc =\n      r#\" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\"#]\n    Literal(Lit),\n}","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3524}],"decl_id":null,"docs":" Element of a compile-time attribute list.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":122},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111824,"byte_end":111827,"line_start":366,"line_end":366,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":112979,"byte_end":112990,"line_start":414,"line_end":414,"column_start":20,"column_end":31},"name":"parse_inner","qualname":"<Attribute>::parse_inner","value":"pub fn parse_inner(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":114423,"byte_end":114434,"line_start":455,"line_end":455,"column_start":20,"column_end":31},"name":"parse_outer","qualname":"<Attribute>::parse_outer","value":"pub fn parse_outer(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118155,"byte_end":118162,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Variant","qualname":"::data::Variant","value":"Variant { attrs, ident, fields, discriminant }","parent":null,"children":[{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541}],"decl_id":null,"docs":" An enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118223,"byte_end":118228,"line_start":19,"line_end":19,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the variant.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118173,"byte_end":118210,"line_start":18,"line_end":18,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118292,"byte_end":118297,"line_start":22,"line_end":22,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Variant::ident","value":"ident::Ident","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[{"value":"/ Name of the variant.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118255,"byte_end":118279,"line_start":21,"line_end":21,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118362,"byte_end":118368,"line_start":25,"line_end":25,"column_start":13,"column_end":19},"name":"fields","qualname":"::data::Variant::fields","value":"data::Fields","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" Content stored in the variant.\n","sig":null,"attributes":[{"value":"/ Content stored in the variant.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118315,"byte_end":118349,"line_start":24,"line_end":24,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118440,"byte_end":118452,"line_start":28,"line_end":28,"column_start":13,"column_end":25},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" Explicit discriminant: `Variant = 1`\n","sig":null,"attributes":[{"value":"/ Explicit discriminant: `Variant = 1`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118387,"byte_end":118427,"line_start":27,"line_end":27,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119083,"byte_end":119088,"line_start":49,"line_end":49,"column_start":13,"column_end":18},"name":"Named","qualname":"::data::Fields::Named","value":"Fields::Named(FieldsNamed)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119423,"byte_end":119430,"line_start":58,"line_end":58,"column_start":13,"column_end":20},"name":"Unnamed","qualname":"::data::Fields::Unnamed","value":"Fields::Unnamed(FieldsUnnamed)","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119626,"byte_end":119630,"line_start":64,"line_end":64,"column_start":13,"column_end":17},"name":"Unit","qualname":"::data::Fields::Unit","value":"Fields::Unit","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Unit struct or unit variant such as `None`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":118841,"byte_end":118847,"line_start":43,"line_end":43,"column_start":14,"column_end":20},"name":"Fields","qualname":"::data::Fields","value":"pub enum Fields {\n\n    #[doc =\n      r\" Named fields of a struct or struct variant such as `Point { x: f64,\"]\n    #[doc = r\" y: f64 }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Named(FieldsNamed),\n\n    #[doc =\n      r\" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Unnamed(FieldsUnnamed),\n\n    #[doc = r\" Unit struct or unit variant such as `None`.\"]\n    Unit,\n}","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555}],"decl_id":null,"docs":" Data stored within an enum variant or struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3559},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119089,"byte_end":119100,"line_start":49,"line_end":49,"column_start":19,"column_end":30},"name":"FieldsNamed","qualname":"::data::FieldsNamed","value":"FieldsNamed { brace_token, named }","parent":null,"children":[{"krate":0,"index":3560},{"krate":0,"index":3561}],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119119,"byte_end":119130,"line_start":50,"line_end":50,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::data::FieldsNamed::brace_token","value":"token::Brace","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119162,"byte_end":119167,"line_start":51,"line_end":51,"column_start":17,"column_end":22},"name":"named","qualname":"::data::FieldsNamed::named","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119431,"byte_end":119444,"line_start":58,"line_end":58,"column_start":21,"column_end":34},"name":"FieldsUnnamed","qualname":"::data::FieldsUnnamed","value":"FieldsUnnamed { paren_token, unnamed }","parent":null,"children":[{"krate":0,"index":3565},{"krate":0,"index":3566}],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119463,"byte_end":119474,"line_start":59,"line_end":59,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::FieldsUnnamed::paren_token","value":"token::Paren","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119506,"byte_end":119513,"line_start":60,"line_end":60,"column_start":17,"column_end":24},"name":"unnamed","qualname":"::data::FieldsUnnamed::unnamed","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119891,"byte_end":119895,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fields>::iter","value":"pub fn iter(&Self) -> punctuated::Iter<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the [`Field`] items in this object. This iterator\n can be used to iterate over a named or unnamed struct or variant's\n fields uniformly.","sig":null,"attributes":[{"value":"/ Get an iterator over the [`Field`] items in this object. This iterator","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119659,"byte_end":119733,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ can be used to iterate over a named or unnamed struct or variant's","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119738,"byte_end":119808,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ fields uniformly.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119813,"byte_end":119834,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119839,"byte_end":119842,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: struct.Field.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119847,"byte_end":119879,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120512,"byte_end":120517,"line_start":97,"line_end":97,"column_start":16,"column_end":21},"name":"Field","qualname":"::data::Field","value":"Field { attrs, vis, ident, colon_token, ty }","parent":null,"children":[{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576}],"decl_id":null,"docs":" A field of a struct or enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120576,"byte_end":120581,"line_start":99,"line_end":99,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120528,"byte_end":120563,"line_start":98,"line_end":98,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120649,"byte_end":120652,"line_start":102,"line_end":102,"column_start":13,"column_end":16},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[{"value":"/ Visibility of the field.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120608,"byte_end":120636,"line_start":101,"line_end":101,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120781,"byte_end":120786,"line_start":107,"line_end":107,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<ident::Ident>","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":" Name of the field, if any.","sig":null,"attributes":[{"value":"/ Name of the field, if any.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120675,"byte_end":120705,"line_start":104,"line_end":104,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120714,"byte_end":120717,"line_start":105,"line_end":105,"column_start":9,"column_end":12}},{"value":"/ Fields of tuple structs have no names.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120726,"byte_end":120768,"line_start":106,"line_end":106,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120816,"byte_end":120827,"line_start":109,"line_end":109,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::data::Field::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120892,"byte_end":120894,"line_start":112,"line_end":112,"column_start":13,"column_end":15},"name":"ty","qualname":"::data::Field::ty","value":"ty::Type","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":120857,"byte_end":120879,"line_start":111,"line_end":111,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121487,"byte_end":121493,"line_start":133,"line_end":133,"column_start":13,"column_end":19},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public(VisPublic)","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121736,"byte_end":121741,"line_start":141,"line_end":141,"column_start":13,"column_end":18},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate(VisCrate)","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122079,"byte_end":122089,"line_start":150,"line_end":150,"column_start":13,"column_end":23},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(VisRestricted)","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122359,"byte_end":122368,"line_start":158,"line_end":158,"column_start":13,"column_end":22},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" An inherited visibility, which usually means private.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121298,"byte_end":121308,"line_start":128,"line_end":128,"column_start":14,"column_end":24},"name":"Visibility","qualname":"::data::Visibility","value":"pub enum Visibility {\n\n    #[doc = r\" A public visibility level: `pub`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Public(VisPublic),\n\n    #[doc = r\" A crate-level visibility: `crate`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Crate(VisCrate),\n\n    #[doc = r\" A visibility level restricted to some path: `pub(self)` or\"]\n    #[doc = r\" `pub(super)` or `pub(crate)` or `pub(in some::module)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Restricted(VisRestricted),\n\n    #[doc = r\" An inherited visibility, which usually means private.\"]\n    Inherited,\n}","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3589},{"krate":0,"index":3592},{"krate":0,"index":3595}],"decl_id":null,"docs":" The visibility level of an item: inherited or `pub` or\n `pub(restricted)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121494,"byte_end":121503,"line_start":133,"line_end":133,"column_start":20,"column_end":29},"name":"VisPublic","qualname":"::data::VisPublic","value":"VisPublic { pub_token }","parent":null,"children":[{"krate":0,"index":3600}],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121522,"byte_end":121531,"line_start":134,"line_end":134,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisPublic::pub_token","value":"token::Pub","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3603},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121742,"byte_end":121750,"line_start":141,"line_end":141,"column_start":19,"column_end":27},"name":"VisCrate","qualname":"::data::VisCrate","value":"VisCrate { crate_token }","parent":null,"children":[{"krate":0,"index":3604}],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3604},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":121769,"byte_end":121780,"line_start":142,"line_end":142,"column_start":17,"column_end":28},"name":"crate_token","qualname":"::data::VisCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":3603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122090,"byte_end":122103,"line_start":150,"line_end":150,"column_start":24,"column_end":37},"name":"VisRestricted","qualname":"::data::VisRestricted","value":"VisRestricted { pub_token, paren_token, in_token, path }","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611}],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3608},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122122,"byte_end":122131,"line_start":151,"line_end":151,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisRestricted::pub_token","value":"token::Pub","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122162,"byte_end":122173,"line_start":152,"line_end":152,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::VisRestricted::paren_token","value":"token::Paren","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122205,"byte_end":122213,"line_start":153,"line_end":153,"column_start":17,"column_end":25},"name":"in_token","qualname":"::data::VisRestricted::in_token","value":"std::option::Option<token::In>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122251,"byte_end":122255,"line_start":154,"line_end":154,"column_start":17,"column_end":21},"name":"path","qualname":"::data::VisRestricted::path","value":"std::boxed::Box<path::Path>","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124095,"byte_end":124106,"line_start":222,"line_end":222,"column_start":20,"column_end":31},"name":"parse_named","qualname":"<Field>::parse_named","value":"pub fn parse_named(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124533,"byte_end":124546,"line_start":237,"line_end":237,"column_start":20,"column_end":33},"name":"parse_unnamed","qualname":"<Field>::parse_unnamed","value":"pub fn parse_unnamed(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":132885,"byte_end":132888,"line_start":110,"line_end":110,"column_start":13,"column_end":16},"name":"Box","qualname":"::expr::Expr::Box","value":"Expr::Box(ExprBox)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133188,"byte_end":133195,"line_start":119,"line_end":119,"column_start":13,"column_end":20},"name":"InPlace","qualname":"::expr::Expr::InPlace","value":"Expr::InPlace(ExprInPlace)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A placement expression: `place <- value`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3721},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133537,"byte_end":133542,"line_start":129,"line_end":129,"column_start":13,"column_end":18},"name":"Array","qualname":"::expr::Expr::Array","value":"Expr::Array(ExprArray)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133898,"byte_end":133902,"line_start":139,"line_end":139,"column_start":13,"column_end":17},"name":"Call","qualname":"::expr::Expr::Call","value":"Expr::Call(ExprCall)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3727},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134255,"byte_end":134265,"line_start":149,"line_end":149,"column_start":13,"column_end":23},"name":"MethodCall","qualname":"::expr::Expr::MethodCall","value":"Expr::MethodCall(ExprMethodCall)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134745,"byte_end":134750,"line_start":162,"line_end":162,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::expr::Expr::Tuple","value":"Expr::Tuple(ExprTuple)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3733},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135096,"byte_end":135102,"line_start":172,"line_end":172,"column_start":13,"column_end":19},"name":"Binary","qualname":"::expr::Expr::Binary","value":"Expr::Binary(ExprBinary)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135435,"byte_end":135440,"line_start":183,"line_end":183,"column_start":13,"column_end":18},"name":"Unary","qualname":"::expr::Expr::Unary","value":"Expr::Unary(ExprUnary)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3739},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135757,"byte_end":135760,"line_start":193,"line_end":193,"column_start":13,"column_end":16},"name":"Lit","qualname":"::expr::Expr::Lit","value":"Expr::Lit(ExprLit)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136024,"byte_end":136028,"line_start":202,"line_end":202,"column_start":13,"column_end":17},"name":"Cast","qualname":"::expr::Expr::Cast","value":"Expr::Cast(ExprCast)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136352,"byte_end":136356,"line_start":212,"line_end":212,"column_start":13,"column_end":17},"name":"Type","qualname":"::expr::Expr::Type","value":"Expr::Type(ExprType)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3748},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136900,"byte_end":136902,"line_start":226,"line_end":226,"column_start":13,"column_end":15},"name":"If","qualname":"::expr::Expr::If","value":"Expr::If(ExprIf)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":137525,"byte_end":137530,"line_start":241,"line_end":241,"column_start":13,"column_end":18},"name":"IfLet","qualname":"::expr::Expr::IfLet","value":"Expr::IfLet(ExprIfLet)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An `if let` expression with an optional `else` block: `if let pat =\n expr { ... } else { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138051,"byte_end":138056,"line_start":255,"line_end":255,"column_start":13,"column_end":18},"name":"While","qualname":"::expr::Expr::While","value":"Expr::While(ExprWhile)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138437,"byte_end":138445,"line_start":266,"line_end":266,"column_start":13,"column_end":21},"name":"WhileLet","qualname":"::expr::Expr::WhileLet","value":"Expr::WhileLet(ExprWhileLet)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A while-let loop: `while let pat = expr { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138945,"byte_end":138952,"line_start":280,"line_end":280,"column_start":13,"column_end":20},"name":"ForLoop","qualname":"::expr::Expr::ForLoop","value":"Expr::ForLoop(ExprForLoop)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":139386,"byte_end":139390,"line_start":293,"line_end":293,"column_start":13,"column_end":17},"name":"Loop","qualname":"::expr::Expr::Loop","value":"Expr::Loop(ExprLoop)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":139748,"byte_end":139753,"line_start":303,"line_end":303,"column_start":13,"column_end":18},"name":"Match","qualname":"::expr::Expr::Match","value":"Expr::Match(ExprMatch)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3769},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140130,"byte_end":140137,"line_start":314,"line_end":314,"column_start":13,"column_end":20},"name":"Closure","qualname":"::expr::Expr::Closure","value":"Expr::Closure(ExprClosure)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140659,"byte_end":140665,"line_start":328,"line_end":328,"column_start":13,"column_end":19},"name":"Unsafe","qualname":"::expr::Expr::Unsafe","value":"Expr::Unsafe(ExprUnsafe)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140957,"byte_end":140962,"line_start":337,"line_end":337,"column_start":13,"column_end":18},"name":"Block","qualname":"::expr::Expr::Block","value":"Expr::Block(ExprBlock)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141222,"byte_end":141228,"line_start":345,"line_end":345,"column_start":13,"column_end":19},"name":"Assign","qualname":"::expr::Expr::Assign","value":"Expr::Assign(ExprAssign)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141570,"byte_end":141578,"line_start":355,"line_end":355,"column_start":13,"column_end":21},"name":"AssignOp","qualname":"::expr::Expr::AssignOp","value":"Expr::AssignOp(ExprAssignOp)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3784},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141956,"byte_end":141961,"line_start":366,"line_end":366,"column_start":13,"column_end":18},"name":"Field","qualname":"::expr::Expr::Field","value":"Expr::Field(ExprField)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3787},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142330,"byte_end":142335,"line_start":377,"line_end":377,"column_start":13,"column_end":18},"name":"Index","qualname":"::expr::Expr::Index","value":"Expr::Index(ExprIndex)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142689,"byte_end":142694,"line_start":387,"line_end":387,"column_start":13,"column_end":18},"name":"Range","qualname":"::expr::Expr::Range","value":"Expr::Range(ExprRange)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3793},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143209,"byte_end":143213,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"name":"Path","qualname":"::expr::Expr::Path","value":"Expr::Path(ExprPath)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143502,"byte_end":143511,"line_start":410,"line_end":410,"column_start":13,"column_end":22},"name":"Reference","qualname":"::expr::Expr::Reference","value":"Expr::Reference(ExprReference)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3799},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143905,"byte_end":143910,"line_start":421,"line_end":421,"column_start":13,"column_end":18},"name":"Break","qualname":"::expr::Expr::Break","value":"Expr::Break(ExprBreak)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144261,"byte_end":144269,"line_start":431,"line_end":431,"column_start":13,"column_end":21},"name":"Continue","qualname":"::expr::Expr::Continue","value":"Expr::Continue(ExprContinue)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3805},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144601,"byte_end":144607,"line_start":440,"line_end":440,"column_start":13,"column_end":19},"name":"Return","qualname":"::expr::Expr::Return","value":"Expr::Return(ExprReturn)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144933,"byte_end":144938,"line_start":449,"line_end":449,"column_start":13,"column_end":18},"name":"Macro","qualname":"::expr::Expr::Macro","value":"Expr::Macro(ExprMacro)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":145330,"byte_end":145336,"line_start":460,"line_end":460,"column_start":13,"column_end":19},"name":"Struct","qualname":"::expr::Expr::Struct","value":"Expr::Struct(ExprStruct)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":145811,"byte_end":145817,"line_start":472,"line_end":472,"column_start":13,"column_end":19},"name":"Repeat","qualname":"::expr::Expr::Repeat","value":"Expr::Repeat(ExprRepeat)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146195,"byte_end":146200,"line_start":483,"line_end":483,"column_start":13,"column_end":18},"name":"Paren","qualname":"::expr::Expr::Paren","value":"Expr::Paren(ExprParen)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3820},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146703,"byte_end":146708,"line_start":496,"line_end":496,"column_start":13,"column_end":18},"name":"Group","qualname":"::expr::Expr::Group","value":"Expr::Group(ExprGroup)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146998,"byte_end":147001,"line_start":505,"line_end":505,"column_start":13,"column_end":16},"name":"Try","qualname":"::expr::Expr::Try","value":"Expr::Try(ExprTry)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147302,"byte_end":147307,"line_start":514,"line_end":514,"column_start":13,"column_end":18},"name":"Catch","qualname":"::expr::Expr::Catch","value":"Expr::Catch(ExprCatch)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A catch expression: `do catch { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147640,"byte_end":147645,"line_start":524,"line_end":524,"column_start":13,"column_end":18},"name":"Yield","qualname":"::expr::Expr::Yield","value":"Expr::Yield(ExprYield)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147997,"byte_end":148005,"line_start":534,"line_end":534,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::expr::Expr::Verbatim","value":"Expr::Verbatim(ExprVerbatim)","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":132735,"byte_end":132739,"line_start":106,"line_end":106,"column_start":14,"column_end":18},"name":"Expr","qualname":"::expr::Expr","value":"pub enum Expr {\n\n    #[doc = r\" A box expression: `box f`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Box(ExprBox),\n\n    #[doc = r\" A placement expression: `place <- value`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    InPlace(ExprInPlace),\n\n    #[doc = r\" A slice literal expression: `[a, b, c, d]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Array(ExprArray),\n\n    #[doc = r\" A function call expression: `invoke(a, b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Call(ExprCall),\n\n    #[doc = r\" A method call expression: `x.foo::<T>(a, b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    MethodCall(ExprMethodCall),\n\n    #[doc = r\" A tuple expression: `(a, b, c, d)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Tuple(ExprTuple),\n\n    #[doc = r\" A binary operation: `a + b`, `a * b`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Binary(ExprBinary),\n\n    #[doc = r\" A unary operation: `!x`, `*x`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Unary(ExprUnary),\n\n    #[doc = r#\" A literal in place of an expression: `1`, `\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lit(ExprLit),\n\n    #[doc = r\" A cast expression: `foo as f64`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Cast(ExprCast),\n\n    #[doc = r\" A type ascription expression: `foo: f64`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Type(ExprType),\n\n    #[doc =\n      r\" An `if` expression with an optional `else` block: `if expr { ... }\"]\n    #[doc = r\" else { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" The `else` branch expression may only be an `If`, `IfLet`, or\"]\n    #[doc = r\" `Block` expression, not any of the other types of expression.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    If(ExprIf),\n\n    #[doc =\n      r\" An `if let` expression with an optional `else` block: `if let pat =\"]\n    #[doc = r\" expr { ... } else { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" The `else` branch expression may only be an `If`, `IfLet`, or\"]\n    #[doc = r\" `Block` expression, not any of the other types of expression.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    IfLet(ExprIfLet),\n\n    #[doc = r\" A while loop: `while expr { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    While(ExprWhile),\n\n    #[doc = r\" A while-let loop: `while let pat = expr { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    WhileLet(ExprWhileLet),\n\n    #[doc = r\" A for loop: `for pat in expr { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    ForLoop(ExprForLoop),\n\n    #[doc = r\" Conditionless loop: `loop { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Loop(ExprLoop),\n\n    #[doc =\n      r\" A `match` expression: `match n { Some(n) => {}, None => {} }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Match(ExprMatch),\n\n    #[doc = r\" A closure expression: `|a, b| a + b`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Closure(ExprClosure),\n\n    #[doc = r\" An unsafe block: `unsafe { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Unsafe(ExprUnsafe),\n\n    #[doc = r\" A blocked scope: `{ ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Block(ExprBlock),\n\n    #[doc = r\" An assignment expression: `a = compute()`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Assign(ExprAssign),\n\n    #[doc = r\" A compound assignment expression: `counter += 1`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    AssignOp(ExprAssignOp),\n\n    #[doc =\n      r\" Access of a named struct field (`obj.k`) or unnamed tuple struct\"]\n    #[doc = r\" field (`obj.0`).\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Field(ExprField),\n\n    #[doc = r\" A square bracketed indexing expression: `vector[2]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Index(ExprIndex),\n\n    #[doc = r\" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Range(ExprRange),\n\n    #[doc = r\" A path like `std::mem::replace` possibly containing generic\"]\n    #[doc = r\" parameters and a qualified self-type.\"]\n    #[doc = r\"\"]\n    #[doc = r\" A plain identifier like `x` is a path of length 1.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Path(ExprPath),\n\n    #[doc = r\" A referencing operation: `&a` or `&mut a`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Reference(ExprReference),\n\n    #[doc = r\" A `break`, with an optional label to break and an optional\"]\n    #[doc = r\" expression.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Break(ExprBreak),\n\n    #[doc = r\" A `continue`, with an optional label.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Continue(ExprContinue),\n\n    #[doc = r\" A `return`, with an optional value to be returned.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Return(ExprReturn),\n\n    #[doc = r#\" A macro invocation expression: `format!(\"{}\", q)`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Macro(ExprMacro),\n\n    #[doc = r\" A struct literal expression: `Point { x: 1, y: 1 }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" The `rest` provides the value of the remaining fields as in `S { a:\"]\n    #[doc = r\" 1, b: 1, ..rest }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Struct(ExprStruct),\n\n    #[doc =\n      r\" An array literal constructed from one repeated element: `[0u8; N]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Repeat(ExprRepeat),\n\n    #[doc = r\" A parenthesized expression: `(a + b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Paren(ExprParen),\n\n    #[doc = r\" An expression contained within invisible delimiters.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" This variant is important for faithfully representing the precedence\"]\n    #[doc = r\" of expressions and is related to `None`-delimited spans in a\"]\n    #[doc = r\" `TokenStream`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Group(ExprGroup),\n\n    #[doc = r\" A try-expression: `expr?`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Try(ExprTry),\n\n    #[doc = r\" A catch expression: `do catch { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Catch(ExprCatch),\n\n    #[doc = r\" A yield expression: `yield expr`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Yield(ExprYield),\n\n    #[doc = r\" Tokens in expression position not interpreted by Syn.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(ExprVerbatim),\n}","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3718},{"krate":0,"index":3721},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3733},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3781},{"krate":0,"index":3784},{"krate":0,"index":3787},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3799},{"krate":0,"index":3802},{"krate":0,"index":3805},{"krate":0,"index":3808},{"krate":0,"index":3811},{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3820},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832}],"decl_id":null,"docs":" A Rust expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":132889,"byte_end":132896,"line_start":110,"line_end":110,"column_start":17,"column_end":24},"name":"ExprBox","qualname":"::expr::ExprBox","value":"ExprBox {  }","parent":null,"children":[{"krate":0,"index":3838}],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133196,"byte_end":133207,"line_start":119,"line_end":119,"column_start":21,"column_end":32},"name":"ExprInPlace","qualname":"::expr::ExprInPlace","value":"ExprInPlace {  }","parent":null,"children":[{"krate":0,"index":3842}],"decl_id":null,"docs":" A placement expression: `place <- value`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133543,"byte_end":133552,"line_start":129,"line_end":129,"column_start":19,"column_end":28},"name":"ExprArray","qualname":"::expr::ExprArray","value":"ExprArray {  }","parent":null,"children":[{"krate":0,"index":3846}],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133903,"byte_end":133911,"line_start":139,"line_end":139,"column_start":18,"column_end":26},"name":"ExprCall","qualname":"::expr::ExprCall","value":"ExprCall { attrs, func, paren_token, args }","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853}],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133930,"byte_end":133935,"line_start":140,"line_end":140,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3851},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":133969,"byte_end":133973,"line_start":141,"line_end":141,"column_start":17,"column_end":21},"name":"func","qualname":"::expr::ExprCall::func","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134002,"byte_end":134013,"line_start":142,"line_end":142,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134045,"byte_end":134049,"line_start":143,"line_end":143,"column_start":17,"column_end":21},"name":"args","qualname":"::expr::ExprCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":3849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134266,"byte_end":134280,"line_start":149,"line_end":149,"column_start":24,"column_end":38},"name":"ExprMethodCall","qualname":"::expr::ExprMethodCall","value":"ExprMethodCall {  }","parent":null,"children":[{"krate":0,"index":3857}],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":134751,"byte_end":134760,"line_start":162,"line_end":162,"column_start":19,"column_end":28},"name":"ExprTuple","qualname":"::expr::ExprTuple","value":"ExprTuple {  }","parent":null,"children":[{"krate":0,"index":3861}],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135103,"byte_end":135113,"line_start":172,"line_end":172,"column_start":20,"column_end":30},"name":"ExprBinary","qualname":"::expr::ExprBinary","value":"ExprBinary { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868}],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135132,"byte_end":135137,"line_start":173,"line_end":173,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBinary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135171,"byte_end":135175,"line_start":174,"line_end":174,"column_start":17,"column_end":21},"name":"left","qualname":"::expr::ExprBinary::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135204,"byte_end":135206,"line_start":175,"line_end":175,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprBinary::op","value":"op::BinOp","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135231,"byte_end":135236,"line_start":176,"line_end":176,"column_start":17,"column_end":22},"name":"right","qualname":"::expr::ExprBinary::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135441,"byte_end":135450,"line_start":183,"line_end":183,"column_start":19,"column_end":28},"name":"ExprUnary","qualname":"::expr::ExprUnary","value":"ExprUnary { attrs, op, expr }","parent":null,"children":[{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874}],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135469,"byte_end":135474,"line_start":184,"line_end":184,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprUnary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135508,"byte_end":135510,"line_start":185,"line_end":185,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprUnary::op","value":"op::UnOp","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135534,"byte_end":135538,"line_start":186,"line_end":186,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprUnary::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135761,"byte_end":135768,"line_start":193,"line_end":193,"column_start":17,"column_end":24},"name":"ExprLit","qualname":"::expr::ExprLit","value":"ExprLit { attrs, lit }","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3879}],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135787,"byte_end":135792,"line_start":194,"line_end":194,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":135826,"byte_end":135829,"line_start":195,"line_end":195,"column_start":17,"column_end":20},"name":"lit","qualname":"::expr::ExprLit::lit","value":"lit::Lit","parent":{"krate":0,"index":3877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136029,"byte_end":136037,"line_start":202,"line_end":202,"column_start":18,"column_end":26},"name":"ExprCast","qualname":"::expr::ExprCast","value":"ExprCast { attrs, expr, as_token, ty }","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886}],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136056,"byte_end":136061,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCast::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136095,"byte_end":136099,"line_start":204,"line_end":204,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprCast::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136128,"byte_end":136136,"line_start":205,"line_end":205,"column_start":17,"column_end":25},"name":"as_token","qualname":"::expr::ExprCast::as_token","value":"token::As","parent":{"krate":0,"index":3882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136166,"byte_end":136168,"line_start":206,"line_end":206,"column_start":17,"column_end":19},"name":"ty","qualname":"::expr::ExprCast::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":3882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136357,"byte_end":136365,"line_start":212,"line_end":212,"column_start":18,"column_end":26},"name":"ExprType","qualname":"::expr::ExprType","value":"ExprType {  }","parent":null,"children":[{"krate":0,"index":3890}],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":136903,"byte_end":136909,"line_start":226,"line_end":226,"column_start":16,"column_end":22},"name":"ExprIf","qualname":"::expr::ExprIf","value":"ExprIf {  }","parent":null,"children":[{"krate":0,"index":3894}],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":137531,"byte_end":137540,"line_start":241,"line_end":241,"column_start":19,"column_end":28},"name":"ExprIfLet","qualname":"::expr::ExprIfLet","value":"ExprIfLet {  }","parent":null,"children":[{"krate":0,"index":3898}],"decl_id":null,"docs":" An `if let` expression with an optional `else` block: `if let pat =\n expr { ... } else { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3901},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138057,"byte_end":138066,"line_start":255,"line_end":255,"column_start":19,"column_end":28},"name":"ExprWhile","qualname":"::expr::ExprWhile","value":"ExprWhile {  }","parent":null,"children":[{"krate":0,"index":3902}],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138446,"byte_end":138458,"line_start":266,"line_end":266,"column_start":22,"column_end":34},"name":"ExprWhileLet","qualname":"::expr::ExprWhileLet","value":"ExprWhileLet {  }","parent":null,"children":[{"krate":0,"index":3906}],"decl_id":null,"docs":" A while-let loop: `while let pat = expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":138953,"byte_end":138964,"line_start":280,"line_end":280,"column_start":21,"column_end":32},"name":"ExprForLoop","qualname":"::expr::ExprForLoop","value":"ExprForLoop {  }","parent":null,"children":[{"krate":0,"index":3910}],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":139391,"byte_end":139399,"line_start":293,"line_end":293,"column_start":18,"column_end":26},"name":"ExprLoop","qualname":"::expr::ExprLoop","value":"ExprLoop {  }","parent":null,"children":[{"krate":0,"index":3914}],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":139754,"byte_end":139763,"line_start":303,"line_end":303,"column_start":19,"column_end":28},"name":"ExprMatch","qualname":"::expr::ExprMatch","value":"ExprMatch {  }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3921},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140138,"byte_end":140149,"line_start":314,"line_end":314,"column_start":21,"column_end":32},"name":"ExprClosure","qualname":"::expr::ExprClosure","value":"ExprClosure {  }","parent":null,"children":[{"krate":0,"index":3922}],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140666,"byte_end":140676,"line_start":328,"line_end":328,"column_start":20,"column_end":30},"name":"ExprUnsafe","qualname":"::expr::ExprUnsafe","value":"ExprUnsafe {  }","parent":null,"children":[{"krate":0,"index":3926}],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3929},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":140963,"byte_end":140972,"line_start":337,"line_end":337,"column_start":19,"column_end":28},"name":"ExprBlock","qualname":"::expr::ExprBlock","value":"ExprBlock {  }","parent":null,"children":[{"krate":0,"index":3930}],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3933},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141229,"byte_end":141239,"line_start":345,"line_end":345,"column_start":20,"column_end":30},"name":"ExprAssign","qualname":"::expr::ExprAssign","value":"ExprAssign {  }","parent":null,"children":[{"krate":0,"index":3934}],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141579,"byte_end":141591,"line_start":355,"line_end":355,"column_start":22,"column_end":34},"name":"ExprAssignOp","qualname":"::expr::ExprAssignOp","value":"ExprAssignOp {  }","parent":null,"children":[{"krate":0,"index":3938}],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":141962,"byte_end":141971,"line_start":366,"line_end":366,"column_start":19,"column_end":28},"name":"ExprField","qualname":"::expr::ExprField","value":"ExprField {  }","parent":null,"children":[{"krate":0,"index":3942}],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142336,"byte_end":142345,"line_start":377,"line_end":377,"column_start":19,"column_end":28},"name":"ExprIndex","qualname":"::expr::ExprIndex","value":"ExprIndex { attrs, expr, bracket_token, index }","parent":null,"children":[{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949}],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142364,"byte_end":142369,"line_start":378,"line_end":378,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprIndex::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3947},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142403,"byte_end":142407,"line_start":379,"line_end":379,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprIndex::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3948},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142436,"byte_end":142449,"line_start":380,"line_end":380,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::ExprIndex::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":3945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3949},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142483,"byte_end":142488,"line_start":381,"line_end":381,"column_start":17,"column_end":22},"name":"index","qualname":"::expr::ExprIndex::index","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3952},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":142695,"byte_end":142704,"line_start":387,"line_end":387,"column_start":19,"column_end":28},"name":"ExprRange","qualname":"::expr::ExprRange","value":"ExprRange {  }","parent":null,"children":[{"krate":0,"index":3953}],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143214,"byte_end":143222,"line_start":401,"line_end":401,"column_start":18,"column_end":26},"name":"ExprPath","qualname":"::expr::ExprPath","value":"ExprPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959}],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143241,"byte_end":143246,"line_start":402,"line_end":402,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143280,"byte_end":143285,"line_start":403,"line_end":403,"column_start":17,"column_end":22},"name":"qself","qualname":"::expr::ExprPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3959},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143318,"byte_end":143322,"line_start":404,"line_end":404,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::ExprPath::path","value":"path::Path","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143512,"byte_end":143525,"line_start":410,"line_end":410,"column_start":23,"column_end":36},"name":"ExprReference","qualname":"::expr::ExprReference","value":"ExprReference {  }","parent":null,"children":[{"krate":0,"index":3963}],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":143911,"byte_end":143920,"line_start":421,"line_end":421,"column_start":19,"column_end":28},"name":"ExprBreak","qualname":"::expr::ExprBreak","value":"ExprBreak {  }","parent":null,"children":[{"krate":0,"index":3967}],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144270,"byte_end":144282,"line_start":431,"line_end":431,"column_start":22,"column_end":34},"name":"ExprContinue","qualname":"::expr::ExprContinue","value":"ExprContinue {  }","parent":null,"children":[{"krate":0,"index":3971}],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144608,"byte_end":144618,"line_start":440,"line_end":440,"column_start":20,"column_end":30},"name":"ExprReturn","qualname":"::expr::ExprReturn","value":"ExprReturn {  }","parent":null,"children":[{"krate":0,"index":3975}],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":144939,"byte_end":144948,"line_start":449,"line_end":449,"column_start":19,"column_end":28},"name":"ExprMacro","qualname":"::expr::ExprMacro","value":"ExprMacro {  }","parent":null,"children":[{"krate":0,"index":3979}],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3982},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":145337,"byte_end":145347,"line_start":460,"line_end":460,"column_start":20,"column_end":30},"name":"ExprStruct","qualname":"::expr::ExprStruct","value":"ExprStruct {  }","parent":null,"children":[{"krate":0,"index":3983}],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3986},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":145818,"byte_end":145828,"line_start":472,"line_end":472,"column_start":20,"column_end":30},"name":"ExprRepeat","qualname":"::expr::ExprRepeat","value":"ExprRepeat {  }","parent":null,"children":[{"krate":0,"index":3987}],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146201,"byte_end":146210,"line_start":483,"line_end":483,"column_start":19,"column_end":28},"name":"ExprParen","qualname":"::expr::ExprParen","value":"ExprParen { attrs, paren_token, expr }","parent":null,"children":[{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993}],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3991},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146229,"byte_end":146234,"line_start":484,"line_end":484,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprParen::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3992},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146268,"byte_end":146279,"line_start":485,"line_end":485,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3993},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146311,"byte_end":146315,"line_start":486,"line_end":486,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprParen::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":3990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":146709,"byte_end":146718,"line_start":496,"line_end":496,"column_start":19,"column_end":28},"name":"ExprGroup","qualname":"::expr::ExprGroup","value":"ExprGroup {  }","parent":null,"children":[{"krate":0,"index":3997}],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4000},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147002,"byte_end":147009,"line_start":505,"line_end":505,"column_start":17,"column_end":24},"name":"ExprTry","qualname":"::expr::ExprTry","value":"ExprTry {  }","parent":null,"children":[{"krate":0,"index":4001}],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4004},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147308,"byte_end":147317,"line_start":514,"line_end":514,"column_start":19,"column_end":28},"name":"ExprCatch","qualname":"::expr::ExprCatch","value":"ExprCatch {  }","parent":null,"children":[{"krate":0,"index":4005}],"decl_id":null,"docs":" A catch expression: `do catch { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":147646,"byte_end":147655,"line_start":524,"line_end":524,"column_start":19,"column_end":28},"name":"ExprYield","qualname":"::expr::ExprYield","value":"ExprYield {  }","parent":null,"children":[{"krate":0,"index":4009}],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/macros.rs","byte_start":64576,"byte_end":64605,"line_start":21,"line_end":21,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":148006,"byte_end":148018,"line_start":534,"line_end":534,"column_start":22,"column_end":34},"name":"ExprVerbatim","qualname":"::expr::ExprVerbatim","value":"ExprVerbatim { tts }","parent":null,"children":[{"krate":0,"index":4013}],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":148058,"byte_end":148061,"line_start":535,"line_end":535,"column_start":17,"column_end":20},"name":"tts","qualname":"::expr::ExprVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4019},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151486,"byte_end":151491,"line_start":621,"line_end":621,"column_start":9,"column_end":14},"name":"Named","qualname":"::expr::Member::Named","value":"Member::Named(Ident)","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":" A named field like `self.x`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151552,"byte_end":151559,"line_start":623,"line_end":623,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::expr::Member::Unnamed","value":"Member::Unnamed(Index)","parent":{"krate":0,"index":4018},"children":[],"decl_id":null,"docs":" An unnamed field like `self.0`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151428,"byte_end":151434,"line_start":619,"line_end":619,"column_start":14,"column_end":20},"name":"Member","qualname":"::expr::Member","value":"pub enum Member {\n\n    #[doc = r\" A named field like `self.x`.\"]\n    Named(Ident),\n\n    #[doc = r\" An unnamed field like `self.0`.\"]\n    Unnamed(Index),\n}","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4022}],"decl_id":null,"docs":" A struct or tuple struct field accessed in a struct literal or field\n expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151764,"byte_end":151769,"line_start":632,"line_end":632,"column_start":16,"column_end":21},"name":"Index","qualname":"::expr::Index","value":"Index { index, span }","parent":null,"children":[{"krate":0,"index":4028},{"krate":0,"index":4029}],"decl_id":null,"docs":" The index of an unnamed tuple struct field.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151805,"byte_end":151810,"line_start":633,"line_end":633,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::Index::index","value":"u32","parent":{"krate":0,"index":4027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151829,"byte_end":151833,"line_start":634,"line_end":634,"column_start":13,"column_end":17},"name":"span","qualname":"::expr::Index::span","value":"proc_macro2::Span","parent":{"krate":0,"index":4027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":242943,"byte_end":242951,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lt_token, params, gt_token, where_clause }","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4058}],"decl_id":null,"docs":" Lifetimes and type parameters attached to a declaration of a function,\n enum, trait, etc.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":242966,"byte_end":242974,"line_start":20,"line_end":20,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::Generics::lt_token","value":"std::option::Option<token::Lt>","parent":{"krate":0,"index":4054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243007,"byte_end":243013,"line_start":21,"line_end":21,"column_start":13,"column_end":19},"name":"params","qualname":"::generics::Generics::params","value":"punctuated::Punctuated<generics::GenericParam, token::Comma>","parent":{"krate":0,"index":4054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243064,"byte_end":243072,"line_start":22,"line_end":22,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::Generics::gt_token","value":"std::option::Option<token::Gt>","parent":{"krate":0,"index":4054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4058},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243105,"byte_end":243117,"line_start":23,"line_end":23,"column_start":13,"column_end":25},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"std::option::Option<generics::WhereClause>","parent":{"krate":0,"index":4054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243767,"byte_end":243771,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::GenericParam::Type","value":"GenericParam::Type(TypeParam)","parent":{"krate":0,"index":4069},"children":[],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4073},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244246,"byte_end":244254,"line_start":57,"line_end":57,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::GenericParam::Lifetime","value":"GenericParam::Lifetime(LifetimeDef)","parent":{"krate":0,"index":4069},"children":[],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244654,"byte_end":244659,"line_start":68,"line_end":68,"column_start":13,"column_end":18},"name":"Const","qualname":"::generics::GenericParam::Const","value":"GenericParam::Const(ConstParam)","parent":{"krate":0,"index":4069},"children":[],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243565,"byte_end":243577,"line_start":39,"line_end":39,"column_start":14,"column_end":26},"name":"GenericParam","qualname":"::generics::GenericParam","value":"pub enum GenericParam {\n\n    #[doc = r\" A generic type parameter: `T: Into<String>`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Type(TypeParam),\n\n    #[doc = r\" A lifetime definition: `'a: 'b + 'c + 'd`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lifetime(LifetimeDef),\n\n    #[doc = r\" A const generic parameter: `const LENGTH: usize`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Const(ConstParam),\n}","parent":null,"children":[{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4076}],"decl_id":null,"docs":" A generic type parameter, lifetime, or const generic: `T: Into<String>`,\n `'a: 'b`, `const LEN: usize`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4081},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243772,"byte_end":243781,"line_start":44,"line_end":44,"column_start":18,"column_end":27},"name":"TypeParam","qualname":"::generics::TypeParam","value":"TypeParam { attrs, ident, colon_token, bounds, eq_token, default }","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4086},{"krate":0,"index":4087}],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4082},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243800,"byte_end":243805,"line_start":45,"line_end":45,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::TypeParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4083},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243839,"byte_end":243844,"line_start":46,"line_end":46,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::TypeParam::ident","value":"ident::Ident","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243869,"byte_end":243880,"line_start":47,"line_end":47,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::TypeParam::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4085},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243917,"byte_end":243923,"line_start":48,"line_end":48,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::TypeParam::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":243980,"byte_end":243988,"line_start":49,"line_end":49,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::TypeParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4087},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244025,"byte_end":244032,"line_start":50,"line_end":50,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::TypeParam::default","value":"std::option::Option<ty::Type>","parent":{"krate":0,"index":4081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4090},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244255,"byte_end":244266,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094}],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4091},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244285,"byte_end":244290,"line_start":58,"line_end":58,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4092},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244324,"byte_end":244332,"line_start":59,"line_end":59,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4093},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244360,"byte_end":244371,"line_start":60,"line_end":60,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::LifetimeDef::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4094},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244408,"byte_end":244414,"line_start":61,"line_end":61,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244660,"byte_end":244670,"line_start":68,"line_end":68,"column_start":19,"column_end":29},"name":"ConstParam","qualname":"::generics::ConstParam","value":"ConstParam { attrs, const_token, ident, colon_token, ty, eq_token, default }","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104}],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244689,"byte_end":244694,"line_start":69,"line_end":69,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::ConstParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4099},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244728,"byte_end":244739,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"name":"const_token","qualname":"::generics::ConstParam::const_token","value":"token::Const","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244772,"byte_end":244777,"line_start":71,"line_end":71,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::ConstParam::ident","value":"ident::Ident","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4101},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244802,"byte_end":244813,"line_start":72,"line_end":72,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::ConstParam::colon_token","value":"token::Colon","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4102},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244842,"byte_end":244844,"line_start":73,"line_end":73,"column_start":17,"column_end":19},"name":"ty","qualname":"::generics::ConstParam::ty","value":"ty::Type","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4103},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244868,"byte_end":244876,"line_start":74,"line_end":74,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::ConstParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244913,"byte_end":244920,"line_start":75,"line_end":75,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::ConstParam::default","value":"std::option::Option<expr::Expr>","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245304,"byte_end":245315,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Generics>::type_params","value":"pub fn type_params(&Self) -> TypeParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244977,"byte_end":244991,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244996,"byte_end":245005,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245010,"byte_end":245074,"line_start":83,"line_end":83,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245079,"byte_end":245119,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245124,"byte_end":245195,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245200,"byte_end":245241,"line_start":86,"line_end":86,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245246,"byte_end":245292,"line_start":87,"line_end":87,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245720,"byte_end":245735,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"type_params_mut","qualname":"<Generics>::type_params_mut","value":"pub fn type_params_mut(&mut Self) -> TypeParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245389,"byte_end":245403,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245408,"byte_end":245417,"line_start":93,"line_end":93,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245422,"byte_end":245490,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245495,"byte_end":245535,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245540,"byte_end":245611,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245616,"byte_end":245657,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245662,"byte_end":245708,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246158,"byte_end":246167,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"lifetimes","qualname":"<Generics>::lifetimes","value":"pub fn lifetimes(&Self) -> Lifetimes","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245823,"byte_end":245837,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245842,"byte_end":245851,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245856,"byte_end":245920,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245925,"byte_end":245967,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":245972,"byte_end":246045,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246050,"byte_end":246091,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246096,"byte_end":246146,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246578,"byte_end":246591,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"lifetimes_mut","qualname":"<Generics>::lifetimes_mut","value":"pub fn lifetimes_mut(&mut Self) -> LifetimesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246239,"byte_end":246253,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246258,"byte_end":246267,"line_start":115,"line_end":115,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246272,"byte_end":246340,"line_start":116,"line_end":116,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246345,"byte_end":246387,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246392,"byte_end":246465,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246470,"byte_end":246511,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246516,"byte_end":246566,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247010,"byte_end":247022,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"const_params","qualname":"<Generics>::const_params","value":"pub fn const_params(&Self) -> ConstParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246677,"byte_end":246691,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246696,"byte_end":246705,"line_start":126,"line_end":126,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246710,"byte_end":246774,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246779,"byte_end":246820,"line_start":128,"line_end":128,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246825,"byte_end":246897,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246902,"byte_end":246943,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":246948,"byte_end":246998,"line_start":131,"line_end":131,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247435,"byte_end":247451,"line_start":143,"line_end":143,"column_start":12,"column_end":28},"name":"const_params_mut","qualname":"<Generics>::const_params_mut","value":"pub fn const_params_mut(&mut Self) -> ConstParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247098,"byte_end":247112,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247117,"byte_end":247126,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247131,"byte_end":247199,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247204,"byte_end":247245,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247250,"byte_end":247322,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247327,"byte_end":247368,"line_start":141,"line_end":141,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247373,"byte_end":247423,"line_start":142,"line_end":142,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247629,"byte_end":247646,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"make_where_clause","qualname":"<Generics>::make_where_clause","value":"pub fn make_where_clause(&mut Self) -> &mut WhereClause","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty `where`-clause if there is not one present already.\n","sig":null,"attributes":[{"value":"/ Initializes an empty `where`-clause if there is not one present already.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":247541,"byte_end":247617,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248110,"byte_end":248120,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"TypeParams","qualname":"::generics::TypeParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":350},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248603,"byte_end":248616,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"TypeParamsMut","qualname":"::generics::TypeParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249113,"byte_end":249122,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"Lifetimes","qualname":"::generics::Lifetimes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249606,"byte_end":249618,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"LifetimesMut","qualname":"::generics::LifetimesMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250116,"byte_end":250127,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"ConstParams","qualname":"::generics::ConstParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250615,"byte_end":250629,"line_start":258,"line_end":258,"column_start":12,"column_end":26},"name":"ConstParamsMut","qualname":"::generics::ConstParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4109},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251453,"byte_end":251465,"line_start":284,"line_end":284,"column_start":12,"column_end":24},"name":"ImplGenerics","qualname":"::generics::ImplGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251120,"byte_end":251163,"line_start":277,"line_end":277,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251164,"byte_end":251167,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251168,"byte_end":251243,"line_start":279,"line_end":279,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251244,"byte_end":251286,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251287,"byte_end":251315,"line_start":281,"line_end":281,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4116},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251819,"byte_end":251831,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"TypeGenerics","qualname":"::generics::TypeGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251486,"byte_end":251529,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251530,"byte_end":251533,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251534,"byte_end":251609,"line_start":288,"line_end":288,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251610,"byte_end":251652,"line_start":289,"line_end":289,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251653,"byte_end":251681,"line_start":290,"line_end":290,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4123},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252187,"byte_end":252196,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"Turbofish","qualname":"::generics::Turbofish","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `TypeGenerics::as_turbofish`.","sig":null,"attributes":[{"value":"/ Returned by `TypeGenerics::as_turbofish`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251852,"byte_end":251897,"line_start":295,"line_end":295,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251898,"byte_end":251901,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251902,"byte_end":251977,"line_start":297,"line_end":297,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":251978,"byte_end":252020,"line_start":298,"line_end":298,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252021,"byte_end":252049,"line_start":299,"line_end":299,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253006,"byte_end":253020,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"split_for_impl","qualname":"<Generics>::split_for_impl","value":"pub fn split_for_impl(&Self)\n-> (ImplGenerics, TypeGenerics, Option<&WhereClause>)","parent":null,"children":[],"decl_id":null,"docs":" Split a type's generics into the pieces required for impl'ing a trait\n for that type.","sig":null,"attributes":[{"value":"/ Split a type's generics into the pieces required for impl'ing a trait","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252266,"byte_end":252339,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ for that type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252344,"byte_end":252362,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252367,"byte_end":252370,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252375,"byte_end":252382,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252387,"byte_end":252410,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/ # #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252415,"byte_end":252433,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ # extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252438,"byte_end":252463,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252468,"byte_end":252485,"line_start":313,"line_end":313,"column_start":5,"column_end":22}},{"value":"/ # let generics: syn::Generics = Default::default();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252490,"byte_end":252545,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/ # let name = syn::Ident::from(\"MyType\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252550,"byte_end":252594,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/ let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252599,"byte_end":252678,"line_start":316,"line_end":316,"column_start":5,"column_end":84}},{"value":"/ quote! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252683,"byte_end":252695,"line_start":317,"line_end":317,"column_start":5,"column_end":17}},{"value":"/     impl #impl_generics MyTrait for #name #ty_generics #where_clause {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252700,"byte_end":252774,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/         // ...","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252779,"byte_end":252797,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252802,"byte_end":252811,"line_start":320,"line_end":320,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252816,"byte_end":252821,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252826,"byte_end":252833,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252838,"byte_end":252845,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252850,"byte_end":252857,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252862,"byte_end":252865,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with the `\"derive\"` or","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252870,"byte_end":252938,"line_start":326,"line_end":326,"column_start":5,"column_end":73}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252943,"byte_end":252994,"line_start":327,"line_end":327,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253501,"byte_end":253513,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"as_turbofish","qualname":"<TypeGenerics>::as_turbofish","value":"pub fn as_turbofish(&Self) -> Turbofish","parent":null,"children":[],"decl_id":null,"docs":" Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","sig":null,"attributes":[{"value":"/ Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253278,"byte_end":253352,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253357,"byte_end":253360,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with the `\"derive\"` or","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253365,"byte_end":253433,"line_start":341,"line_end":341,"column_start":5,"column_end":73}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253438,"byte_end":253489,"line_start":342,"line_end":342,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4130},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253782,"byte_end":253796,"line_start":354,"line_end":354,"column_start":16,"column_end":30},"name":"BoundLifetimes","qualname":"::generics::BoundLifetimes","value":"BoundLifetimes { for_token, lt_token, lifetimes, gt_token }","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134}],"decl_id":null,"docs":" A set of bound lifetimes: `for<'a, 'b, 'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253811,"byte_end":253820,"line_start":355,"line_end":355,"column_start":13,"column_end":22},"name":"for_token","qualname":"::generics::BoundLifetimes::for_token","value":"token::For","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253847,"byte_end":253855,"line_start":356,"line_end":356,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::BoundLifetimes::lt_token","value":"token::Lt","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253880,"byte_end":253889,"line_start":357,"line_end":357,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::BoundLifetimes::lifetimes","value":"punctuated::Punctuated<generics::LifetimeDef, token::Comma>","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253939,"byte_end":253947,"line_start":358,"line_end":358,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::BoundLifetimes::gt_token","value":"token::Gt","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253999,"byte_end":254002,"line_start":363,"line_end":363,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"pub fn new(Lifetime) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4144},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254729,"byte_end":254734,"line_start":392,"line_end":392,"column_start":13,"column_end":18},"name":"Trait","qualname":"::generics::TypeParamBound::Trait","value":"TypeParamBound::Trait(TraitBound)","parent":{"krate":0,"index":4143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4147},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254760,"byte_end":254768,"line_start":393,"line_end":393,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::TypeParamBound::Lifetime","value":"TypeParamBound::Lifetime(Lifetime)","parent":{"krate":0,"index":4143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254700,"byte_end":254714,"line_start":391,"line_end":391,"column_start":14,"column_end":28},"name":"TypeParamBound","qualname":"::generics::TypeParamBound","value":"pub enum TypeParamBound { Trait(TraitBound), Lifetime(Lifetime), }","parent":null,"children":[{"krate":0,"index":4144},{"krate":0,"index":4147}],"decl_id":null,"docs":" A trait or lifetime used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254977,"byte_end":254987,"line_start":402,"line_end":402,"column_start":16,"column_end":26},"name":"TraitBound","qualname":"::generics::TraitBound","value":"TraitBound { paren_token, modifier, lifetimes, path }","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4156},{"krate":0,"index":4157},{"krate":0,"index":4158}],"decl_id":null,"docs":" A trait used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4155},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255002,"byte_end":255013,"line_start":403,"line_end":403,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::generics::TraitBound::paren_token","value":"std::option::Option<token::Paren>","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255049,"byte_end":255057,"line_start":404,"line_end":404,"column_start":13,"column_end":21},"name":"modifier","qualname":"::generics::TraitBound::modifier","value":"generics::TraitBoundModifier","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255141,"byte_end":255150,"line_start":406,"line_end":406,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::TraitBound::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":" The `for<'a>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `for<'a>` in `for<'a> Foo<&'a T>`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255087,"byte_end":255128,"line_start":405,"line_end":405,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255241,"byte_end":255245,"line_start":408,"line_end":408,"column_start":13,"column_end":17},"name":"path","qualname":"::generics::TraitBound::path","value":"path::Path","parent":{"krate":0,"index":4154},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `Foo<&'a T>` in `for<'a> Foo<&'a T>`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255184,"byte_end":255228,"line_start":407,"line_end":407,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255567,"byte_end":255571,"line_start":420,"line_end":420,"column_start":9,"column_end":13},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":4161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255581,"byte_end":255586,"line_start":421,"line_end":421,"column_start":9,"column_end":14},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe(crate::token::Question)","parent":{"krate":0,"index":4161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4161},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255538,"byte_end":255556,"line_start":419,"line_end":419,"column_start":14,"column_end":32},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"pub enum TraitBoundModifier { None, Maybe(crate::token::Question), }","parent":null,"children":[{"krate":0,"index":4162},{"krate":0,"index":4164}],"decl_id":null,"docs":" A modifier on a trait bound, currently only used for the `?` in\n `?Sized`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4170},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255834,"byte_end":255845,"line_start":431,"line_end":431,"column_start":16,"column_end":27},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { where_token, predicates }","parent":null,"children":[{"krate":0,"index":4171},{"krate":0,"index":4172}],"decl_id":null,"docs":" A `where` clause in a definition: `where T: Deserialize<'de>, D:\n 'static`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255860,"byte_end":255871,"line_start":432,"line_end":432,"column_start":13,"column_end":24},"name":"where_token","qualname":"::generics::WhereClause::where_token","value":"token::Where","parent":{"krate":0,"index":4170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":255900,"byte_end":255910,"line_start":433,"line_end":433,"column_start":13,"column_end":23},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"punctuated::Punctuated<generics::WherePredicate, token::Comma>","parent":{"krate":0,"index":4170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256555,"byte_end":256559,"line_start":453,"line_end":453,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::WherePredicate::Type","value":"WherePredicate::Type(PredicateType)","parent":{"krate":0,"index":4181},"children":[],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257131,"byte_end":257139,"line_start":467,"line_end":467,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::WherePredicate::Lifetime","value":"WherePredicate::Lifetime(PredicateLifetime)","parent":{"krate":0,"index":4181},"children":[],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257513,"byte_end":257515,"line_start":477,"line_end":477,"column_start":13,"column_end":15},"name":"Eq","qualname":"::generics::WherePredicate::Eq","value":"WherePredicate::Eq(PredicateEq)","parent":{"krate":0,"index":4181},"children":[],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4181},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256328,"byte_end":256342,"line_start":448,"line_end":448,"column_start":14,"column_end":28},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"pub enum WherePredicate {\n\n    #[doc =\n      r\" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Type(PredicateType),\n\n    #[doc = r\" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lifetime(PredicateLifetime),\n\n    #[doc = r\" An equality predicate in a `where` clause (unsupported).\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Eq(PredicateEq),\n}","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4185},{"krate":0,"index":4188}],"decl_id":null,"docs":" A single predicate in a `where` clause: `T: Deserialize<'de>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256560,"byte_end":256573,"line_start":453,"line_end":453,"column_start":18,"column_end":31},"name":"PredicateType","qualname":"::generics::PredicateType","value":"PredicateType { lifetimes, bounded_ty, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197}],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4194},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256643,"byte_end":256652,"line_start":455,"line_end":455,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::generics::PredicateType::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[{"value":"/ Any lifetimes from a `for` binding","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256588,"byte_end":256626,"line_start":454,"line_end":454,"column_start":13,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4195},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256733,"byte_end":256743,"line_start":457,"line_end":457,"column_start":17,"column_end":27},"name":"bounded_ty","qualname":"::generics::PredicateType::bounded_ty","value":"ty::Type","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[{"value":"/ The type being bounded","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256690,"byte_end":256716,"line_start":456,"line_end":456,"column_start":13,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4196},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256767,"byte_end":256778,"line_start":458,"line_end":458,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateType::colon_token","value":"token::Colon","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4197},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256872,"byte_end":256878,"line_start":460,"line_end":460,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[{"value":"/ Trait and lifetime bounds (`Clone+Send+'static`)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":256803,"byte_end":256855,"line_start":459,"line_end":459,"column_start":13,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257140,"byte_end":257157,"line_start":467,"line_end":467,"column_start":22,"column_end":39},"name":"PredicateLifetime","qualname":"::generics::PredicateLifetime","value":"PredicateLifetime { lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203}],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4201},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257176,"byte_end":257184,"line_start":468,"line_end":468,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::PredicateLifetime::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257212,"byte_end":257223,"line_start":469,"line_end":469,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateLifetime::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257260,"byte_end":257266,"line_start":470,"line_end":470,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateLifetime::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":4200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4206},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257516,"byte_end":257527,"line_start":477,"line_end":477,"column_start":16,"column_end":27},"name":"PredicateEq","qualname":"::generics::PredicateEq","value":"PredicateEq { lhs_ty, eq_token, rhs_ty }","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209}],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257546,"byte_end":257552,"line_start":478,"line_end":478,"column_start":17,"column_end":23},"name":"lhs_ty","qualname":"::generics::PredicateEq::lhs_ty","value":"ty::Type","parent":{"krate":0,"index":4206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257576,"byte_end":257584,"line_start":479,"line_end":479,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::PredicateEq::eq_token","value":"token::Eq","parent":{"krate":0,"index":4206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4209},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257613,"byte_end":257619,"line_start":480,"line_end":480,"column_start":17,"column_end":23},"name":"rhs_ty","qualname":"::generics::PredicateEq::rhs_ty","value":"ty::Type","parent":{"krate":0,"index":4206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278831,"byte_end":278836,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"Ident {  }","parent":null,"children":[{"krate":0,"index":4235}],"decl_id":null,"docs":" A word of Rust code, which may be a keyword or legal variable name.","sig":null,"attributes":[{"value":"/ A word of Rust code, which may be a keyword or legal variable name.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276288,"byte_end":276359,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276360,"byte_end":276363,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An identifier consists of at least one Unicode code point, the first of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276364,"byte_end":276439,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ which has the XID_Start property and the rest of which have the XID_Continue","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276440,"byte_end":276520,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ property. An underscore may be used as the first character as long as it is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276521,"byte_end":276600,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ not the only character.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276601,"byte_end":276628,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276629,"byte_end":276632,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - The empty string is not an identifier. Use `Option<Ident>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276633,"byte_end":276698,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ - An underscore by itself is not an identifier. Use","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276699,"byte_end":276754,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/   `Token![_]` instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276755,"byte_end":276781,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/ - A lifetime is not an identifier. Use `syn::Lifetime` instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276782,"byte_end":276849,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276850,"byte_end":276853,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ An identifier constructed with `Ident::new` is permitted to be a Rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276854,"byte_end":276927,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ keyword, though parsing one through its [`Synom`] implementation rejects","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":276928,"byte_end":277004,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ Rust keywords.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277005,"byte_end":277023,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277024,"byte_end":277027,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Synom`]: synom/trait.Synom.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277028,"byte_end":277065,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277066,"byte_end":277069,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277070,"byte_end":277084,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277085,"byte_end":277088,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A new ident can be created from a string using the `Ident::from` function.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277089,"byte_end":277167,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ Idents produced by `Ident::from` are set to resolve at the procedural macro","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277168,"byte_end":277247,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ *def site* by default. A different span can be provided explicitly by using","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277248,"byte_end":277327,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ `Ident::new`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277328,"byte_end":277345,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277346,"byte_end":277349,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277350,"byte_end":277361,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277362,"byte_end":277383,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ extern crate proc_macro2;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277384,"byte_end":277413,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277414,"byte_end":277417,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ use syn::Ident;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277418,"byte_end":277437,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277438,"byte_end":277464,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277465,"byte_end":277468,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277469,"byte_end":277484,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/     let def_ident = Ident::from(\"definitely\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277485,"byte_end":277535,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     let call_ident = Ident::new(\"calligraphy\", Span::call_site());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277536,"byte_end":277606,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277607,"byte_end":277610,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"{} {}\", def_ident, call_ident);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277611,"byte_end":277660,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277661,"byte_end":277666,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277667,"byte_end":277674,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277675,"byte_end":277678,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An ident can be interpolated into a token stream using the `quote!` macro.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277679,"byte_end":277757,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277758,"byte_end":277761,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277762,"byte_end":277773,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277774,"byte_end":277790,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277791,"byte_end":277814,"line_start":63,"line_end":63,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277815,"byte_end":277818,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277819,"byte_end":277840,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/ use syn::Ident;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277841,"byte_end":277860,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277861,"byte_end":277864,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277865,"byte_end":277880,"line_start":68,"line_end":68,"column_start":1,"column_end":16}},{"value":"/     let ident = Ident::from(\"demo\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277881,"byte_end":277921,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277922,"byte_end":277925,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding whose name is this ident.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277926,"byte_end":277988,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/     let expanded = quote! { let #ident = 10; };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":277989,"byte_end":278040,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278041,"byte_end":278044,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Create a variable binding with a slightly different name.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278045,"byte_end":278113,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/     let temp_ident = Ident::from(format!(\"new_{}\", ident));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278114,"byte_end":278177,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/     let expanded = quote! { let #temp_ident = 10; };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278178,"byte_end":278234,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278235,"byte_end":278240,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278241,"byte_end":278248,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278249,"byte_end":278252,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ A string representation of the ident is available through the `as_ref()` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278253,"byte_end":278333,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ `to_string()` methods.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278334,"byte_end":278360,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278361,"byte_end":278364,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278365,"byte_end":278376,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # use syn::Ident;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278377,"byte_end":278398,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/ # let ident = Ident::from(\"another_identifier\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278399,"byte_end":278451,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278452,"byte_end":278457,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ // Examine the ident as a &str.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278458,"byte_end":278493,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ let ident_str = ident.as_ref();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278494,"byte_end":278529,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ if ident_str.len() > 60 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278530,"byte_end":278559,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/     println!(\"Very long identifier: {}\", ident_str)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278560,"byte_end":278615,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278616,"byte_end":278621,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278622,"byte_end":278625,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Create a String from the ident.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278626,"byte_end":278664,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/ let ident_string = ident.to_string();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278665,"byte_end":278706,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ give_away(ident_string);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278707,"byte_end":278735,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278736,"byte_end":278739,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ fn give_away(s: String) { /* ... */ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278740,"byte_end":278781,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278782,"byte_end":278789,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":279069,"byte_end":279072,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"pub fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an ident with the given string representation.","sig":null,"attributes":[{"value":"/ Creates an ident with the given string representation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278875,"byte_end":278933,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278938,"byte_end":278941,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278946,"byte_end":278958,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278963,"byte_end":278966,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Panics if the input string is neither a keyword nor a legal variable","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278971,"byte_end":279043,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ name.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":279048,"byte_end":279057,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280181,"byte_end":280185,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"span","qualname":"<Ident>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280246,"byte_end":280254,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Ident>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284727,"byte_end":284735,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"Lifetime {  }","parent":null,"children":[{"krate":0,"index":4242}],"decl_id":null,"docs":" A Rust lifetime: `'a`.","sig":null,"attributes":[{"value":"/ A Rust lifetime: `'a`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284162,"byte_end":284188,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284189,"byte_end":284192,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Lifetime names must conform to the following rules:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284193,"byte_end":284248,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284249,"byte_end":284252,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - Must start with an apostrophe.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284253,"byte_end":284289,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ - Must not consist of just an apostrophe: `'`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284290,"byte_end":284340,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ - Character after the apostrophe must be `_` or a Unicode code point with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284341,"byte_end":284418,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/   the XID_Start property.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284419,"byte_end":284448,"line_start":23,"line_end":23,"column_start":1,"column_end":30}},{"value":"/ - All following characters must be Unicode code points with the XID_Continue","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284449,"byte_end":284529,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   property.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284530,"byte_end":284545,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284546,"byte_end":284549,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284550,"byte_end":284625,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284626,"byte_end":284639,"line_start":28,"line_end":28,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284784,"byte_end":284787,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"pub fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":285706,"byte_end":285710,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"span","qualname":"<Lifetime>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":285771,"byte_end":285779,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"set_span","qualname":"<Lifetime>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":288767,"byte_end":288770,"line_start":42,"line_end":42,"column_start":13,"column_end":16},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(LitStr)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4266},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289017,"byte_end":289024,"line_start":50,"line_end":50,"column_start":13,"column_end":20},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(LitByteStr)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289266,"byte_end":289270,"line_start":58,"line_end":58,"column_start":13,"column_end":17},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(LitByte)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A byte literal: `b'f'`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4272},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289513,"byte_end":289517,"line_start":66,"line_end":66,"column_start":13,"column_end":17},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(LitChar)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A character literal: `'a'`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4275},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289882,"byte_end":289885,"line_start":77,"line_end":77,"column_start":13,"column_end":16},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(LitInt)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4278},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290215,"byte_end":290220,"line_start":87,"line_end":87,"column_start":13,"column_end":18},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(LitFloat)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4281},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290474,"byte_end":290478,"line_start":95,"line_end":95,"column_start":13,"column_end":17},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(LitBool)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A boolean literal: `true` or `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4284},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290841,"byte_end":290849,"line_start":105,"line_end":105,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::lit::Lit::Verbatim","value":"Lit::Verbatim(LitVerbatim)","parent":{"krate":0,"index":4262},"children":[],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":288586,"byte_end":288589,"line_start":37,"line_end":37,"column_start":14,"column_end":17},"name":"Lit","qualname":"::lit::Lit","value":"pub enum Lit {\n\n    #[doc = r#\" A UTF-8 string literal: `\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Str(LitStr),\n\n    #[doc = r#\" A byte string literal: `b\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    ByteStr(LitByteStr),\n\n    #[doc = r\" A byte literal: `b'f'`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Byte(LitByte),\n\n    #[doc = r\" A character literal: `'a'`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Char(LitChar),\n\n    #[doc = r\" An integer literal: `1` or `1u16`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Holds up to 64 bits of data. Use `LitVerbatim` for any larger\"]\n    #[doc = r\" integer literal.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Int(LitInt),\n\n    #[doc = r\" A floating point literal: `1f64` or `1.0e10f64`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Must be finite. May not be infinte or NaN.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Float(LitFloat),\n\n    #[doc = r\" A boolean literal: `true` or `false`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Bool(LitBool),\n\n    #[doc =\n      r\" A raw token literal not interpreted by Syn, possibly because it\"]\n    #[doc = r\" represents an integer larger than 64 bits.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(LitVerbatim),\n}","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4284}],"decl_id":null,"docs":" A Rust literal such as a string or integer or boolean.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4289},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":288771,"byte_end":288777,"line_start":42,"line_end":42,"column_start":17,"column_end":23},"name":"LitStr","qualname":"::lit::LitStr","value":"LitStr {  }","parent":null,"children":[{"krate":0,"index":4290}],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4293},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289025,"byte_end":289035,"line_start":50,"line_end":50,"column_start":21,"column_end":31},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"LitByteStr {  }","parent":null,"children":[{"krate":0,"index":4294}],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4297},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289271,"byte_end":289278,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"name":"LitByte","qualname":"::lit::LitByte","value":"LitByte {  }","parent":null,"children":[{"krate":0,"index":4298}],"decl_id":null,"docs":" A byte literal: `b'f'`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4301},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289518,"byte_end":289525,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"name":"LitChar","qualname":"::lit::LitChar","value":"LitChar {  }","parent":null,"children":[{"krate":0,"index":4302}],"decl_id":null,"docs":" A character literal: `'a'`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4305},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":289886,"byte_end":289892,"line_start":77,"line_end":77,"column_start":17,"column_end":23},"name":"LitInt","qualname":"::lit::LitInt","value":"LitInt {  }","parent":null,"children":[{"krate":0,"index":4306}],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4309},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290221,"byte_end":290229,"line_start":87,"line_end":87,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"LitFloat {  }","parent":null,"children":[{"krate":0,"index":4310}],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4313},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290479,"byte_end":290486,"line_start":95,"line_end":95,"column_start":18,"column_end":25},"name":"LitBool","qualname":"::lit::LitBool","value":"LitBool { value, span }","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315}],"decl_id":null,"docs":" A boolean literal: `true` or `false`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4314},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290526,"byte_end":290531,"line_start":96,"line_end":96,"column_start":17,"column_end":22},"name":"value","qualname":"::lit::LitBool::value","value":"bool","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4315},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290555,"byte_end":290559,"line_start":97,"line_end":97,"column_start":17,"column_end":21},"name":"span","qualname":"::lit::LitBool::span","value":"proc_macro2::Span","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290850,"byte_end":290861,"line_start":105,"line_end":105,"column_start":22,"column_end":33},"name":"LitVerbatim","qualname":"::lit::LitVerbatim","value":"LitVerbatim { token }","parent":null,"children":[{"krate":0,"index":4319}],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290901,"byte_end":290906,"line_start":106,"line_end":106,"column_start":17,"column_end":22},"name":"token","qualname":"::lit::LitVerbatim::token","value":"proc_macro2::Literal","parent":{"krate":0,"index":4318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290963,"byte_end":290966,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<LitStr>::new","value":"pub fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291145,"byte_end":291150,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"value","qualname":"<LitStr>::value","value":"pub fn value(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291434,"byte_end":291439,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitStr>::parse","value":"pub fn parse<T: Synom>(&Self) -> Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a syntax tree node from the content of this string literal.","sig":null,"attributes":[{"value":"/ Parse a syntax tree node from the content of this string literal.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291235,"byte_end":291304,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291309,"byte_end":291312,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ All spans in the syntax tree will point to the span of this `LitStr`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291317,"byte_end":291390,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":291395,"byte_end":291422,"line_start":127,"line_end":127,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292647,"byte_end":292651,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"span","qualname":"<LitStr>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292713,"byte_end":292721,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitStr>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292819,"byte_end":292822,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByteStr>::new","value":"pub fn new(&[u8], Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292996,"byte_end":293001,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByteStr>::value","value":"pub fn value(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293099,"byte_end":293103,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByteStr>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293165,"byte_end":293173,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByteStr>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293268,"byte_end":293271,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByte>::new","value":"pub fn new(u8, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293439,"byte_end":293444,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByte>::value","value":"pub fn value(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293533,"byte_end":293537,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByte>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293599,"byte_end":293607,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByte>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293702,"byte_end":293705,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<LitChar>::new","value":"pub fn new(char, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293873,"byte_end":293878,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"value","qualname":"<LitChar>::value","value":"pub fn value(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293969,"byte_end":293973,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"span","qualname":"<LitChar>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":294035,"byte_end":294043,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitChar>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":294137,"byte_end":294140,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"new","qualname":"<LitInt>::new","value":"pub fn new(u64, IntSuffix, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":295210,"byte_end":295215,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"value","qualname":"<LitInt>::value","value":"pub fn value(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":295313,"byte_end":295319,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitInt>::suffix","value":"pub fn suffix(&Self) -> IntSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296016,"byte_end":296020,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"span","qualname":"<LitInt>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296082,"byte_end":296090,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitInt>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296186,"byte_end":296189,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"new","qualname":"<LitFloat>::new","value":"pub fn new(f64, FloatSuffix, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296573,"byte_end":296578,"line_start":296,"line_end":296,"column_start":12,"column_end":17},"name":"value","qualname":"<LitFloat>::value","value":"pub fn value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296669,"byte_end":296675,"line_start":300,"line_end":300,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitFloat>::suffix","value":"pub fn suffix(&Self) -> FloatSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296967,"byte_end":296971,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"span","qualname":"<LitFloat>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":297033,"byte_end":297041,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitFloat>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":297751,"byte_end":297755,"line_start":344,"line_end":344,"column_start":12,"column_end":16},"name":"span","qualname":"<LitVerbatim>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":297817,"byte_end":297825,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitVerbatim>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298490,"byte_end":298496,"line_start":370,"line_end":370,"column_start":9,"column_end":15},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":4324},"children":[],"decl_id":null,"docs":" An ordinary string like `\"data\"`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298631,"byte_end":298634,"line_start":374,"line_end":374,"column_start":9,"column_end":12},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":4324},"children":[],"decl_id":null,"docs":" A raw string like `r##\"data\"##`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298415,"byte_end":298423,"line_start":368,"line_end":368,"column_start":14,"column_end":22},"name":"StrStyle","qualname":"::lit::StrStyle","value":"pub enum StrStyle {\n\n    #[doc = r#\" An ordinary string like `\"data\"`.\"#]\n    Cooked,\n\n    #[doc = r###\" A raw string like `r##\"data\"##`.\"###]\n    #[doc = r\"\"]\n    #[doc = r\" The unsigned integer is the number of `#` symbols used.\"]\n    Raw(usize),\n}","parent":null,"children":[{"krate":0,"index":4325},{"krate":0,"index":4327}],"decl_id":null,"docs":" The style of a string literal, either plain quoted or a raw string like\n `r##\"data\"##`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4333},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298888,"byte_end":298890,"line_start":384,"line_end":384,"column_start":9,"column_end":11},"name":"I8","qualname":"::lit::IntSuffix::I8","value":"IntSuffix::I8","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298900,"byte_end":298903,"line_start":385,"line_end":385,"column_start":9,"column_end":12},"name":"I16","qualname":"::lit::IntSuffix::I16","value":"IntSuffix::I16","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298913,"byte_end":298916,"line_start":386,"line_end":386,"column_start":9,"column_end":12},"name":"I32","qualname":"::lit::IntSuffix::I32","value":"IntSuffix::I32","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298926,"byte_end":298929,"line_start":387,"line_end":387,"column_start":9,"column_end":12},"name":"I64","qualname":"::lit::IntSuffix::I64","value":"IntSuffix::I64","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298939,"byte_end":298943,"line_start":388,"line_end":388,"column_start":9,"column_end":13},"name":"I128","qualname":"::lit::IntSuffix::I128","value":"IntSuffix::I128","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4343},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298953,"byte_end":298958,"line_start":389,"line_end":389,"column_start":9,"column_end":14},"name":"Isize","qualname":"::lit::IntSuffix::Isize","value":"IntSuffix::Isize","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4345},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298968,"byte_end":298970,"line_start":390,"line_end":390,"column_start":9,"column_end":11},"name":"U8","qualname":"::lit::IntSuffix::U8","value":"IntSuffix::U8","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298980,"byte_end":298983,"line_start":391,"line_end":391,"column_start":9,"column_end":12},"name":"U16","qualname":"::lit::IntSuffix::U16","value":"IntSuffix::U16","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298993,"byte_end":298996,"line_start":392,"line_end":392,"column_start":9,"column_end":12},"name":"U32","qualname":"::lit::IntSuffix::U32","value":"IntSuffix::U32","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299006,"byte_end":299009,"line_start":393,"line_end":393,"column_start":9,"column_end":12},"name":"U64","qualname":"::lit::IntSuffix::U64","value":"IntSuffix::U64","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4353},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299019,"byte_end":299023,"line_start":394,"line_end":394,"column_start":9,"column_end":13},"name":"U128","qualname":"::lit::IntSuffix::U128","value":"IntSuffix::U128","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4355},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299033,"byte_end":299038,"line_start":395,"line_end":395,"column_start":9,"column_end":14},"name":"Usize","qualname":"::lit::IntSuffix::Usize","value":"IntSuffix::Usize","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299048,"byte_end":299052,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::IntSuffix::None","value":"IntSuffix::None","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":298858,"byte_end":298867,"line_start":383,"line_end":383,"column_start":14,"column_end":23},"name":"IntSuffix","qualname":"::lit::IntSuffix","value":"pub enum IntSuffix {\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n    Isize,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n    Usize,\n    None,\n}","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4335},{"krate":0,"index":4337},{"krate":0,"index":4339},{"krate":0,"index":4341},{"krate":0,"index":4343},{"krate":0,"index":4345},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4357}],"decl_id":null,"docs":" The suffix on an integer literal if any, like the `u8` in `127u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299317,"byte_end":299320,"line_start":407,"line_end":407,"column_start":9,"column_end":12},"name":"F32","qualname":"::lit::FloatSuffix::F32","value":"FloatSuffix::F32","parent":{"krate":0,"index":4361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299330,"byte_end":299333,"line_start":408,"line_end":408,"column_start":9,"column_end":12},"name":"F64","qualname":"::lit::FloatSuffix::F64","value":"FloatSuffix::F64","parent":{"krate":0,"index":4361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299343,"byte_end":299347,"line_start":409,"line_end":409,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::FloatSuffix::None","value":"FloatSuffix::None","parent":{"krate":0,"index":4361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299285,"byte_end":299296,"line_start":406,"line_end":406,"column_start":14,"column_end":25},"name":"FloatSuffix","qualname":"::lit::FloatSuffix","value":"pub enum FloatSuffix { F32, F64, None, }","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4366}],"decl_id":null,"docs":" The suffix on a floating point literal if any, like the `f32` in\n `1.0f32`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303691,"byte_end":303694,"line_start":579,"line_end":579,"column_start":16,"column_end":19},"name":"new","qualname":"<Lit>::new","value":"pub fn new(Literal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a Syn literal from a proc-macro2 literal.","sig":null,"attributes":[{"value":"/ Interpret a Syn literal from a proc-macro2 literal.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303247,"byte_end":303302,"line_start":568,"line_end":568,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303311,"byte_end":303314,"line_start":569,"line_end":569,"column_start":9,"column_end":12}},{"value":"/ Not all proc-macro2 literals are valid Syn literals. In particular,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303323,"byte_end":303394,"line_start":570,"line_end":570,"column_start":9,"column_end":80}},{"value":"/ doc comments are considered by proc-macro2 to be literals but in Syn","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303403,"byte_end":303475,"line_start":571,"line_end":571,"column_start":9,"column_end":81}},{"value":"/ they are [`Attribute`].","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303484,"byte_end":303511,"line_start":572,"line_end":572,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303520,"byte_end":303523,"line_start":573,"line_end":573,"column_start":9,"column_end":12}},{"value":"/ [`Attribute`]: struct.Attribute.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303532,"byte_end":303572,"line_start":574,"line_end":574,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303581,"byte_end":303584,"line_start":575,"line_end":575,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303593,"byte_end":303605,"line_start":576,"line_end":576,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303614,"byte_end":303617,"line_start":577,"line_end":577,"column_start":9,"column_end":12}},{"value":"/ Panics if the input is a doc comment literal.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303626,"byte_end":303675,"line_start":578,"line_end":578,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4391},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319390,"byte_end":319395,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Macro","qualname":"::mac::Macro","value":"Macro { path, bang_token, delimiter, tts }","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395}],"decl_id":null,"docs":" A macro invocation: `println!(\"{}\", mac)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4392},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319431,"byte_end":319435,"line_start":24,"line_end":24,"column_start":13,"column_end":17},"name":"path","qualname":"::mac::Macro::path","value":"path::Path","parent":{"krate":0,"index":4391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4393},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319455,"byte_end":319465,"line_start":25,"line_end":25,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::mac::Macro::bang_token","value":"token::Bang","parent":{"krate":0,"index":4391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4394},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319490,"byte_end":319499,"line_start":26,"line_end":26,"column_start":13,"column_end":22},"name":"delimiter","qualname":"::mac::Macro::delimiter","value":"mac::MacroDelimiter","parent":{"krate":0,"index":4391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319529,"byte_end":319532,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"name":"tts","qualname":"::mac::Macro::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319803,"byte_end":319808,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"Paren","qualname":"::mac::MacroDelimiter::Paren","value":"MacroDelimiter::Paren(Paren)","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4402},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319825,"byte_end":319830,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"Brace","qualname":"::mac::MacroDelimiter::Brace","value":"MacroDelimiter::Brace(Brace)","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4405},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319847,"byte_end":319854,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::mac::MacroDelimiter::Bracket","value":"MacroDelimiter::Bracket(Bracket)","parent":{"krate":0,"index":4398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":319778,"byte_end":319792,"line_start":36,"line_end":36,"column_start":14,"column_end":28},"name":"MacroDelimiter","qualname":"::mac::MacroDelimiter","value":"pub enum MacroDelimiter { Paren(Paren), Brace(Brace), Bracket(Bracket), }","parent":null,"children":[{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4405}],"decl_id":null,"docs":" A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4411},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322442,"byte_end":322453,"line_start":16,"line_end":16,"column_start":16,"column_end":27},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { attrs, vis, ident, generics, data }","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416}],"decl_id":null,"docs":" Data structure sent to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4412},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322527,"byte_end":322532,"line_start":18,"line_end":18,"column_start":13,"column_end":18},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the whole struct or enum.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322464,"byte_end":322514,"line_start":17,"line_end":17,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322609,"byte_end":322612,"line_start":21,"line_end":21,"column_start":13,"column_end":16},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Visibility of the struct or enum.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322559,"byte_end":322596,"line_start":20,"line_end":20,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4414},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322679,"byte_end":322684,"line_start":24,"line_end":24,"column_start":13,"column_end":18},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"ident::Ident","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Name of the struct or enum.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322635,"byte_end":322666,"line_start":23,"line_end":23,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4415},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322764,"byte_end":322772,"line_start":27,"line_end":27,"column_start":13,"column_end":21},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[{"value":"/ Generics required to complete the definition.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322702,"byte_end":322751,"line_start":26,"line_end":26,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4416},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322841,"byte_end":322845,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"name":"data","qualname":"::derive::DeriveInput::data","value":"derive::Data","parent":{"krate":0,"index":4411},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[{"value":"/ Data within the struct or enum.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":322793,"byte_end":322828,"line_start":29,"line_end":29,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4426},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323386,"byte_end":323392,"line_start":49,"line_end":49,"column_start":13,"column_end":19},"name":"Struct","qualname":"::derive::Data::Struct","value":"Data::Struct(DataStruct)","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4429},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323720,"byte_end":323724,"line_start":59,"line_end":59,"column_start":13,"column_end":17},"name":"Enum","qualname":"::derive::Data::Enum","value":"Data::Enum(DataEnum)","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4432},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324075,"byte_end":324080,"line_start":69,"line_end":69,"column_start":13,"column_end":18},"name":"Union","qualname":"::derive::Data::Union","value":"Data::Union(DataUnion)","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4425},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323202,"byte_end":323206,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"Data","qualname":"::derive::Data","value":"pub enum Data {\n\n    #[doc = r\" A struct input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Struct(DataStruct),\n\n    #[doc = r\" An enum input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Enum(DataEnum),\n\n    #[doc = r\" A tagged union input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Union(DataUnion),\n}","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4429},{"krate":0,"index":4432}],"decl_id":null,"docs":" The storage of a struct, enum or union data structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4437},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323393,"byte_end":323403,"line_start":49,"line_end":49,"column_start":20,"column_end":30},"name":"DataStruct","qualname":"::derive::DataStruct","value":"DataStruct { struct_token, fields, semi_token }","parent":null,"children":[{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440}],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4438},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323422,"byte_end":323434,"line_start":50,"line_end":50,"column_start":17,"column_end":29},"name":"struct_token","qualname":"::derive::DataStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4439},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323468,"byte_end":323474,"line_start":51,"line_end":51,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataStruct::fields","value":"data::Fields","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4440},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323500,"byte_end":323510,"line_start":52,"line_end":52,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::derive::DataStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":4437},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323725,"byte_end":323733,"line_start":59,"line_end":59,"column_start":18,"column_end":26},"name":"DataEnum","qualname":"::derive::DataEnum","value":"DataEnum { enum_token, brace_token, variants }","parent":null,"children":[{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446}],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4444},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323752,"byte_end":323762,"line_start":60,"line_end":60,"column_start":17,"column_end":27},"name":"enum_token","qualname":"::derive::DataEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323794,"byte_end":323805,"line_start":61,"line_end":61,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::derive::DataEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4446},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":323837,"byte_end":323845,"line_start":62,"line_end":62,"column_start":17,"column_end":25},"name":"variants","qualname":"::derive::DataEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":4443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4449},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324081,"byte_end":324090,"line_start":69,"line_end":69,"column_start":19,"column_end":28},"name":"DataUnion","qualname":"::derive::DataUnion","value":"DataUnion { union_token, fields }","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451}],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4450},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324109,"byte_end":324120,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"name":"union_token","qualname":"::derive::DataUnion::union_token","value":"token::Union","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4451},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324153,"byte_end":324159,"line_start":71,"line_end":71,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4461},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329430,"byte_end":329433,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add(crate::token::Add)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4464},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329497,"byte_end":329500,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub(crate::token::Sub)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329567,"byte_end":329570,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul(crate::token::Star)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4470},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329631,"byte_end":329634,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div(crate::token::Div)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329694,"byte_end":329697,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem(crate::token::Rem)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4476},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329762,"byte_end":329765,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And(crate::token::AndAnd)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4479},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329830,"byte_end":329832,"line_start":29,"line_end":29,"column_start":9,"column_end":11},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or(crate::token::OrOr)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329897,"byte_end":329903,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor(crate::token::Caret)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4485},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329967,"byte_end":329973,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd(crate::token::And)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4488},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330036,"byte_end":330041,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr(crate::token::Or)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330105,"byte_end":330108,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl(crate::token::Shl)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330174,"byte_end":330177,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr(crate::token::Shr)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4497},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330240,"byte_end":330242,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq(crate::token::EqEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330305,"byte_end":330307,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt(crate::token::Lt)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330382,"byte_end":330384,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le(crate::token::Le)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330451,"byte_end":330453,"line_start":47,"line_end":47,"column_start":9,"column_end":11},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne(crate::token::Ne)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330532,"byte_end":330534,"line_start":49,"line_end":49,"column_start":9,"column_end":11},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge(crate::token::Ge)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4512},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330600,"byte_end":330602,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt(crate::token::Gt)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330653,"byte_end":330658,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"AddEq","qualname":"::op::BinOp::AddEq","value":"BinOp::AddEq(crate::token::AddEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `+=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330710,"byte_end":330715,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"SubEq","qualname":"::op::BinOp::SubEq","value":"BinOp::SubEq(crate::token::SubEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `-=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4521},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330767,"byte_end":330772,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"MulEq","qualname":"::op::BinOp::MulEq","value":"BinOp::MulEq(crate::token::MulEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `*=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4524},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330824,"byte_end":330829,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"DivEq","qualname":"::op::BinOp::DivEq","value":"BinOp::DivEq(crate::token::DivEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `/=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330881,"byte_end":330886,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"RemEq","qualname":"::op::BinOp::RemEq","value":"BinOp::RemEq(crate::token::RemEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `%=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4530},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330938,"byte_end":330946,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"name":"BitXorEq","qualname":"::op::BinOp::BitXorEq","value":"BinOp::BitXorEq(crate::token::CaretEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `^=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":330998,"byte_end":331006,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"BitAndEq","qualname":"::op::BinOp::BitAndEq","value":"BinOp::BitAndEq(crate::token::AndEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `&=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331058,"byte_end":331065,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"BitOrEq","qualname":"::op::BinOp::BitOrEq","value":"BinOp::BitOrEq(crate::token::OrEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `|=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331118,"byte_end":331123,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"ShlEq","qualname":"::op::BinOp::ShlEq","value":"BinOp::ShlEq(crate::token::ShlEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `<<=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4542},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331177,"byte_end":331182,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"ShrEq","qualname":"::op::BinOp::ShrEq","value":"BinOp::ShrEq(crate::token::ShrEq)","parent":{"krate":0,"index":4460},"children":[],"decl_id":null,"docs":" The `>>=` operator\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":329374,"byte_end":329379,"line_start":15,"line_end":15,"column_start":14,"column_end":19},"name":"BinOp","qualname":"::op::BinOp","value":"pub enum BinOp {\n\n    #[doc = r\" The `+` operator (addition)\"]\n    Add(crate::token::Add),\n\n    #[doc = r\" The `-` operator (subtraction)\"]\n    Sub(crate::token::Sub),\n\n    #[doc = r\" The `*` operator (multiplication)\"]\n    Mul(crate::token::Star),\n\n    #[doc = r\" The `/` operator (division)\"]\n    Div(crate::token::Div),\n\n    #[doc = r\" The `%` operator (modulus)\"]\n    Rem(crate::token::Rem),\n\n    #[doc = r\" The `&&` operator (logical and)\"]\n    And(crate::token::AndAnd),\n\n    #[doc = r\" The `||` operator (logical or)\"]\n    Or(crate::token::OrOr),\n\n    #[doc = r\" The `^` operator (bitwise xor)\"]\n    BitXor(crate::token::Caret),\n\n    #[doc = r\" The `&` operator (bitwise and)\"]\n    BitAnd(crate::token::And),\n\n    #[doc = r\" The `|` operator (bitwise or)\"]\n    BitOr(crate::token::Or),\n\n    #[doc = r\" The `<<` operator (shift left)\"]\n    Shl(crate::token::Shl),\n\n    #[doc = r\" The `>>` operator (shift right)\"]\n    Shr(crate::token::Shr),\n\n    #[doc = r\" The `==` operator (equality)\"]\n    Eq(crate::token::EqEq),\n\n    #[doc = r\" The `<` operator (less than)\"]\n    Lt(crate::token::Lt),\n\n    #[doc = r\" The `<=` operator (less than or equal to)\"]\n    Le(crate::token::Le),\n\n    #[doc = r\" The `!=` operator (not equal to)\"]\n    Ne(crate::token::Ne),\n\n    #[doc = r\" The `>=` operator (greater than or equal to)\"]\n    Ge(crate::token::Ge),\n\n    #[doc = r\" The `>` operator (greater than)\"]\n    Gt(crate::token::Gt),\n\n    #[doc = r\" The `+=` operator\"]\n    AddEq(crate::token::AddEq),\n\n    #[doc = r\" The `-=` operator\"]\n    SubEq(crate::token::SubEq),\n\n    #[doc = r\" The `*=` operator\"]\n    MulEq(crate::token::MulEq),\n\n    #[doc = r\" The `/=` operator\"]\n    DivEq(crate::token::DivEq),\n\n    #[doc = r\" The `%=` operator\"]\n    RemEq(crate::token::RemEq),\n\n    #[doc = r\" The `^=` operator\"]\n    BitXorEq(crate::token::CaretEq),\n\n    #[doc = r\" The `&=` operator\"]\n    BitAndEq(crate::token::AndEq),\n\n    #[doc = r\" The `|=` operator\"]\n    BitOrEq(crate::token::OrEq),\n\n    #[doc = r\" The `<<=` operator\"]\n    ShlEq(crate::token::ShlEq),\n\n    #[doc = r\" The `>>=` operator\"]\n    ShrEq(crate::token::ShrEq),\n}","parent":null,"children":[{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4494},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4506},{"krate":0,"index":4509},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4521},{"krate":0,"index":4524},{"krate":0,"index":4527},{"krate":0,"index":4530},{"krate":0,"index":4533},{"krate":0,"index":4536},{"krate":0,"index":4539},{"krate":0,"index":4542}],"decl_id":null,"docs":" A binary operator: `+`, `+=`, `&`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331495,"byte_end":331500,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref(crate::token::Star)","parent":{"krate":0,"index":4548},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331572,"byte_end":331575,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not(crate::token::Bang)","parent":{"krate":0,"index":4548},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331638,"byte_end":331641,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg(crate::token::Sub)","parent":{"krate":0,"index":4548},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331433,"byte_end":331437,"line_start":81,"line_end":81,"column_start":14,"column_end":18},"name":"UnOp","qualname":"::op::UnOp","value":"pub enum UnOp {\n\n    #[doc = r\" The `*` operator for dereferencing\"]\n    Deref(crate::token::Star),\n\n    #[doc = r\" The `!` operator for logical inversion\"]\n    Not(crate::token::Bang),\n\n    #[doc = r\" The `-` operator for negation\"]\n    Neg(crate::token::Sub),\n}","parent":null,"children":[{"krate":0,"index":4549},{"krate":0,"index":4552},{"krate":0,"index":4555}],"decl_id":null,"docs":" A unary operator: `*`, `!`, `-`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331786,"byte_end":331797,"line_start":97,"line_end":97,"column_start":20,"column_end":31},"name":"parse_binop","qualname":"<BinOp>::parse_binop","value":"pub fn parse_binop(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337083,"byte_end":337088,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"name":"Slice","qualname":"::ty::Type::Slice","value":"Type::Slice(TypeSlice)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4597},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337371,"byte_end":337376,"line_start":42,"line_end":42,"column_start":13,"column_end":18},"name":"Array","qualname":"::ty::Type::Array","value":"Type::Array(TypeArray)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4600},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337734,"byte_end":337737,"line_start":53,"line_end":53,"column_start":13,"column_end":16},"name":"Ptr","qualname":"::ty::Type::Ptr","value":"Type::Ptr(TypePtr)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4603},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338118,"byte_end":338127,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"name":"Reference","qualname":"::ty::Type::Reference","value":"Type::Reference(TypeReference)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4606},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338506,"byte_end":338512,"line_start":75,"line_end":75,"column_start":13,"column_end":19},"name":"BareFn","qualname":"::ty::Type::BareFn","value":"Type::BareFn(TypeBareFn)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339059,"byte_end":339064,"line_start":90,"line_end":90,"column_start":13,"column_end":18},"name":"Never","qualname":"::ty::Type::Never","value":"Type::Never(TypeNever)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339306,"byte_end":339311,"line_start":98,"line_end":98,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::ty::Type::Tuple","value":"Type::Tuple(TypeTuple)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4615},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339769,"byte_end":339773,"line_start":110,"line_end":110,"column_start":13,"column_end":17},"name":"Path","qualname":"::ty::Type::Path","value":"Type::Path(TypePath)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4618},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340105,"byte_end":340116,"line_start":120,"line_end":120,"column_start":13,"column_end":24},"name":"TraitObject","qualname":"::ty::Type::TraitObject","value":"Type::TraitObject(TypeTraitObject)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340493,"byte_end":340502,"line_start":130,"line_end":130,"column_start":13,"column_end":22},"name":"ImplTrait","qualname":"::ty::Type::ImplTrait","value":"Type::ImplTrait(TypeImplTrait)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4624},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340830,"byte_end":340835,"line_start":139,"line_end":139,"column_start":13,"column_end":18},"name":"Paren","qualname":"::ty::Type::Paren","value":"Type::Paren(TypeParen)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341125,"byte_end":341130,"line_start":148,"line_end":148,"column_start":13,"column_end":18},"name":"Group","qualname":"::ty::Type::Group","value":"Type::Group(TypeGroup)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4630},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341438,"byte_end":341443,"line_start":157,"line_end":157,"column_start":13,"column_end":18},"name":"Infer","qualname":"::ty::Type::Infer","value":"Type::Infer(TypeInfer)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341686,"byte_end":341691,"line_start":165,"line_end":165,"column_start":13,"column_end":18},"name":"Macro","qualname":"::ty::Type::Macro","value":"Type::Macro(TypeMacro)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4636},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341935,"byte_end":341943,"line_start":173,"line_end":173,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::ty::Type::Verbatim","value":"Type::Verbatim(TypeVerbatim)","parent":{"krate":0,"index":4593},"children":[],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":336895,"byte_end":336899,"line_start":28,"line_end":28,"column_start":14,"column_end":18},"name":"Type","qualname":"::ty::Type","value":"pub enum Type {\n\n    #[doc = r\" A dynamically sized slice type: `[T]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Slice(TypeSlice),\n\n    #[doc = r\" A fixed size array type: `[T; n]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Array(TypeArray),\n\n    #[doc = r\" A raw pointer type: `*const T` or `*mut T`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Ptr(TypePtr),\n\n    #[doc = r\" A reference type: `&'a T` or `&'a mut T`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Reference(TypeReference),\n\n    #[doc = r\" A bare function type: `fn(usize) -> bool`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    BareFn(TypeBareFn),\n\n    #[doc = r\" The never type: `!`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Never(TypeNever),\n\n    #[doc = r\" A tuple type: `(A, B, C, String)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Tuple(TypeTuple),\n\n    #[doc = r\" A path like `std::slice::Iter`, optionally qualified with a\"]\n    #[doc = r\" self-type as in `<Vec<T> as SomeTrait>::Associated`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Type arguments are stored in the Path itself.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Path(TypePath),\n\n    #[doc =\n      r\" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\"]\n    #[doc = r\" trait or a lifetime.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    TraitObject(TypeTraitObject),\n\n    #[doc =\n      r\" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\"]\n    #[doc = r\" a lifetime.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    ImplTrait(TypeImplTrait),\n\n    #[doc = r\" A parenthesized type equivalent to the inner type.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Paren(TypeParen),\n\n    #[doc = r\" A type contained within invisible delimiters.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Group(TypeGroup),\n\n    #[doc =\n      r\" Indication that a type should be inferred by the compiler: `_`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Infer(TypeInfer),\n\n    #[doc = r\" A macro in the type position.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Macro(TypeMacro),\n\n    #[doc = r\" Tokens in type position not interpreted by Syn.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(TypeVerbatim),\n}","parent":null,"children":[{"krate":0,"index":4594},{"krate":0,"index":4597},{"krate":0,"index":4600},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":4609},{"krate":0,"index":4612},{"krate":0,"index":4615},{"krate":0,"index":4618},{"krate":0,"index":4621},{"krate":0,"index":4624},{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":4633},{"krate":0,"index":4636}],"decl_id":null,"docs":" The possible types that a Rust value could have.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4641},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337089,"byte_end":337098,"line_start":33,"line_end":33,"column_start":19,"column_end":28},"name":"TypeSlice","qualname":"::ty::TypeSlice","value":"TypeSlice { bracket_token, elem }","parent":null,"children":[{"krate":0,"index":4642},{"krate":0,"index":4643}],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4642},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337117,"byte_end":337130,"line_start":34,"line_end":34,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4643},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337164,"byte_end":337168,"line_start":35,"line_end":35,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeSlice::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337377,"byte_end":337386,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"name":"TypeArray","qualname":"::ty::TypeArray","value":"TypeArray { bracket_token, elem, semi_token, len }","parent":null,"children":[{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650}],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4647},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337405,"byte_end":337418,"line_start":43,"line_end":43,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337452,"byte_end":337456,"line_start":44,"line_end":44,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeArray::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4649},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337485,"byte_end":337495,"line_start":45,"line_end":45,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::ty::TypeArray::semi_token","value":"token::Semi","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337524,"byte_end":337527,"line_start":46,"line_end":46,"column_start":17,"column_end":20},"name":"len","qualname":"::ty::TypeArray::len","value":"expr::Expr","parent":{"krate":0,"index":4646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4653},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337738,"byte_end":337745,"line_start":53,"line_end":53,"column_start":17,"column_end":24},"name":"TypePtr","qualname":"::ty::TypePtr","value":"TypePtr { star_token, const_token, mutability, elem }","parent":null,"children":[{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657}],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4654},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337764,"byte_end":337774,"line_start":54,"line_end":54,"column_start":17,"column_end":27},"name":"star_token","qualname":"::ty::TypePtr::star_token","value":"token::Star","parent":{"krate":0,"index":4653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4655},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337803,"byte_end":337814,"line_start":55,"line_end":55,"column_start":17,"column_end":28},"name":"const_token","qualname":"::ty::TypePtr::const_token","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":4653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4656},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337855,"byte_end":337865,"line_start":56,"line_end":56,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypePtr::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4657},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":337904,"byte_end":337908,"line_start":57,"line_end":57,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypePtr::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4660},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338128,"byte_end":338141,"line_start":64,"line_end":64,"column_start":23,"column_end":36},"name":"TypeReference","qualname":"::ty::TypeReference","value":"TypeReference { and_token, lifetime, mutability, elem }","parent":null,"children":[{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664}],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4661},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338160,"byte_end":338169,"line_start":65,"line_end":65,"column_start":17,"column_end":26},"name":"and_token","qualname":"::ty::TypeReference::and_token","value":"token::And","parent":{"krate":0,"index":4660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4662},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338198,"byte_end":338206,"line_start":66,"line_end":66,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::ty::TypeReference::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":4660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338242,"byte_end":338252,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypeReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":4660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4664},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338291,"byte_end":338295,"line_start":68,"line_end":68,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeReference::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4667},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338513,"byte_end":338523,"line_start":75,"line_end":75,"column_start":20,"column_end":30},"name":"TypeBareFn","qualname":"::ty::TypeBareFn","value":"TypeBareFn { unsafety, abi, fn_token, lifetimes, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675}],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4668},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338542,"byte_end":338550,"line_start":76,"line_end":76,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::ty::TypeBareFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338592,"byte_end":338595,"line_start":77,"line_end":77,"column_start":17,"column_end":20},"name":"abi","qualname":"::ty::TypeBareFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4670},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338626,"byte_end":338634,"line_start":78,"line_end":78,"column_start":17,"column_end":25},"name":"fn_token","qualname":"::ty::TypeBareFn::fn_token","value":"token::Fn","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4671},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338664,"byte_end":338673,"line_start":79,"line_end":79,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::ty::TypeBareFn::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338715,"byte_end":338726,"line_start":80,"line_end":80,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeBareFn::paren_token","value":"token::Paren","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338758,"byte_end":338764,"line_start":81,"line_end":81,"column_start":17,"column_end":23},"name":"inputs","qualname":"::ty::TypeBareFn::inputs","value":"punctuated::Punctuated<ty::BareFnArg, token::Comma>","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338816,"byte_end":338824,"line_start":82,"line_end":82,"column_start":17,"column_end":25},"name":"variadic","qualname":"::ty::TypeBareFn::variadic","value":"std::option::Option<token::Dot3>","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4675},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":338863,"byte_end":338869,"line_start":83,"line_end":83,"column_start":17,"column_end":23},"name":"output","qualname":"::ty::TypeBareFn::output","value":"ty::ReturnType","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4678},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339065,"byte_end":339074,"line_start":90,"line_end":90,"column_start":19,"column_end":28},"name":"TypeNever","qualname":"::ty::TypeNever","value":"TypeNever { bang_token }","parent":null,"children":[{"krate":0,"index":4679}],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339093,"byte_end":339103,"line_start":91,"line_end":91,"column_start":17,"column_end":27},"name":"bang_token","qualname":"::ty::TypeNever::bang_token","value":"token::Bang","parent":{"krate":0,"index":4678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339312,"byte_end":339321,"line_start":98,"line_end":98,"column_start":19,"column_end":28},"name":"TypeTuple","qualname":"::ty::TypeTuple","value":"TypeTuple { paren_token, elems }","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684}],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4683},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339340,"byte_end":339351,"line_start":99,"line_end":99,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":4682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339383,"byte_end":339388,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"name":"elems","qualname":"::ty::TypeTuple::elems","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":4682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4687},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339774,"byte_end":339782,"line_start":110,"line_end":110,"column_start":18,"column_end":26},"name":"TypePath","qualname":"::ty::TypePath","value":"TypePath { qself, path }","parent":null,"children":[{"krate":0,"index":4688},{"krate":0,"index":4689}],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4688},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339801,"byte_end":339806,"line_start":111,"line_end":111,"column_start":17,"column_end":22},"name":"qself","qualname":"::ty::TypePath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":4687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4689},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":339839,"byte_end":339843,"line_start":112,"line_end":112,"column_start":17,"column_end":21},"name":"path","qualname":"::ty::TypePath::path","value":"path::Path","parent":{"krate":0,"index":4687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340117,"byte_end":340132,"line_start":120,"line_end":120,"column_start":25,"column_end":40},"name":"TypeTraitObject","qualname":"::ty::TypeTraitObject","value":"TypeTraitObject { dyn_token, bounds }","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694}],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340151,"byte_end":340160,"line_start":121,"line_end":121,"column_start":17,"column_end":26},"name":"dyn_token","qualname":"::ty::TypeTraitObject::dyn_token","value":"std::option::Option<token::Dyn>","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4694},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340199,"byte_end":340205,"line_start":122,"line_end":122,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeTraitObject::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4697},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340503,"byte_end":340516,"line_start":130,"line_end":130,"column_start":23,"column_end":36},"name":"TypeImplTrait","qualname":"::ty::TypeImplTrait","value":"TypeImplTrait { impl_token, bounds }","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699}],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340535,"byte_end":340545,"line_start":131,"line_end":131,"column_start":17,"column_end":27},"name":"impl_token","qualname":"::ty::TypeImplTrait::impl_token","value":"token::Impl","parent":{"krate":0,"index":4697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340577,"byte_end":340583,"line_start":132,"line_end":132,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeImplTrait::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4702},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340836,"byte_end":340845,"line_start":139,"line_end":139,"column_start":19,"column_end":28},"name":"TypeParen","qualname":"::ty::TypeParen","value":"TypeParen { paren_token, elem }","parent":null,"children":[{"krate":0,"index":4703},{"krate":0,"index":4704}],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340864,"byte_end":340875,"line_start":140,"line_end":140,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":4702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":340907,"byte_end":340911,"line_start":141,"line_end":141,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeParen::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4707},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341131,"byte_end":341140,"line_start":148,"line_end":148,"column_start":19,"column_end":28},"name":"TypeGroup","qualname":"::ty::TypeGroup","value":"TypeGroup { group_token, elem }","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709}],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341159,"byte_end":341170,"line_start":149,"line_end":149,"column_start":17,"column_end":28},"name":"group_token","qualname":"::ty::TypeGroup::group_token","value":"token::Group","parent":{"krate":0,"index":4707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4709},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341202,"byte_end":341206,"line_start":150,"line_end":150,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeGroup::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341444,"byte_end":341453,"line_start":157,"line_end":157,"column_start":19,"column_end":28},"name":"TypeInfer","qualname":"::ty::TypeInfer","value":"TypeInfer { underscore_token }","parent":null,"children":[{"krate":0,"index":4713}],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341472,"byte_end":341488,"line_start":158,"line_end":158,"column_start":17,"column_end":33},"name":"underscore_token","qualname":"::ty::TypeInfer::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":4712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4716},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341692,"byte_end":341701,"line_start":165,"line_end":165,"column_start":19,"column_end":28},"name":"TypeMacro","qualname":"::ty::TypeMacro","value":"TypeMacro { mac }","parent":null,"children":[{"krate":0,"index":4717}],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341720,"byte_end":341723,"line_start":166,"line_end":166,"column_start":17,"column_end":20},"name":"mac","qualname":"::ty::TypeMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":4716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341944,"byte_end":341956,"line_start":173,"line_end":173,"column_start":22,"column_end":34},"name":"TypeVerbatim","qualname":"::ty::TypeVerbatim","value":"TypeVerbatim { tts }","parent":null,"children":[{"krate":0,"index":4721}],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":341996,"byte_end":341999,"line_start":174,"line_end":174,"column_start":17,"column_end":20},"name":"tts","qualname":"::ty::TypeVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4720},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":342670,"byte_end":342673,"line_start":204,"line_end":204,"column_start":16,"column_end":19},"name":"Abi","qualname":"::ty::Abi","value":"Abi { extern_token, name }","parent":null,"children":[{"krate":0,"index":4727},{"krate":0,"index":4728}],"decl_id":null,"docs":" The binary interface of a function: `extern \"C\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4727},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":342688,"byte_end":342700,"line_start":205,"line_end":205,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::ty::Abi::extern_token","value":"token::Extern","parent":{"krate":0,"index":4726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":342730,"byte_end":342734,"line_start":206,"line_end":206,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::Abi::name","value":"std::option::Option<lit::LitStr>","parent":{"krate":0,"index":4726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":342972,"byte_end":342981,"line_start":215,"line_end":215,"column_start":16,"column_end":25},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { name, ty }","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4733}],"decl_id":null,"docs":" An argument in a function type: the `usize` in `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":342996,"byte_end":343000,"line_start":216,"line_end":216,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<(ty::BareFnArgName, token::Colon)>","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4733},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343050,"byte_end":343052,"line_start":217,"line_end":217,"column_start":13,"column_end":15},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Type","parent":{"krate":0,"index":4731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4737},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343334,"byte_end":343339,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"name":"Named","qualname":"::ty::BareFnArgName::Named","value":"BareFnArgName::Named(Ident)","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":" Argument given a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343413,"byte_end":343417,"line_start":230,"line_end":230,"column_start":9,"column_end":13},"name":"Wild","qualname":"::ty::BareFnArgName::Wild","value":"BareFnArgName::Wild(crate::token::Underscore)","parent":{"krate":0,"index":4736},"children":[],"decl_id":null,"docs":" Argument not given a name, matched with `_`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4736},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343275,"byte_end":343288,"line_start":226,"line_end":226,"column_start":14,"column_end":27},"name":"BareFnArgName","qualname":"::ty::BareFnArgName","value":"pub enum BareFnArgName {\n\n    #[doc = r\" Argument given a name.\"]\n    Named(Ident),\n\n    #[doc = r\" Argument not given a name, matched with `_`.\"]\n    Wild(crate::token::Underscore),\n}","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4740}],"decl_id":null,"docs":" Name of an argument in a function type: the `n` in `fn(n: usize)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4746},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343768,"byte_end":343775,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"name":"Default","qualname":"::ty::ReturnType::Default","value":"ReturnType::Default","parent":{"krate":0,"index":4745},"children":[],"decl_id":null,"docs":" Return type is not specified.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4748},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343828,"byte_end":343832,"line_start":245,"line_end":245,"column_start":9,"column_end":13},"name":"Type","qualname":"::ty::ReturnType::Type","value":"ReturnType::Type(crate::token::RArrow, Box<Type>)","parent":{"krate":0,"index":4745},"children":[],"decl_id":null,"docs":" A particular type is returned.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4745},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":343615,"byte_end":343625,"line_start":239,"line_end":239,"column_start":14,"column_end":24},"name":"ReturnType","qualname":"::ty::ReturnType","value":"pub enum ReturnType {\n\n    #[doc = r\" Return type is not specified.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Functions default to `()` and closures default to type inference.\"]\n    Default,\n\n    #[doc = r\" A particular type is returned.\"]\n    Type(crate::token::RArrow, Box<Type>),\n}","parent":null,"children":[{"krate":0,"index":4746},{"krate":0,"index":4748}],"decl_id":null,"docs":" Return type of a function signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":344474,"byte_end":344486,"line_start":269,"line_end":269,"column_start":20,"column_end":32},"name":"without_plus","qualname":"<Type>::without_plus","value":"pub fn without_plus(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":351775,"byte_end":351787,"line_start":520,"line_end":520,"column_start":20,"column_end":32},"name":"without_plus","qualname":"<TypeTraitObject>::without_plus","value":"pub fn without_plus(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4794},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":360855,"byte_end":360859,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Path","qualname":"::path::Path","value":"Path { leading_colon, segments }","parent":null,"children":[{"krate":0,"index":4795},{"krate":0,"index":4796}],"decl_id":null,"docs":" A path at which a named item is exported: `std::collections::HashMap`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4795},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":360874,"byte_end":360887,"line_start":18,"line_end":18,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::path::Path::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":4794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4796},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":360921,"byte_end":360929,"line_start":19,"line_end":19,"column_start":13,"column_end":21},"name":"segments","qualname":"::path::Path::segments","value":"punctuated::Punctuated<path::PathSegment, token::Colon2>","parent":{"krate":0,"index":4794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361000,"byte_end":361006,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"global","qualname":"<Path>::global","value":"pub fn global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4799},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361846,"byte_end":361856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"PathTokens","qualname":"::path::PathTokens","value":"","parent":null,"children":[],"decl_id":null,"docs":" A helper for printing a self-type qualified path as tokens.","sig":null,"attributes":[{"value":"/ A helper for printing a self-type qualified path as tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361070,"byte_end":361133,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361134,"byte_end":361137,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361138,"byte_end":361149,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361150,"byte_end":361171,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361172,"byte_end":361195,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361196,"byte_end":361199,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use syn::{QSelf, Path, PathTokens};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361200,"byte_end":361239,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ use quote::{Tokens, ToTokens};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361240,"byte_end":361274,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361275,"byte_end":361278,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ struct MyNode {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361279,"byte_end":361298,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     qself: Option<QSelf>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361299,"byte_end":361328,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/     path: Path,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361329,"byte_end":361348,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361349,"byte_end":361354,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361355,"byte_end":361358,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ impl ToTokens for MyNode {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361359,"byte_end":361389,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361390,"byte_end":361440,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/         PathTokens(&self.qself, &self.path).to_tokens(tokens);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361441,"byte_end":361507,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361508,"byte_end":361517,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361518,"byte_end":361523,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361524,"byte_end":361529,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361530,"byte_end":361548,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361549,"byte_end":361556,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361557,"byte_end":361560,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361561,"byte_end":361636,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361637,"byte_end":361679,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361680,"byte_end":361708,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361861,"byte_end":361882,"line_start":57,"line_end":57,"column_start":27,"column_end":48},"name":"0","qualname":"::path::PathTokens::0","value":"&'a std::option::Option<path::QSelf>","parent":{"krate":0,"index":4799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4803},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361884,"byte_end":361896,"line_start":57,"line_end":57,"column_start":50,"column_end":62},"name":"1","qualname":"::path::PathTokens::1","value":"&'a path::Path","parent":{"krate":0,"index":4799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4807},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":362393,"byte_end":362404,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"name":"PathSegment","qualname":"::path::PathSegment","value":"PathSegment { ident, arguments }","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4809}],"decl_id":null,"docs":" A segment of a path together with any path arguments on that segment.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4808},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":362419,"byte_end":362424,"line_start":79,"line_end":79,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::PathSegment::ident","value":"ident::Ident","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4809},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":362445,"byte_end":362454,"line_start":80,"line_end":80,"column_start":13,"column_end":22},"name":"arguments","qualname":"::path::PathSegment::arguments","value":"path::PathArguments","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363097,"byte_end":363101,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"None","qualname":"::path::PathArguments::None","value":"PathArguments::None","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363167,"byte_end":363181,"line_start":112,"line_end":112,"column_start":9,"column_end":23},"name":"AngleBracketed","qualname":"::path::PathArguments::AngleBracketed","value":"PathArguments::AngleBracketed(AngleBracketedGenericArguments)","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" The `<'a, T>` in `std::slice::iter<'a, T>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4818},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363273,"byte_end":363286,"line_start":114,"line_end":114,"column_start":9,"column_end":22},"name":"Parenthesized","qualname":"::path::PathArguments::Parenthesized","value":"PathArguments::Parenthesized(ParenthesizedGenericArguments)","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":" The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4812},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363073,"byte_end":363086,"line_start":109,"line_end":109,"column_start":14,"column_end":27},"name":"PathArguments","qualname":"::path::PathArguments","value":"pub enum PathArguments {\n    None,\n\n    #[doc = r\" The `<'a, T>` in `std::slice::iter<'a, T>`.\"]\n    AngleBracketed(AngleBracketedGenericArguments),\n\n    #[doc = r\" The `(A, B) -> C` in `Fn(A, B) -> C`.\"]\n    Parenthesized(ParenthesizedGenericArguments),\n}","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4818}],"decl_id":null,"docs":" Angle bracketed or parenthesized arguments of a path segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363457,"byte_end":363465,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathArguments>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4824},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363967,"byte_end":363975,"line_start":141,"line_end":141,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::path::GenericArgument::Lifetime","value":"GenericArgument::Lifetime(Lifetime)","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" A lifetime argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364024,"byte_end":364028,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"name":"Type","qualname":"::path::GenericArgument::Type","value":"GenericArgument::Type(Type)","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4830},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364165,"byte_end":364172,"line_start":146,"line_end":146,"column_start":9,"column_end":16},"name":"Binding","qualname":"::path::GenericArgument::Binding","value":"GenericArgument::Binding(Binding)","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: the `Item =\n u8` in `Iterator<Item = u8>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364393,"byte_end":364398,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"name":"Const","qualname":"::path::GenericArgument::Const","value":"GenericArgument::Const(Expr)","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363908,"byte_end":363923,"line_start":139,"line_end":139,"column_start":14,"column_end":29},"name":"GenericArgument","qualname":"::path::GenericArgument","value":"pub enum GenericArgument {\n\n    #[doc = r\" A lifetime argument.\"]\n    Lifetime(Lifetime),\n\n    #[doc = r\" A type argument.\"]\n    Type(Type),\n\n    #[doc =\n      r\" A binding (equality constraint) on an associated type: the `Item =\"]\n    #[doc = r\" u8` in `Iterator<Item = u8>`.\"]\n    Binding(Binding),\n\n    #[doc = r\" A const expression. Must be inside of a block.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" NOTE: Identity expressions are represented as Type arguments, as\"]\n    #[doc = r\" they are indistinguishable syntactically.\"]\n    Const(Expr),\n}","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4827},{"krate":0,"index":4830},{"krate":0,"index":4833}],"decl_id":null,"docs":" An individual generic argument, like `'a`, `T`, or `Item = T`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364644,"byte_end":364674,"line_start":161,"line_end":161,"column_start":16,"column_end":46},"name":"AngleBracketedGenericArguments","qualname":"::path::AngleBracketedGenericArguments","value":"AngleBracketedGenericArguments { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842}],"decl_id":null,"docs":" Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K,\n V>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4839},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364689,"byte_end":364701,"line_start":162,"line_end":162,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::path::AngleBracketedGenericArguments::colon2_token","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":4838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4840},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364735,"byte_end":364743,"line_start":163,"line_end":163,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::AngleBracketedGenericArguments::lt_token","value":"token::Lt","parent":{"krate":0,"index":4838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4841},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364768,"byte_end":364772,"line_start":164,"line_end":164,"column_start":13,"column_end":17},"name":"args","qualname":"::path::AngleBracketedGenericArguments::args","value":"punctuated::Punctuated<path::GenericArgument, token::Comma>","parent":{"krate":0,"index":4838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4842},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":364826,"byte_end":364834,"line_start":165,"line_end":165,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::AngleBracketedGenericArguments::gt_token","value":"token::Gt","parent":{"krate":0,"index":4838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4845},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365067,"byte_end":365074,"line_start":174,"line_end":174,"column_start":16,"column_end":23},"name":"Binding","qualname":"::path::Binding","value":"Binding { ident, eq_token, ty }","parent":null,"children":[{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848}],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: `Item = u8`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4846},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365089,"byte_end":365094,"line_start":175,"line_end":175,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Binding::ident","value":"ident::Ident","parent":{"krate":0,"index":4845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365115,"byte_end":365123,"line_start":176,"line_end":176,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::path::Binding::eq_token","value":"token::Eq","parent":{"krate":0,"index":4845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4848},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365148,"byte_end":365150,"line_start":177,"line_end":177,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::Binding::ty","value":"ty::Type","parent":{"krate":0,"index":4845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4851},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365393,"byte_end":365422,"line_start":187,"line_end":187,"column_start":16,"column_end":45},"name":"ParenthesizedGenericArguments","qualname":"::path::ParenthesizedGenericArguments","value":"ParenthesizedGenericArguments { paren_token, inputs, output }","parent":null,"children":[{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854}],"decl_id":null,"docs":" Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) ->\n C`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4852},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365437,"byte_end":365448,"line_start":188,"line_end":188,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::path::ParenthesizedGenericArguments::paren_token","value":"token::Paren","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365497,"byte_end":365503,"line_start":190,"line_end":190,"column_start":13,"column_end":19},"name":"inputs","qualname":"::path::ParenthesizedGenericArguments::inputs","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[{"value":"/ `(A, B)`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365472,"byte_end":365484,"line_start":189,"line_end":189,"column_start":9,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4854},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365562,"byte_end":365568,"line_start":192,"line_end":192,"column_start":13,"column_end":19},"name":"output","qualname":"::path::ParenthesizedGenericArguments::output","value":"ty::ReturnType","parent":{"krate":0,"index":4851},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[{"value":"/ `C`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":365542,"byte_end":365549,"line_start":191,"line_end":191,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366275,"byte_end":366280,"line_start":216,"line_end":216,"column_start":16,"column_end":21},"name":"QSelf","qualname":"::path::QSelf","value":"QSelf { lt_token, ty, position, as_token, gt_token }","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862}],"decl_id":null,"docs":" The explicit Self type in a qualified path: the `T` in `<T as\n Display>::fmt`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366295,"byte_end":366303,"line_start":217,"line_end":217,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::QSelf::lt_token","value":"token::Lt","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366328,"byte_end":366330,"line_start":218,"line_end":218,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::QSelf::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4860},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366355,"byte_end":366363,"line_start":219,"line_end":219,"column_start":13,"column_end":21},"name":"position","qualname":"::path::QSelf::position","value":"usize","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4861},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366384,"byte_end":366392,"line_start":220,"line_end":220,"column_start":13,"column_end":21},"name":"as_token","qualname":"::path::QSelf::as_token","value":"std::option::Option<token::As>","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366426,"byte_end":366434,"line_start":221,"line_end":221,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::QSelf::gt_token","value":"token::Gt","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":370050,"byte_end":370065,"line_start":348,"line_end":348,"column_start":20,"column_end":35},"name":"parse_mod_style","qualname":"<Path>::parse_mod_style","value":"pub fn parse_mod_style(crate::buffer::Cursor) -> crate::synom::PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":5445},{"krate":0,"index":986},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":4879},{"krate":0,"index":4898},{"krate":0,"index":4895},{"krate":0,"index":4890},{"krate":0,"index":4892},{"krate":0,"index":4884},{"krate":0,"index":4886},{"krate":0,"index":1011}],"decl_id":null,"docs":" A stably addressed token buffer supporting efficient traversal based on a\n cheaply copyable cursor.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14912,"byte_end":14939,"line_start":381,"line_end":381,"column_start":1,"column_end":28}},{"value":"/ A stably addressed token buffer supporting efficient traversal based on a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378295,"byte_end":378372,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ cheaply copyable cursor.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378373,"byte_end":378401,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378402,"byte_end":378405,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`Synom`] trait is implemented for syntax tree types that can be parsed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378406,"byte_end":378485,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ from one of these token cursors.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378486,"byte_end":378522,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378523,"byte_end":378526,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Synom`]: ../synom/trait.Synom.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378527,"byte_end":378567,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378568,"byte_end":378571,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378572,"byte_end":378648,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378649,"byte_end":378652,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378653,"byte_end":378666,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378667,"byte_end":378670,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This example shows a basic token parser for parsing a token stream without","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378671,"byte_end":378749,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ using Syn's parser combinator macros.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378750,"byte_end":378791,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378792,"byte_end":378795,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378796,"byte_end":378803,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ #![feature(proc_macro)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378804,"byte_end":378831,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378832,"byte_end":378835,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378836,"byte_end":378857,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/ extern crate proc_macro;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378858,"byte_end":378886,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378887,"byte_end":378890,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378891,"byte_end":378907,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378908,"byte_end":378931,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378932,"byte_end":378935,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ use syn::{token, ExprTuple};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378936,"byte_end":378968,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ use syn::buffer::{Cursor, TokenBuffer};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":378969,"byte_end":379012,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/ use syn::spanned::Spanned;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379013,"byte_end":379043,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ use syn::synom::Synom;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379044,"byte_end":379070,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ use proc_macro::{Diagnostic, Span, TokenStream};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379071,"byte_end":379123,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379124,"byte_end":379127,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ /// A basic token parser for parsing a token stream without using Syn's","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379128,"byte_end":379203,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ /// parser combinator macros.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379204,"byte_end":379237,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ pub struct Parser<'a> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379238,"byte_end":379265,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/     cursor: Cursor<'a>,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379266,"byte_end":379293,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379294,"byte_end":379299,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379300,"byte_end":379303,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parser<'a> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379304,"byte_end":379329,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/     pub fn new(cursor: Cursor<'a>) -> Self {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379330,"byte_end":379378,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/         Parser { cursor }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379379,"byte_end":379408,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379409,"byte_end":379418,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379419,"byte_end":379422,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     pub fn current_span(&self) -> Span {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379423,"byte_end":379467,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/         self.cursor.span().unstable()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379468,"byte_end":379509,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379510,"byte_end":379519,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379520,"byte_end":379523,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     pub fn parse<T: Synom>(&mut self) -> Result<T, Diagnostic> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379524,"byte_end":379592,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/         let (val, rest) = T::parse(self.cursor)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379593,"byte_end":379644,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/             .map_err(|e| match T::description() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379645,"byte_end":379698,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/                 Some(desc) => {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379699,"byte_end":379734,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/                     self.current_span().error(format!(\"{}: expected {}\", e, desc))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379735,"byte_end":379821,"line_start":58,"line_end":58,"column_start":1,"column_end":87}},{"value":"/                 }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379822,"byte_end":379843,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/                 None => {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379844,"byte_end":379873,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"/                     self.current_span().error(e.to_string())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379874,"byte_end":379938,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/                 }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379939,"byte_end":379960,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/             })?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379961,"byte_end":379981,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379982,"byte_end":379985,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/         self.cursor = rest;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":379986,"byte_end":380017,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/         Ok(val)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380018,"byte_end":380037,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380038,"byte_end":380047,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380048,"byte_end":380051,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     pub fn expect_eof(&mut self) -> Result<(), Diagnostic> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380052,"byte_end":380116,"line_start":69,"line_end":69,"column_start":1,"column_end":65}},{"value":"/         if !self.cursor.eof() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380117,"byte_end":380152,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/             return Err(self.current_span().error(\"trailing characters; expected eof\"));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380153,"byte_end":380244,"line_start":71,"line_end":71,"column_start":1,"column_end":92}},{"value":"/         }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380245,"byte_end":380258,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380259,"byte_end":380262,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/         Ok(())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380263,"byte_end":380281,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380282,"byte_end":380291,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380292,"byte_end":380297,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380298,"byte_end":380301,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn eval(input: TokenStream) -> Result<TokenStream, Diagnostic> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380302,"byte_end":380370,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     let buffer = TokenBuffer::new(input);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380371,"byte_end":380416,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     let mut parser = Parser::new(buffer.begin());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380417,"byte_end":380470,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380471,"byte_end":380474,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Parse some syntax tree types out of the input tokens. In this case we","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380475,"byte_end":380555,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"/     // expect something like:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380556,"byte_end":380589,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/     //","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380590,"byte_end":380600,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/     //     (a, b, c) = (1, 2, 3)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380601,"byte_end":380637,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/     let a = parser.parse::<ExprTuple>()?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380638,"byte_end":380683,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     parser.parse::<token::Eq>()?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380684,"byte_end":380721,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/     let b = parser.parse::<ExprTuple>()?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380722,"byte_end":380767,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/     parser.expect_eof()?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380768,"byte_end":380797,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380798,"byte_end":380801,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     // Perform some validation and report errors.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380802,"byte_end":380855,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/     let (a_len, b_len) = (a.elems.len(), b.elems.len());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380856,"byte_end":380916,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/     if a_len != b_len {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380917,"byte_end":380944,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/         let diag = b.span().unstable()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380945,"byte_end":380987,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/             .error(format!(\"expected {} element(s), got {}\", a_len, b_len))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":380988,"byte_end":381067,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/             .span_note(a.span().unstable(), \"because of this\");","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381068,"byte_end":381135,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381136,"byte_end":381139,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/         return Err(diag);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381140,"byte_end":381169,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381170,"byte_end":381179,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381180,"byte_end":381183,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     // Build the output tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381184,"byte_end":381219,"line_start":101,"line_end":101,"column_start":1,"column_end":36}},{"value":"/     let out = quote! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381220,"byte_end":381246,"line_start":102,"line_end":102,"column_start":1,"column_end":27}},{"value":"/         println!(\"All good! Received two tuples of size {}\", #a_len);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381247,"byte_end":381320,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/     };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381321,"byte_end":381331,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381332,"byte_end":381335,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     Ok(out.into())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381336,"byte_end":381358,"line_start":106,"line_end":106,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381359,"byte_end":381364,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381365,"byte_end":381370,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # extern crate proc_macro2;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381371,"byte_end":381402,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381403,"byte_end":381408,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ # // This method exists on proc_macro2::Span but is behind the \"nightly\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381409,"byte_end":381485,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ # // feature.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381486,"byte_end":381503,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ # trait ToUnstableSpan {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381504,"byte_end":381532,"line_start":113,"line_end":113,"column_start":1,"column_end":29}},{"value":"/ #     fn unstable(&self) -> Span;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381533,"byte_end":381570,"line_start":114,"line_end":114,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381571,"byte_end":381578,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381579,"byte_end":381584,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ # impl ToUnstableSpan for proc_macro2::Span {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381585,"byte_end":381634,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ #     fn unstable(&self) -> Span {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381635,"byte_end":381673,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/ #         unimplemented!()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381674,"byte_end":381704,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381705,"byte_end":381716,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381717,"byte_end":381724,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381725,"byte_end":381730,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381731,"byte_end":381749,"line_start":123,"line_end":123,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":381750,"byte_end":381757,"line_start":124,"line_end":124,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":383022,"byte_end":383033,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"TokenBuffer","qualname":"::buffer::TokenBuffer","value":"TokenBuffer {  }","parent":null,"children":[{"krate":0,"index":1005}],"decl_id":null,"docs":" A buffer that can be efficiently traversed multiple times, unlike\n `TokenStream` which requires a deep copy in order to traverse more than\n once.","sig":null,"attributes":[{"value":"/ A buffer that can be efficiently traversed multiple times, unlike","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382651,"byte_end":382720,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/ `TokenStream` which requires a deep copy in order to traverse more than","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382721,"byte_end":382796,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/ once.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382797,"byte_end":382806,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382807,"byte_end":382810,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for an example of `TokenBuffer` in action.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382811,"byte_end":382888,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382889,"byte_end":382892,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382893,"byte_end":382931,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382932,"byte_end":382935,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":382936,"byte_end":383010,"line_start":162,"line_end":162,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385695,"byte_end":385698,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenBuffer>::new","value":"pub fn new(pm::TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385557,"byte_end":385625,"line_start":221,"line_end":221,"column_start":5,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385630,"byte_end":385648,"line_start":222,"line_end":222,"column_start":5,"column_end":23}},{"value":"cfg(feature = \"proc-macro\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385653,"byte_end":385683,"line_start":223,"line_end":223,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385889,"byte_end":385893,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"new2","qualname":"<TokenBuffer>::new2","value":"pub fn new2(TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385786,"byte_end":385854,"line_start":228,"line_end":228,"column_start":5,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385859,"byte_end":385877,"line_start":229,"line_end":229,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386120,"byte_end":386125,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"begin","qualname":"<TokenBuffer>::begin","value":"pub fn begin(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing the first token in the buffer and able to\n traverse until the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing the first token in the buffer and able to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":385988,"byte_end":386062,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ traverse until the end of the buffer.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386067,"byte_end":386108,"line_start":235,"line_end":235,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386988,"byte_end":386994,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::buffer::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883}],"decl_id":null,"docs":" A cheaply copyable cursor into a `TokenBuffer`.","sig":null,"attributes":[{"value":"/ A cheaply copyable cursor into a `TokenBuffer`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386236,"byte_end":386287,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386288,"byte_end":386291,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ This cursor holds a shared reference into the immutable data which is used","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386292,"byte_end":386370,"line_start":243,"line_end":243,"column_start":1,"column_end":79}},{"value":"/ internally to represent a `TokenStream`, and can be efficiently manipulated","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386371,"byte_end":386450,"line_start":244,"line_end":244,"column_start":1,"column_end":80}},{"value":"/ and copied around.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386451,"byte_end":386473,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386474,"byte_end":386477,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ An empty `Cursor` can be created directly, or one may create a `TokenBuffer`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386478,"byte_end":386558,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"/ object and get a cursor to its first token with `begin()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386559,"byte_end":386621,"line_start":248,"line_end":248,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386622,"byte_end":386625,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Two cursors are equal if they have the same location in the same input","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386626,"byte_end":386700,"line_start":250,"line_end":250,"column_start":1,"column_end":75}},{"value":"/ stream, and have the same scope.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386701,"byte_end":386737,"line_start":251,"line_end":251,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386738,"byte_end":386741,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for an example of a `Cursor` in action.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386742,"byte_end":386816,"line_start":253,"line_end":253,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386817,"byte_end":386820,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386821,"byte_end":386859,"line_start":255,"line_end":255,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386860,"byte_end":386863,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":386864,"byte_end":386938,"line_start":257,"line_end":257,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":387506,"byte_end":387511,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"empty","qualname":"<Cursor>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing a static empty TokenStream.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing a static empty TokenStream.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":387434,"byte_end":387494,"line_start":271,"line_end":271,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390274,"byte_end":390277,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"eof","qualname":"<Cursor>::eof","value":"pub fn eof(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the cursor is currently pointing at the end of its valid\n scope.\n","sig":null,"attributes":[{"value":"/ Checks whether the cursor is currently pointing at the end of its valid","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390158,"byte_end":390233,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ scope.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390238,"byte_end":390248,"line_start":342,"line_end":342,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390253,"byte_end":390262,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390557,"byte_end":390562,"line_start":351,"line_end":351,"column_start":12,"column_end":17},"name":"group","qualname":"<Cursor>::group","value":"pub fn group(Self, Delimiter) -> Option<(Cursor, Span, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Group` with the given delimiter, returns\n a cursor into that group and one pointing to the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Group` with the given delimiter, returns","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390394,"byte_end":390470,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ a cursor into that group and one pointing to the next `TokenTree`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":390475,"byte_end":390545,"line_start":350,"line_end":350,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391290,"byte_end":391294,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"term","qualname":"<Cursor>::term","value":"pub fn term(Self) -> Option<(Term, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Term`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Term`, returns it along with a cursor","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391163,"byte_end":391236,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391241,"byte_end":391278,"line_start":369,"line_end":369,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391636,"byte_end":391638,"line_start":380,"line_end":380,"column_start":12,"column_end":14},"name":"op","qualname":"<Cursor>::op","value":"pub fn op(Self) -> Option<(Op, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at an `Op`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at an `Op`, returns it along with a cursor","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391510,"byte_end":391582,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391587,"byte_end":391624,"line_start":379,"line_end":379,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391975,"byte_end":391982,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"literal","qualname":"<Cursor>::literal","value":"pub fn literal(Self) -> Option<(Literal, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Literal`, return it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Literal`, return it along with a cursor","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391846,"byte_end":391921,"line_start":388,"line_end":388,"column_start":5,"column_end":80}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":391926,"byte_end":391963,"line_start":389,"line_end":389,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392312,"byte_end":392324,"line_start":400,"line_end":400,"column_start":12,"column_end":24},"name":"token_stream","qualname":"<Cursor>::token_stream","value":"pub fn token_stream(Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Copies all remaining tokens visible from this cursor into a\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Copies all remaining tokens visible from this cursor into a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392214,"byte_end":392277,"line_start":398,"line_end":398,"column_start":5,"column_end":68}},{"value":"/ `TokenStream`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392282,"byte_end":392300,"line_start":399,"line_end":399,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392952,"byte_end":392962,"line_start":417,"line_end":417,"column_start":12,"column_end":22},"name":"token_tree","qualname":"<Cursor>::token_tree","value":"pub fn token_tree(Self) -> Option<(TokenTree, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `TokenTree`, returns it along with a\n cursor pointing at the next `TokenTree`.","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `TokenTree`, returns it along with a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392580,"byte_end":392651,"line_start":410,"line_end":410,"column_start":5,"column_end":76}},{"value":"/ cursor pointing at the next `TokenTree`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392656,"byte_end":392700,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392705,"byte_end":392708,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cursor has reached the end of its stream.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392713,"byte_end":392780,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392785,"byte_end":392788,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method does not treat `None`-delimited groups as transparent, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392793,"byte_end":392867,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ will return a `Group(None, ..)` if the cursor is looking at one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":392872,"byte_end":392940,"line_start":416,"line_end":416,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":393699,"byte_end":393703,"line_start":438,"line_end":438,"column_start":12,"column_end":16},"name":"span","qualname":"<Cursor>::span","value":"pub fn span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` of the current token, or `Span::call_site()` if this\n cursor points to eof.\n","sig":null,"attributes":[{"value":"/ Returns the `Span` of the current token, or `Span::call_site()` if this","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":393582,"byte_end":393657,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ cursor points to eof.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":393662,"byte_end":393687,"line_start":437,"line_end":437,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"synom","qualname":"::synom","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1051}],"decl_id":null,"docs":" Parsing interface for parsing a token stream into a syntax tree node.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14956,"byte_end":14983,"line_start":383,"line_end":383,"column_start":1,"column_end":28}},{"value":"/ Parsing interface for parsing a token stream into a syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":394782,"byte_end":394855,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":394856,"byte_end":394859,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Parsing in Syn is built on parser functions that take in a [`Cursor`] and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":394860,"byte_end":394937,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ produce a [`PResult<T>`] where `T` is some syntax tree node. `Cursor` is a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":394938,"byte_end":395016,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ cheaply copyable cursor over a range of tokens in a token stream, and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395017,"byte_end":395090,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ `PResult` is a result that packages together a parsed syntax tree node `T`","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395091,"byte_end":395169,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ with a stream of remaining unparsed tokens after `T` represented as another","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395170,"byte_end":395249,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ `Cursor`, or a [`ParseError`] if parsing failed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395250,"byte_end":395302,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395303,"byte_end":395306,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Cursor`]: ../buffer/index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395307,"byte_end":395343,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ [`PResult<T>`]: type.PResult.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395344,"byte_end":395381,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ [`ParseError`]: struct.ParseError.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395382,"byte_end":395424,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395425,"byte_end":395428,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This `Cursor`- and `PResult`-based interface is convenient for parser","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395429,"byte_end":395502,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ combinators and parser implementations, but not necessarily when you just","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395503,"byte_end":395580,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ have some tokens that you want to parse. For that we expose the following","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395581,"byte_end":395658,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ two entry points.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395659,"byte_end":395680,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395681,"byte_end":395684,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## The `syn::parse*` functions","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395685,"byte_end":395719,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395720,"byte_end":395723,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The [`syn::parse`], [`syn::parse2`], and [`syn::parse_str`] functions serve","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395724,"byte_end":395803,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ as an entry point for parsing syntax tree nodes that can be parsed in an","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395804,"byte_end":395880,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ obvious default way. These functions can return any syntax tree node that","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395881,"byte_end":395958,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ implements the [`Synom`] trait, which includes most types in Syn.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":395959,"byte_end":396028,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396029,"byte_end":396032,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse`]: ../fn.parse.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396033,"byte_end":396069,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ [`syn::parse2`]: ../fn.parse2.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396070,"byte_end":396108,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ [`syn::parse_str`]: ../fn.parse_str.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396109,"byte_end":396153,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/ [`Synom`]: trait.Synom.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396154,"byte_end":396185,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396186,"byte_end":396189,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396190,"byte_end":396197,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use syn::Type;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396198,"byte_end":396216,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396217,"byte_end":396220,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # fn run_parser() -> Result<(), syn::synom::ParseError> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396221,"byte_end":396282,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ let t: Type = syn::parse_str(\"std::collections::HashMap<String, Value>\")?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396283,"byte_end":396361,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396362,"byte_end":396378,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396379,"byte_end":396386,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396387,"byte_end":396392,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396393,"byte_end":396410,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/ #     run_parser().unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396411,"byte_end":396443,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396444,"byte_end":396451,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396452,"byte_end":396459,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396460,"byte_end":396463,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The [`parse_quote!`] macro also uses this approach.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396464,"byte_end":396519,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396520,"byte_end":396523,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`parse_quote!`]: ../macro.parse_quote.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396524,"byte_end":396571,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396572,"byte_end":396575,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## The `Parser` trait","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396576,"byte_end":396601,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396602,"byte_end":396605,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Some types can be parsed in several ways depending on context. For example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396606,"byte_end":396684,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ an [`Attribute`] can be either \"outer\" like `#[...]` or \"inner\" like","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396685,"byte_end":396757,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"/ `#![...]` and parsing the wrong one would be a bug. Similarly [`Punctuated`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396758,"byte_end":396838,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ may or may not allow trailing punctuation, and parsing it the wrong way","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396839,"byte_end":396914,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ would either reject valid input or accept invalid input.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396915,"byte_end":396975,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396976,"byte_end":396979,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Attribute`]: ../struct.Attribute.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":396980,"byte_end":397023,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/ [`Punctuated`]: ../punctuated/index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397024,"byte_end":397068,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397069,"byte_end":397072,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The `Synom` trait is not implemented in these cases because there is no good","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397073,"byte_end":397153,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ behavior to consider the default.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397154,"byte_end":397191,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397192,"byte_end":397195,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397196,"byte_end":397209,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/ // Can't parse `Punctuated` without knowing whether trailing punctuation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397210,"byte_end":397286,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ // should be allowed in this context.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397287,"byte_end":397328,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ let path: Punctuated<PathSegment, Token![::]> = syn::parse(tokens)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397329,"byte_end":397401,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397402,"byte_end":397409,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397410,"byte_end":397413,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ In these cases the types provide a choice of parser functions rather than a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397414,"byte_end":397493,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ single `Synom` implementation, and those parser functions can be invoked","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397494,"byte_end":397570,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ through the [`Parser`] trait.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397571,"byte_end":397604,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397605,"byte_end":397608,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397609,"byte_end":397642,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397643,"byte_end":397646,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397647,"byte_end":397654,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397655,"byte_end":397673,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/ # extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397674,"byte_end":397697,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397698,"byte_end":397703,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # extern crate proc_macro2;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397704,"byte_end":397735,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/ # use proc_macro2::TokenStream;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397736,"byte_end":397771,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397772,"byte_end":397777,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ use syn::synom::Parser;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397778,"byte_end":397805,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397806,"byte_end":397842,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ use syn::{PathSegment, Expr, Attribute};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397843,"byte_end":397887,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397888,"byte_end":397891,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # fn run_parsers() -> Result<(), syn::synom::ParseError> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397892,"byte_end":397954,"line_start":93,"line_end":93,"column_start":1,"column_end":63}},{"value":"/ #     let tokens = TokenStream::empty().into();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":397955,"byte_end":398006,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/ // Parse a nonempty sequence of path segments separated by `::` punctuation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398007,"byte_end":398086,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/ // with no trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398087,"byte_end":398123,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/ let parser = Punctuated::<PathSegment, Token![::]>::parse_separated_nonempty;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398124,"byte_end":398205,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/ let path = parser.parse(tokens)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398206,"byte_end":398243,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398244,"byte_end":398247,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ #     let tokens = TokenStream::empty().into();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398248,"byte_end":398299,"line_start":100,"line_end":100,"column_start":1,"column_end":52}},{"value":"/ // Parse a possibly empty sequence of expressions terminated by commas with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398300,"byte_end":398379,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ // an optional trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398380,"byte_end":398420,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/ let parser = Punctuated::<Expr, Token![,]>::parse_terminated;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398421,"byte_end":398486,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"/ let args = parser.parse(tokens)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398487,"byte_end":398524,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398525,"byte_end":398528,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ #     let tokens = TokenStream::empty().into();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398529,"byte_end":398580,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/ // Parse zero or more outer attributes but not inner attributes.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398581,"byte_end":398649,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/ named!(outer_attrs -> Vec<Attribute>, many0!(Attribute::parse_outer));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398650,"byte_end":398724,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ let attrs = outer_attrs.parse(tokens)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398725,"byte_end":398768,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398769,"byte_end":398774,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398775,"byte_end":398791,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398792,"byte_end":398799,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398800,"byte_end":398805,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398806,"byte_end":398824,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398825,"byte_end":398832,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398833,"byte_end":398836,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Implementing a parser function","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398837,"byte_end":398873,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398874,"byte_end":398877,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Parser functions are usually implemented using the [`nom`]-style parser","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398878,"byte_end":398953,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/ combinator macros provided by Syn, but may also be implemented without","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":398954,"byte_end":399028,"line_start":120,"line_end":120,"column_start":1,"column_end":75}},{"value":"/ macros be using the low-level [`Cursor`] API directly.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399029,"byte_end":399087,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399088,"byte_end":399091,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ [`nom`]: https://github.com/Geal/nom","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399092,"byte_end":399132,"line_start":123,"line_end":123,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399133,"byte_end":399136,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The following parser combinator macros are available and a `Synom` parsing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399137,"byte_end":399215,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ example is provided for each one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399216,"byte_end":399253,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399254,"byte_end":399257,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ - [`alt!`](../macro.alt.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399258,"byte_end":399291,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ - [`braces!`](../macro.braces.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399292,"byte_end":399331,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ - [`brackets!`](../macro.brackets.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399332,"byte_end":399375,"line_start":130,"line_end":130,"column_start":1,"column_end":44}},{"value":"/ - [`call!`](../macro.call.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399376,"byte_end":399411,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"/ - [`cond!`](../macro.cond.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399412,"byte_end":399447,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"/ - [`cond_reduce!`](../macro.cond_reduce.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399448,"byte_end":399497,"line_start":133,"line_end":133,"column_start":1,"column_end":50}},{"value":"/ - [`do_parse!`](../macro.do_parse.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399498,"byte_end":399541,"line_start":134,"line_end":134,"column_start":1,"column_end":44}},{"value":"/ - [`epsilon!`](../macro.epsilon.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399542,"byte_end":399583,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/ - [`input_end!`](../macro.input_end.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399584,"byte_end":399629,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/ - [`keyword!`](../macro.keyword.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399630,"byte_end":399671,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ - [`many0!`](../macro.many0.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399672,"byte_end":399709,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/ - [`map!`](../macro.map.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399710,"byte_end":399743,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ - [`not!`](../macro.not.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399744,"byte_end":399777,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/ - [`option!`](../macro.option.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399778,"byte_end":399817,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ - [`parens!`](../macro.parens.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399818,"byte_end":399857,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ - [`punct!`](../macro.punct.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399858,"byte_end":399895,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"/ - [`reject!`](../macro.reject.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399896,"byte_end":399935,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"/ - [`switch!`](../macro.switch.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399936,"byte_end":399975,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/ - [`syn!`](../macro.syn.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":399976,"byte_end":400009,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/ - [`tuple!`](../macro.tuple.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400010,"byte_end":400047,"line_start":147,"line_end":147,"column_start":1,"column_end":38}},{"value":"/ - [`value!`](../macro.value.html)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400048,"byte_end":400085,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400086,"byte_end":400089,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400090,"byte_end":400166,"line_start":150,"line_end":150,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400627,"byte_end":400632,"line_start":168,"line_end":168,"column_start":11,"column_end":16},"name":"Synom","qualname":"::synom::Synom","value":"Synom: Sized","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" Parsing interface implemented by all types that can be parsed in a default\n way from a token stream.","sig":null,"attributes":[{"value":"/ Parsing interface implemented by all types that can be parsed in a default","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400308,"byte_end":400386,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ way from a token stream.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400387,"byte_end":400415,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400416,"byte_end":400419,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400420,"byte_end":400493,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400494,"byte_end":400497,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400498,"byte_end":400536,"line_start":165,"line_end":165,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400537,"byte_end":400540,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400541,"byte_end":400616,"line_start":167,"line_end":167,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400649,"byte_end":400654,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"parse","qualname":"::synom::Synom::parse","value":"pub fn parse(Cursor) -> PResult<, Self>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401688,"byte_end":401699,"line_start":200,"line_end":200,"column_start":8,"column_end":19},"name":"description","qualname":"::synom::Synom::description","value":"pub fn description() -> Option<&'static str>","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" A short name of the type being parsed.","sig":null,"attributes":[{"value":"/ A short name of the type being parsed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400693,"byte_end":400735,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400740,"byte_end":400743,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The description should only be used for a simple name.  It should not","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400748,"byte_end":400821,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ contain newlines or sentence-ending punctuation, to facilitate embedding in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400826,"byte_end":400905,"line_start":174,"line_end":174,"column_start":5,"column_end":84}},{"value":"/ larger user-facing strings.  Syn will use this description when building","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400910,"byte_end":400986,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ error messages about parse failures.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400991,"byte_end":401031,"line_start":176,"line_end":176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401036,"byte_end":401039,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401044,"byte_end":401058,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401063,"byte_end":401066,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401071,"byte_end":401078,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use syn::buffer::Cursor;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401083,"byte_end":401113,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ # use syn::synom::{Synom, PResult};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401118,"byte_end":401157,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401162,"byte_end":401167,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ struct ExprMacro {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401172,"byte_end":401194,"line_start":184,"line_end":184,"column_start":5,"column_end":27}},{"value":"/     // ...","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401199,"byte_end":401213,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401218,"byte_end":401223,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401228,"byte_end":401231,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ impl Synom for ExprMacro {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401236,"byte_end":401266,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/ #   fn parse(input: Cursor) -> PResult<Self> { unimplemented!() }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401271,"byte_end":401340,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/     // fn parse(...) -> ... { ... }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401345,"byte_end":401384,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401389,"byte_end":401392,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/     fn description() -> Option<&'static str> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401397,"byte_end":401447,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/         // Will result in messages like","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401452,"byte_end":401495,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/         //","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401500,"byte_end":401514,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/         //     \"failed to parse macro invocation expression: $reason\"","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401519,"byte_end":401592,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/         Some(\"macro invocation expression\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401597,"byte_end":401644,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401649,"byte_end":401658,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401663,"byte_end":401668,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401673,"byte_end":401680,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402278,"byte_end":402284,"line_start":222,"line_end":222,"column_start":11,"column_end":17},"name":"Parser","qualname":"::synom::Parser","value":"Parser: Sized","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"decl_id":null,"docs":" Parser that can parse Rust tokens into a particular syntax tree node.","sig":null,"attributes":[{"value":"/ Parser that can parse Rust tokens into a particular syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401993,"byte_end":402066,"line_start":215,"line_end":215,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402067,"byte_end":402070,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402071,"byte_end":402144,"line_start":217,"line_end":217,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402145,"byte_end":402148,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402149,"byte_end":402187,"line_start":219,"line_end":219,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402188,"byte_end":402191,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402192,"byte_end":402267,"line_start":221,"line_end":221,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402303,"byte_end":402309,"line_start":223,"line_end":223,"column_start":10,"column_end":16},"name":"Output","qualname":"::synom::Parser::Output","value":"type Output;","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402394,"byte_end":402400,"line_start":226,"line_end":226,"column_start":8,"column_end":14},"name":"parse2","qualname":"::synom::Parser::parse2","value":"pub fn parse2(Self, proc_macro2::TokenStream)\n-> Result<Self::Output, ParseError>","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.\n","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402316,"byte_end":402386,"line_start":225,"line_end":225,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402591,"byte_end":402596,"line_start":230,"line_end":230,"column_start":8,"column_end":13},"name":"parse","qualname":"::synom::Parser::parse","value":"pub fn parse(Self, proc_macro::TokenStream)\n-> Result<Self::Output, ParseError>","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.\n","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402483,"byte_end":402548,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"proc-macro\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402553,"byte_end":402583,"line_start":229,"line_end":229,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402930,"byte_end":402939,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::synom::Parser::parse_str","value":"pub fn parse_str(Self, &str) -> Result<Self::Output, ParseError>","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402720,"byte_end":402785,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402790,"byte_end":402793,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Hygiene","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402798,"byte_end":402811,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402816,"byte_end":402819,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402824,"byte_end":402897,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ macro call site.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402902,"byte_end":402922,"line_start":239,"line_end":239,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":5469},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":4900},{"krate":0,"index":4904},{"krate":0,"index":1069},{"krate":0,"index":1094},{"krate":0,"index":1099},{"krate":0,"index":1104},{"krate":0,"index":1109},{"krate":0,"index":1114},{"krate":0,"index":1119},{"krate":0,"index":1125},{"krate":0,"index":1132},{"krate":0,"index":1139},{"krate":0,"index":1143},{"krate":0,"index":1148},{"krate":0,"index":1155},{"krate":0,"index":1160},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1177},{"krate":0,"index":1181},{"krate":0,"index":1187},{"krate":0,"index":1191},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1205},{"krate":0,"index":1212},{"krate":0,"index":1216},{"krate":0,"index":1221},{"krate":0,"index":1226},{"krate":0,"index":1233},{"krate":0,"index":1243},{"krate":0,"index":1252},{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1268},{"krate":0,"index":1276}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes separated by punctuation.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes separated by punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404023,"byte_end":404095,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404096,"byte_end":404099,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Lots of things in Rust are punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404100,"byte_end":404152,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404153,"byte_end":404156,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - The fields of a struct are `Punctuated<Field, Token![,]>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404157,"byte_end":404221,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ - The segments of a path are `Punctuated<PathSegment, Token![::]>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404222,"byte_end":404293,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ - The bounds on a generic parameter are `Punctuated<TypeParamBound, Token![+]>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404294,"byte_end":404378,"line_start":15,"line_end":15,"column_start":1,"column_end":85}},{"value":"/ - The arguments to a function call are `Punctuated<Expr, Token![,]>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404379,"byte_end":404452,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404453,"byte_end":404456,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This module provides a common representation for these punctuated sequences","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404457,"byte_end":404536,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ in the form of the [`Punctuated<T, P>`] type. We store a vector of pairs of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404537,"byte_end":404616,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ syntax tree node + punctuation, where every node in the sequence is followed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404617,"byte_end":404697,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ by punctuation except for possibly the final one.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404698,"byte_end":404751,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404752,"byte_end":404755,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Punctuated<T, P>`]: struct.Punctuated.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404756,"byte_end":404804,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404805,"byte_end":404808,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404809,"byte_end":404820,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ a_function_call(arg1, arg2, arg3);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404821,"byte_end":404859,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/                 ^^^^^ ~~~~~ ^^^^","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404860,"byte_end":404896,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":404897,"byte_end":404904,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405635,"byte_end":405645,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated {  }","parent":null,"children":[{"krate":0,"index":4903}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes of type `T` separated by\n punctuation of type `P`.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes of type `T` separated by","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405277,"byte_end":405348,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ punctuation of type `P`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405349,"byte_end":405377,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405378,"byte_end":405381,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405382,"byte_end":405461,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405462,"byte_end":405465,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405466,"byte_end":405504,"line_start":51,"line_end":51,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405776,"byte_end":405779,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Punctuated<T, P>>::new","value":"pub fn new() -> Punctuated<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty punctuated sequence.\n","sig":null,"attributes":[{"value":"/ Creates an empty punctuated sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405723,"byte_end":405764,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405990,"byte_end":405998,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Punctuated<T, P>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence is empty, meaning it\n contains no syntax tree nodes or punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence is empty, meaning it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405856,"byte_end":405924,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ contains no syntax tree nodes or punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405929,"byte_end":405978,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406248,"byte_end":406251,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"len","qualname":"<Punctuated<T, P>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of syntax tree nodes in this punctuated sequence.","sig":null,"attributes":[{"value":"/ Returns the number of syntax tree nodes in this punctuated sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406057,"byte_end":406129,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406134,"byte_end":406137,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is the number of nodes of type `T`, not counting the punctuation of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406142,"byte_end":406218,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ type `P`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406223,"byte_end":406236,"line_start":73,"line_end":73,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406373,"byte_end":406378,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"first","qualname":"<Punctuated<T, P>>::first","value":"pub fn first(&Self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the first punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the first punctuated pair in this sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406306,"byte_end":406361,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406645,"byte_end":406649,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"last","qualname":"<Punctuated<T, P>>::last","value":"pub fn last(&Self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the last punctuated pair in this sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406579,"byte_end":406633,"line_start":86,"line_end":86,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406923,"byte_end":406931,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Punctuated<T, P>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<Pair<&mut T, &mut P>>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the last punctuated pair in this sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":406849,"byte_end":406911,"line_start":94,"line_end":94,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407282,"byte_end":407286,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"iter","qualname":"<Punctuated<T, P>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over borrowed syntax tree nodes of type `&T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over borrowed syntax tree nodes of type `&T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407201,"byte_end":407270,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407544,"byte_end":407552,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Punctuated<T, P>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutably borrowed syntax tree nodes of type\n `&mut T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over mutably borrowed syntax tree nodes of type","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407443,"byte_end":407514,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ `&mut T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407519,"byte_end":407532,"line_start":114,"line_end":114,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407834,"byte_end":407839,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Punctuated<T, P>>::pairs","value":"pub fn pairs(&Self) -> Pairs<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as borrowed\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as borrowed","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407726,"byte_end":407796,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ punctuated pairs.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407801,"byte_end":407822,"line_start":124,"line_end":124,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408055,"byte_end":408064,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"pairs_mut","qualname":"<Punctuated<T, P>>::pairs_mut","value":"pub fn pairs_mut(&mut Self) -> PairsMut<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as mutably\n borrowed punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as mutably","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":407939,"byte_end":408008,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ borrowed punctuated pairs.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408013,"byte_end":408043,"line_start":132,"line_end":132,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408283,"byte_end":408293,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"into_pairs","qualname":"<Punctuated<T, P>>::into_pairs","value":"pub fn into_pairs(Self) -> IntoPairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as owned\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as owned","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408178,"byte_end":408245,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ punctuated pairs.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408250,"byte_end":408271,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408861,"byte_end":408871,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"push_value","qualname":"<Punctuated<T, P>>::push_value","value":"pub fn push_value(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence. The\n sequence must previously have a trailing punctuation.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence. The","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408405,"byte_end":408481,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ sequence must previously have a trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408486,"byte_end":408543,"line_start":148,"line_end":148,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408548,"byte_end":408551,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Use [`push`] instead if the punctuated sequence may or may not already","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408556,"byte_end":408630,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ have trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408635,"byte_end":408665,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408670,"byte_end":408673,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`push`]: #method.push","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408678,"byte_end":408704,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408709,"byte_end":408712,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408717,"byte_end":408729,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408734,"byte_end":408737,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence does not already have a trailing punctuation when","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408742,"byte_end":408818,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ this method is called.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408823,"byte_end":408849,"line_start":158,"line_end":158,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409284,"byte_end":409294,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"name":"push_punct","qualname":"<Punctuated<T, P>>::push_punct","value":"pub fn push_punct(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Appends a trailing punctuation onto the end of this punctuated sequence.\n The sequence must be non-empty and must not already have trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Appends a trailing punctuation onto the end of this punctuated sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":408989,"byte_end":409065,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ The sequence must be non-empty and must not already have trailing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409070,"byte_end":409139,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409144,"byte_end":409160,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409165,"byte_end":409168,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409173,"byte_end":409185,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409190,"byte_end":409193,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence is empty or already has a trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409198,"byte_end":409272,"line_start":170,"line_end":170,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409604,"byte_end":409607,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"pop","qualname":"<Punctuated<T, P>>::pop","value":"pub fn pop(&mut Self) -> Option<Pair<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last punctuated pair from this sequence, or `None` if the\n sequence is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last punctuated pair from this sequence, or `None` if the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409492,"byte_end":409565,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ sequence is empty.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409570,"byte_end":409592,"line_start":179,"line_end":179,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409810,"byte_end":409824,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"trailing_punct","qualname":"<Punctuated<T, P>>::trailing_punct","value":"pub fn trailing_punct(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence ends with a trailing\n punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence ends with a trailing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409709,"byte_end":409777,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409782,"byte_end":409798,"line_start":185,"line_end":185,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410158,"byte_end":410175,"line_start":197,"line_end":197,"column_start":12,"column_end":29},"name":"empty_or_trailing","qualname":"<Punctuated<T, P>>::empty_or_trailing","value":"pub fn empty_or_trailing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if either this `Punctuated` is empty, or it has a trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Returns true if either this `Punctuated` is empty, or it has a trailing","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":409964,"byte_end":410039,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410044,"byte_end":410060,"line_start":194,"line_end":194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410065,"byte_end":410068,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `punctuated.is_empty() || punctuated.trailing_punct()`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410073,"byte_end":410146,"line_start":196,"line_end":196,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410658,"byte_end":410662,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"push","qualname":"<Punctuated<T, P>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410368,"byte_end":410440,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410445,"byte_end":410448,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If there is not a trailing punctuation in this sequence when this method","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410453,"byte_end":410529,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ is called, the default value of punctuation type `P` is inserted before","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410534,"byte_end":410609,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ the given value of type `T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410614,"byte_end":410646,"line_start":213,"line_end":213,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411028,"byte_end":411034,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"insert","qualname":"<Punctuated<T, P>>::insert","value":"pub fn insert(&mut Self, usize, T)","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element at position `index`.","sig":null,"attributes":[{"value":"/ Inserts an element at position `index`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410827,"byte_end":410870,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410875,"byte_end":410878,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410883,"byte_end":410895,"line_start":223,"line_end":223,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410900,"byte_end":410903,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is greater than the number of elements previously in","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410908,"byte_end":410982,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ this punctuated sequence.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410987,"byte_end":411016,"line_start":226,"line_end":226,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413365,"byte_end":413370,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::punctuated::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":1147}],"decl_id":null,"docs":" An iterator over borrowed pairs of type `Pair<&T, &P>`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed pairs of type `Pair<&T, &P>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413167,"byte_end":413226,"line_start":321,"line_end":321,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413227,"byte_end":413230,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413231,"byte_end":413310,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413311,"byte_end":413314,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413315,"byte_end":413353,"line_start":325,"line_end":325,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413951,"byte_end":413959,"line_start":346,"line_end":346,"column_start":12,"column_end":20},"name":"PairsMut","qualname":"::punctuated::PairsMut","value":"PairsMut {  }","parent":null,"children":[{"krate":0,"index":1159}],"decl_id":null,"docs":" An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413737,"byte_end":413812,"line_start":341,"line_end":341,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413813,"byte_end":413816,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413817,"byte_end":413896,"line_start":343,"line_end":343,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413897,"byte_end":413900,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413901,"byte_end":413939,"line_start":345,"line_end":345,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414545,"byte_end":414554,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"IntoPairs","qualname":"::punctuated::IntoPairs","value":"IntoPairs {  }","parent":null,"children":[{"krate":0,"index":1170}],"decl_id":null,"docs":" An iterator over owned pairs of type `Pair<T, P>`.","sig":null,"attributes":[{"value":"/ An iterator over owned pairs of type `Pair<T, P>`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414352,"byte_end":414406,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414407,"byte_end":414410,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414411,"byte_end":414490,"line_start":363,"line_end":363,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414491,"byte_end":414494,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414495,"byte_end":414533,"line_start":365,"line_end":365,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415074,"byte_end":415082,"line_start":386,"line_end":386,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::punctuated::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1180}],"decl_id":null,"docs":" An iterator over owned values of type `T`.","sig":null,"attributes":[{"value":"/ An iterator over owned values of type `T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414889,"byte_end":414935,"line_start":381,"line_end":381,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414936,"byte_end":414939,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414940,"byte_end":415019,"line_start":383,"line_end":383,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415020,"byte_end":415023,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415024,"byte_end":415062,"line_start":385,"line_end":385,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415487,"byte_end":415491,"line_start":403,"line_end":403,"column_start":12,"column_end":16},"name":"Iter","qualname":"::punctuated::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1190}],"decl_id":null,"docs":" An iterator over borrowed values of type `&T`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed values of type `&T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415298,"byte_end":415348,"line_start":398,"line_end":398,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415349,"byte_end":415352,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415353,"byte_end":415432,"line_start":400,"line_end":400,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415433,"byte_end":415436,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415437,"byte_end":415475,"line_start":402,"line_end":402,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415768,"byte_end":415781,"line_start":415,"line_end":415,"column_start":12,"column_end":25},"name":"private_empty","qualname":"<Iter>::private_empty","value":"pub fn private_empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416396,"byte_end":416403,"line_start":443,"line_end":443,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::punctuated::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1215}],"decl_id":null,"docs":" An iterator over mutably borrowed values of type `&mut T`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed values of type `&mut T`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416195,"byte_end":416257,"line_start":438,"line_end":438,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416258,"byte_end":416261,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416262,"byte_end":416341,"line_start":440,"line_end":440,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416342,"byte_end":416345,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416346,"byte_end":416384,"line_start":442,"line_end":442,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417158,"byte_end":417168,"line_start":474,"line_end":474,"column_start":5,"column_end":15},"name":"Punctuated","qualname":"::punctuated::Pair::Punctuated","value":"Pair::Punctuated(T, P)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417180,"byte_end":417183,"line_start":475,"line_end":475,"column_start":5,"column_end":8},"name":"End","qualname":"::punctuated::Pair::End","value":"Pair::End(T)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417141,"byte_end":417145,"line_start":473,"line_end":473,"column_start":10,"column_end":14},"name":"Pair","qualname":"::punctuated::Pair","value":"pub enum Pair<T, P> { Punctuated(T, P), End(T), }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1240}],"decl_id":null,"docs":" A single syntax tree node of type `T` followed by its trailing punctuation\n of type `P` if any.","sig":null,"attributes":[{"value":"/ A single syntax tree node of type `T` followed by its trailing punctuation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416902,"byte_end":416980,"line_start":467,"line_end":467,"column_start":1,"column_end":79}},{"value":"/ of type `P` if any.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416981,"byte_end":417004,"line_start":468,"line_end":468,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417005,"byte_end":417008,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417009,"byte_end":417088,"line_start":470,"line_end":470,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417089,"byte_end":417092,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417093,"byte_end":417131,"line_start":472,"line_end":472,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417337,"byte_end":417347,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"into_value","qualname":"<Pair<T, P>>::into_value","value":"pub fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the syntax tree node from this punctuated pair, discarding the\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Extracts the syntax tree node from this punctuated pair, discarding the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417219,"byte_end":417294,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ following punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417299,"byte_end":417325,"line_start":480,"line_end":480,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417530,"byte_end":417535,"line_start":488,"line_end":488,"column_start":12,"column_end":17},"name":"value","qualname":"<Pair<T, P>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Borrows the syntax tree node from this punctuated pair.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417459,"byte_end":417518,"line_start":487,"line_end":487,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417737,"byte_end":417746,"line_start":495,"line_end":495,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<Pair<T, P>>::value_mut","value":"pub fn value_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the syntax tree node from this punctuated pair.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417658,"byte_end":417725,"line_start":494,"line_end":494,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418031,"byte_end":418036,"line_start":503,"line_end":503,"column_start":12,"column_end":17},"name":"punct","qualname":"<Pair<T, P>>::punct","value":"pub fn punct(&Self) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the punctuation from this punctuated pair, unless this pair is\n the final one and there is no trailing punctuation.\n","sig":null,"attributes":[{"value":"/ Borrows the punctuation from this punctuated pair, unless this pair is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417885,"byte_end":417959,"line_start":501,"line_end":501,"column_start":5,"column_end":79}},{"value":"/ the final one and there is no trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417964,"byte_end":418019,"line_start":502,"line_end":502,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418302,"byte_end":418305,"line_start":512,"line_end":512,"column_start":12,"column_end":15},"name":"new","qualname":"<Pair<T, P>>::new","value":"pub fn new(T, Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a punctuated pair out of a syntax tree node and an optional\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Creates a punctuated pair out of a syntax tree node and an optional","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418188,"byte_end":418259,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ following punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418264,"byte_end":418290,"line_start":511,"line_end":511,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418576,"byte_end":418586,"line_start":521,"line_end":521,"column_start":12,"column_end":22},"name":"into_tuple","qualname":"<Pair<T, P>>::into_tuple","value":"pub fn into_tuple(Self) -> (T, Option<P>)","parent":null,"children":[],"decl_id":null,"docs":" Produces this punctuated pair as a tuple of syntax tree node and\n optional following punctuation.\n","sig":null,"attributes":[{"value":"/ Produces this punctuated pair as a tuple of syntax tree node and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418456,"byte_end":418524,"line_start":519,"line_end":519,"column_start":5,"column_end":73}},{"value":"/ optional following punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418529,"byte_end":418564,"line_start":520,"line_end":520,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419282,"byte_end":419297,"line_start":551,"line_end":551,"column_start":12,"column_end":27},"name":"parse_separated","qualname":"<Punctuated<T, P>>::parse_separated","value":"pub fn parse_separated(Cursor) -> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **zero or more** syntax tree nodes with punctuation in between and\n **no trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **zero or more** syntax tree nodes with punctuation in between and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419157,"byte_end":419233,"line_start":549,"line_end":549,"column_start":5,"column_end":81}},{"value":"/ **no trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419238,"byte_end":419270,"line_start":550,"line_end":550,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419558,"byte_end":419582,"line_start":558,"line_end":558,"column_start":12,"column_end":36},"name":"parse_separated_nonempty","qualname":"<Punctuated<T, P>>::parse_separated_nonempty","value":"pub fn parse_separated_nonempty(Cursor) -> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **one or more** syntax tree nodes with punctuation in bewteen and\n **no trailing** punctuation.\n allowing trailing punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **one or more** syntax tree nodes with punctuation in bewteen and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419395,"byte_end":419470,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ **no trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419475,"byte_end":419507,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/ allowing trailing punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419512,"byte_end":419546,"line_start":557,"line_end":557,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419820,"byte_end":419836,"line_start":564,"line_end":564,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<Punctuated<T, P>>::parse_terminated","value":"pub fn parse_terminated(Cursor) -> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **zero or more** syntax tree nodes with punctuation in between and\n **optional trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **zero or more** syntax tree nodes with punctuation in between and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419689,"byte_end":419765,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ **optional trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419770,"byte_end":419808,"line_start":563,"line_end":563,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420065,"byte_end":420090,"line_start":570,"line_end":570,"column_start":12,"column_end":37},"name":"parse_terminated_nonempty","qualname":"<Punctuated<T, P>>::parse_terminated_nonempty","value":"pub fn parse_terminated_nonempty(Cursor) -> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **one or more** syntax tree nodes with punctuation in between and\n **optional trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **one or more** syntax tree nodes with punctuation in between and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419935,"byte_end":420010,"line_start":568,"line_end":568,"column_start":5,"column_end":80}},{"value":"/ **optional trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420015,"byte_end":420053,"line_start":569,"line_end":569,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420426,"byte_end":420446,"line_start":582,"line_end":582,"column_start":12,"column_end":32},"name":"parse_separated_with","qualname":"<Punctuated<T, P>>::parse_separated_with","value":"pub fn parse_separated_with(Cursor, fn(: Cursor) -> PResult<, T>)\n-> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **zero or more** syntax tree nodes using the given parser with\n punctuation in between and **no trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **zero or more** syntax tree nodes using the given parser with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420278,"byte_end":420350,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ punctuation in between and **no trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420355,"byte_end":420414,"line_start":581,"line_end":581,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420736,"byte_end":420765,"line_start":591,"line_end":591,"column_start":12,"column_end":41},"name":"parse_separated_nonempty_with","qualname":"<Punctuated<T, P>>::parse_separated_nonempty_with","value":"pub fn parse_separated_nonempty_with(Cursor, fn(: Cursor) -> PResult<, T>)\n-> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **one or more** syntax tree nodes using the given parser with\n punctuation in between and **no trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **one or more** syntax tree nodes using the given parser with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420589,"byte_end":420660,"line_start":589,"line_end":589,"column_start":5,"column_end":76}},{"value":"/ punctuation in between and **no trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420665,"byte_end":420724,"line_start":590,"line_end":590,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421169,"byte_end":421190,"line_start":603,"line_end":603,"column_start":12,"column_end":33},"name":"parse_terminated_with","qualname":"<Punctuated<T, P>>::parse_terminated_with","value":"pub fn parse_terminated_with(Cursor, fn(: Cursor) -> PResult<, T>)\n-> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **zero or more** syntax tree nodes using the given parser with\n punctuation in between and **optional trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **zero or more** syntax tree nodes using the given parser with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421015,"byte_end":421087,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/ punctuation in between and **optional trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421092,"byte_end":421157,"line_start":602,"line_end":602,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421485,"byte_end":421515,"line_start":612,"line_end":612,"column_start":12,"column_end":42},"name":"parse_terminated_nonempty_with","qualname":"<Punctuated<T, P>>::parse_terminated_nonempty_with","value":"pub fn parse_terminated_nonempty_with(Cursor, fn(: Cursor) -> PResult<, T>)\n-> PResult<, Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse **one or more** syntax tree nodes using the given parser with\n punctuation in between and **optional trailing** punctuation.\n","sig":null,"attributes":[{"value":"/ Parse **one or more** syntax tree nodes using the given parser with","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421332,"byte_end":421403,"line_start":610,"line_end":610,"column_start":5,"column_end":76}},{"value":"/ punctuation in between and **optional trailing** punctuation.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":421408,"byte_end":421473,"line_start":611,"line_end":611,"column_start":5,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_quote","qualname":"::parse_quote","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1328}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15129,"byte_end":15156,"line_start":390,"line_end":390,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432564,"byte_end":432569,"line_start":101,"line_end":101,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::parse","value":"pub fn parse<T: ParseQuote>(TokenStream) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432918,"byte_end":432928,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"ParseQuote","qualname":"::parse_quote::ParseQuote","value":"ParseQuote: Sized","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432945,"byte_end":432950,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::ParseQuote::parse","value":"pub fn parse(Cursor) -> PResult<, Self>","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432991,"byte_end":433002,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"description","qualname":"::parse_quote::ParseQuote::description","value":"pub fn description() -> Option<&'static str>","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spanned","qualname":"::spanned","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1339}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"cfg(all(feature = \"parsing\", feature = \"printing\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15194,"byte_end":15248,"line_start":394,"line_end":394,"column_start":1,"column_end":55}},{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434365,"byte_end":434441,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434442,"byte_end":434456,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434457,"byte_end":434460,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434461,"byte_end":434536,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434537,"byte_end":434564,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434565,"byte_end":434568,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434569,"byte_end":434582,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434583,"byte_end":434586,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Suppose in a procedural macro we have a [`Type`] that we want to assert","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434587,"byte_end":434662,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ implements the [`Sync`] trait. Maybe this is the type of one of the fields","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434663,"byte_end":434741,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ of a struct for which we are deriving a trait implementation, and we need to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434742,"byte_end":434822,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ be able to pass a reference to one of those fields across threads.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434823,"byte_end":434893,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434894,"byte_end":434897,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Type`]: ../enum.Type.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434898,"byte_end":434929,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ [`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434930,"byte_end":434996,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":434997,"byte_end":435000,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If the field type does *not* implement `Sync` as required, we want the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435001,"byte_end":435075,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ compiler to report an error pointing out exactly which type it was.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435076,"byte_end":435147,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435148,"byte_end":435151,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The following macro code takes a variable `ty` of type `Type` and produces a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435152,"byte_end":435232,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ static assertion that `Sync` is implemented for that type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435233,"byte_end":435295,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435296,"byte_end":435299,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435300,"byte_end":435307,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435308,"byte_end":435324,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435325,"byte_end":435348,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435349,"byte_end":435352,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435353,"byte_end":435374,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ extern crate proc_macro;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435375,"byte_end":435403,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ extern crate proc_macro2;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435404,"byte_end":435433,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435434,"byte_end":435437,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use syn::Type;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435438,"byte_end":435456,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use syn::spanned::Spanned;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435457,"byte_end":435487,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435488,"byte_end":435520,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435521,"byte_end":435547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435548,"byte_end":435551,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435552,"byte_end":435598,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435599,"byte_end":435632,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435633,"byte_end":435641,"line_start":46,"line_end":46,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435642,"byte_end":435698,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/     # let ty = get_a_type();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435699,"byte_end":435731,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/     /* ... */","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435732,"byte_end":435749,"line_start":49,"line_end":49,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435750,"byte_end":435753,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     let assert_sync = quote_spanned! {ty.span()=>","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435754,"byte_end":435807,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/         struct _AssertSync where #ty: Sync;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435808,"byte_end":435855,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435856,"byte_end":435866,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435867,"byte_end":435870,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435871,"byte_end":435888,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/     # input","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435889,"byte_end":435904,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435905,"byte_end":435910,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435911,"byte_end":435916,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # fn get_a_type() -> Type {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435917,"byte_end":435948,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ #     unimplemented!()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435949,"byte_end":435975,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435976,"byte_end":435983,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435984,"byte_end":435989,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":435990,"byte_end":436008,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436009,"byte_end":436016,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436017,"byte_end":436020,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ By inserting this `assert_sync` fragment into the output code generated by","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436021,"byte_end":436099,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ our macro, the user's code will fail to compile if `ty` does not implement","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436100,"byte_end":436178,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ `Sync`. The errors they would see look like the following.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436179,"byte_end":436241,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436242,"byte_end":436245,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436246,"byte_end":436257,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `*const i32: std::marker::Sync` is not satisfied","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436258,"byte_end":436340,"line_start":71,"line_end":71,"column_start":1,"column_end":83}},{"value":"/   --> src/main.rs:10:21","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436341,"byte_end":436368,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436369,"byte_end":436377,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ 10 |     bad_field: *const i32,","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436378,"byte_end":436413,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/    |                ^^^^^^^^^^ `*const i32` cannot be shared between threads safely","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436414,"byte_end":436501,"line_start":75,"line_end":75,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436502,"byte_end":436509,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436510,"byte_end":436513,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ In this technique, using the `Type`'s span for the error message makes the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436514,"byte_end":436592,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ error appear in the correct place underlining the right type.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436593,"byte_end":436658,"line_start":79,"line_end":79,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437229,"byte_end":437236,"line_start":98,"line_end":98,"column_start":11,"column_end":18},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned","parent":null,"children":[{"krate":0,"index":1338}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436730,"byte_end":436806,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436807,"byte_end":436821,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436822,"byte_end":436825,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for all types that implement","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436826,"byte_end":436898,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/ [`ToTokens`] from the `quote` crate.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436899,"byte_end":436939,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436940,"byte_end":436943,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`ToTokens`]: https://docs.rs/quote/0.4/quote/trait.ToTokens.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":436944,"byte_end":437013,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437014,"byte_end":437017,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for an example.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437018,"byte_end":437068,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437069,"byte_end":437072,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437073,"byte_end":437111,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437112,"byte_end":437115,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437116,"byte_end":437190,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437191,"byte_end":437218,"line_start":97,"line_end":97,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437501,"byte_end":437505,"line_start":103,"line_end":103,"column_start":8,"column_end":12},"name":"span","qualname":"::spanned::Spanned::span","value":"pub fn span(&Self) -> Span","parent":{"krate":0,"index":1337},"children":[],"decl_id":null,"docs":" Returns a `Span` covering the complete contents of this syntax tree\n node, or [`Span::call_site()`] if this node is empty.","sig":null,"attributes":[{"value":"/ Returns a `Span` covering the complete contents of this syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437243,"byte_end":437314,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ node, or [`Span::call_site()`] if this node is empty.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437319,"byte_end":437376,"line_start":100,"line_end":100,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437381,"byte_end":437384,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`Span::call_site()`]: https://docs.rs/proc-macro2/0.2/proc_macro2/struct.Span.html#method.call_site","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437389,"byte_end":437493,"line_start":102,"line_end":102,"column_start":5,"column_end":109}}]},{"kind":"Mod","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visit","qualname":"::gen::visit","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708}],"decl_id":null,"docs":" Syntax tree traversal to walk a shared borrow of a syntax tree.","sig":null,"attributes":[{"value":"/ Syntax tree traversal to walk a shared borrow of a syntax tree.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15281,"byte_end":15348,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15353,"byte_end":15356,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Each method of the [`Visit`] trait is a hook that can be overridden to","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15361,"byte_end":15435,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ customize the behavior when visiting the corresponding type of node. By","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15440,"byte_end":15515,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ default, every method recursively visits the substructure of the input","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15520,"byte_end":15594,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ by invoking the right visitor method of each of its fields.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15599,"byte_end":15662,"line_start":403,"line_end":403,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15667,"byte_end":15670,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ [`Visit`]: trait.Visit.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15675,"byte_end":15706,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15711,"byte_end":15714,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15719,"byte_end":15730,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/ # use syn::{Attribute, BinOp, Expr, ExprBinary};","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15735,"byte_end":15787,"line_start":408,"line_end":408,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15792,"byte_end":15797,"line_start":409,"line_end":409,"column_start":5,"column_end":10}},{"value":"/ pub trait Visit<'ast> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15802,"byte_end":15829,"line_start":410,"line_end":410,"column_start":5,"column_end":32}},{"value":"/     /* ... */","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15834,"byte_end":15851,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15856,"byte_end":15859,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/     fn visit_expr_binary(&mut self, node: &'ast ExprBinary) {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15864,"byte_end":15929,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/         for attr in &node.attrs {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15934,"byte_end":15971,"line_start":414,"line_end":414,"column_start":5,"column_end":42}},{"value":"/             self.visit_attribute(attr);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15976,"byte_end":16019,"line_start":415,"line_end":415,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16024,"byte_end":16037,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/         self.visit_expr(&*node.left);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16042,"byte_end":16083,"line_start":417,"line_end":417,"column_start":5,"column_end":46}},{"value":"/         self.visit_bin_op(&node.op);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16088,"byte_end":16128,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/         self.visit_expr(&*node.right);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16133,"byte_end":16175,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16180,"byte_end":16189,"line_start":420,"line_end":420,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16194,"byte_end":16197,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     /* ... */","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16202,"byte_end":16219,"line_start":422,"line_end":422,"column_start":5,"column_end":22}},{"value":"/     # fn visit_attribute(&mut self, node: &'ast Attribute);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16224,"byte_end":16287,"line_start":423,"line_end":423,"column_start":5,"column_end":68}},{"value":"/     # fn visit_expr(&mut self, node: &'ast Expr);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16292,"byte_end":16345,"line_start":424,"line_end":424,"column_start":5,"column_end":58}},{"value":"/     # fn visit_bin_op(&mut self, node: &'ast BinOp);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16350,"byte_end":16406,"line_start":425,"line_end":425,"column_start":5,"column_end":61}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16411,"byte_end":16416,"line_start":426,"line_end":426,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16421,"byte_end":16428,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16433,"byte_end":16436,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ *This module is available if Syn is built with the `\"visit\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16441,"byte_end":16515,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"cfg(feature = \"visit\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16520,"byte_end":16545,"line_start":430,"line_end":430,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439398,"byte_end":439403,"line_start":33,"line_end":33,"column_start":11,"column_end":16},"name":"Visit","qualname":"::gen::visit::Visit","value":"Visit<'ast>","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"decl_id":null,"docs":" Syntax tree traversal to walk a shared borrow of a syntax tree.","sig":null,"attributes":[{"value":"/ Syntax tree traversal to walk a shared borrow of a syntax tree.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439147,"byte_end":439214,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439215,"byte_end":439218,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for details.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439219,"byte_end":439266,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439267,"byte_end":439270,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439271,"byte_end":439309,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439310,"byte_end":439313,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with the `\"visit\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439314,"byte_end":439387,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439475,"byte_end":439484,"line_start":35,"line_end":35,"column_start":4,"column_end":13},"name":"visit_abi","qualname":"::gen::visit::Visit::visit_abi","value":"pub fn visit_abi(&mut Self, &'ast Abi)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439412,"byte_end":439471,"line_start":34,"line_end":34,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439596,"byte_end":439635,"line_start":37,"line_end":37,"column_start":4,"column_end":43},"name":"visit_angle_bracketed_generic_arguments","qualname":"::gen::visit::Visit::visit_angle_bracketed_generic_arguments","value":"pub fn visit_angle_bracketed_generic_arguments(&mut Self,\n                                               &'ast AngleBracketedGenericArguments)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":439533,"byte_end":439592,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440297,"byte_end":440313,"line_start":47,"line_end":47,"column_start":4,"column_end":20},"name":"visit_attr_style","qualname":"::gen::visit::Visit::visit_attr_style","value":"pub fn visit_attr_style(&mut Self, &'ast AttrStyle)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440234,"byte_end":440293,"line_start":46,"line_end":46,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440438,"byte_end":440453,"line_start":49,"line_end":49,"column_start":4,"column_end":19},"name":"visit_attribute","qualname":"::gen::visit::Visit::visit_attribute","value":"pub fn visit_attribute(&mut Self, &'ast Attribute)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440375,"byte_end":440434,"line_start":48,"line_end":48,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440577,"byte_end":440594,"line_start":51,"line_end":51,"column_start":4,"column_end":21},"name":"visit_bare_fn_arg","qualname":"::gen::visit::Visit::visit_bare_fn_arg","value":"pub fn visit_bare_fn_arg(&mut Self, &'ast BareFnArg)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440514,"byte_end":440573,"line_start":50,"line_end":50,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440720,"byte_end":440742,"line_start":53,"line_end":53,"column_start":4,"column_end":26},"name":"visit_bare_fn_arg_name","qualname":"::gen::visit::Visit::visit_bare_fn_arg_name","value":"pub fn visit_bare_fn_arg_name(&mut Self, &'ast BareFnArgName)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440657,"byte_end":440716,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440877,"byte_end":440889,"line_start":55,"line_end":55,"column_start":4,"column_end":16},"name":"visit_bin_op","qualname":"::gen::visit::Visit::visit_bin_op","value":"pub fn visit_bin_op(&mut Self, &'ast BinOp)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440814,"byte_end":440873,"line_start":54,"line_end":54,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441006,"byte_end":441019,"line_start":57,"line_end":57,"column_start":4,"column_end":17},"name":"visit_binding","qualname":"::gen::visit::Visit::visit_binding","value":"pub fn visit_binding(&mut Self, &'ast Binding)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":440943,"byte_end":441002,"line_start":56,"line_end":56,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441297,"byte_end":441318,"line_start":61,"line_end":61,"column_start":4,"column_end":25},"name":"visit_bound_lifetimes","qualname":"::gen::visit::Visit::visit_bound_lifetimes","value":"pub fn visit_bound_lifetimes(&mut Self, &'ast BoundLifetimes)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441234,"byte_end":441293,"line_start":60,"line_end":60,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441453,"byte_end":441470,"line_start":63,"line_end":63,"column_start":4,"column_end":21},"name":"visit_const_param","qualname":"::gen::visit::Visit::visit_const_param","value":"pub fn visit_const_param(&mut Self, &'ast ConstParam)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441390,"byte_end":441449,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441570,"byte_end":441580,"line_start":65,"line_end":65,"column_start":4,"column_end":14},"name":"visit_data","qualname":"::gen::visit::Visit::visit_data","value":"pub fn visit_data(&mut Self, &'ast Data)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441534,"byte_end":441566,"line_start":64,"line_end":64,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441667,"byte_end":441682,"line_start":67,"line_end":67,"column_start":4,"column_end":19},"name":"visit_data_enum","qualname":"::gen::visit::Visit::visit_data_enum","value":"pub fn visit_data_enum(&mut Self, &'ast DataEnum)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441631,"byte_end":441663,"line_start":66,"line_end":66,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441778,"byte_end":441795,"line_start":69,"line_end":69,"column_start":4,"column_end":21},"name":"visit_data_struct","qualname":"::gen::visit::Visit::visit_data_struct","value":"pub fn visit_data_struct(&mut Self, &'ast DataStruct)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441742,"byte_end":441774,"line_start":68,"line_end":68,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441895,"byte_end":441911,"line_start":71,"line_end":71,"column_start":4,"column_end":20},"name":"visit_data_union","qualname":"::gen::visit::Visit::visit_data_union","value":"pub fn visit_data_union(&mut Self, &'ast DataUnion)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441859,"byte_end":441891,"line_start":70,"line_end":70,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":442009,"byte_end":442027,"line_start":73,"line_end":73,"column_start":4,"column_end":22},"name":"visit_derive_input","qualname":"::gen::visit::Visit::visit_derive_input","value":"pub fn visit_derive_input(&mut Self, &'ast DeriveInput)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":441973,"byte_end":442005,"line_start":72,"line_end":72,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":442156,"byte_end":442166,"line_start":75,"line_end":75,"column_start":4,"column_end":14},"name":"visit_expr","qualname":"::gen::visit::Visit::visit_expr","value":"pub fn visit_expr(&mut Self, &'ast Expr)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":442093,"byte_end":442152,"line_start":74,"line_end":74,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":442810,"byte_end":442827,"line_start":83,"line_end":83,"column_start":4,"column_end":21},"name":"visit_expr_binary","qualname":"::gen::visit::Visit::visit_expr_binary","value":"pub fn visit_expr_binary(&mut Self, &'ast ExprBinary)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":442747,"byte_end":442806,"line_start":82,"line_end":82,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":443464,"byte_end":443479,"line_start":91,"line_end":91,"column_start":4,"column_end":19},"name":"visit_expr_call","qualname":"::gen::visit::Visit::visit_expr_call","value":"pub fn visit_expr_call(&mut Self, &'ast ExprCall)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":443401,"byte_end":443460,"line_start":90,"line_end":90,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":443602,"byte_end":443617,"line_start":93,"line_end":93,"column_start":4,"column_end":19},"name":"visit_expr_cast","qualname":"::gen::visit::Visit::visit_expr_cast","value":"pub fn visit_expr_cast(&mut Self, &'ast ExprCast)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":443539,"byte_end":443598,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":445312,"byte_end":445328,"line_start":113,"line_end":113,"column_start":4,"column_end":20},"name":"visit_expr_index","qualname":"::gen::visit::Visit::visit_expr_index","value":"pub fn visit_expr_index(&mut Self, &'ast ExprIndex)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":445249,"byte_end":445308,"line_start":112,"line_end":112,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":445453,"byte_end":445467,"line_start":115,"line_end":115,"column_start":4,"column_end":18},"name":"visit_expr_lit","qualname":"::gen::visit::Visit::visit_expr_lit","value":"pub fn visit_expr_lit(&mut Self, &'ast ExprLit)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":445390,"byte_end":445449,"line_start":114,"line_end":114,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":446290,"byte_end":446306,"line_start":125,"line_end":125,"column_start":4,"column_end":20},"name":"visit_expr_paren","qualname":"::gen::visit::Visit::visit_expr_paren","value":"pub fn visit_expr_paren(&mut Self, &'ast ExprParen)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":446227,"byte_end":446286,"line_start":124,"line_end":124,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":446431,"byte_end":446446,"line_start":127,"line_end":127,"column_start":4,"column_end":19},"name":"visit_expr_path","qualname":"::gen::visit::Visit::visit_expr_path","value":"pub fn visit_expr_path(&mut Self, &'ast ExprPath)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":446368,"byte_end":446427,"line_start":126,"line_end":126,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":447957,"byte_end":447973,"line_start":145,"line_end":145,"column_start":4,"column_end":20},"name":"visit_expr_unary","qualname":"::gen::visit::Visit::visit_expr_unary","value":"pub fn visit_expr_unary(&mut Self, &'ast ExprUnary)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":447894,"byte_end":447953,"line_start":144,"line_end":144,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":448273,"byte_end":448292,"line_start":149,"line_end":149,"column_start":4,"column_end":23},"name":"visit_expr_verbatim","qualname":"::gen::visit::Visit::visit_expr_verbatim","value":"pub fn visit_expr_verbatim(&mut Self, &'ast ExprVerbatim)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":448210,"byte_end":448269,"line_start":148,"line_end":148,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":448950,"byte_end":448961,"line_start":157,"line_end":157,"column_start":4,"column_end":15},"name":"visit_field","qualname":"::gen::visit::Visit::visit_field","value":"pub fn visit_field(&mut Self, &'ast Field)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":448887,"byte_end":448946,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449421,"byte_end":449433,"line_start":163,"line_end":163,"column_start":4,"column_end":16},"name":"visit_fields","qualname":"::gen::visit::Visit::visit_fields","value":"pub fn visit_fields(&mut Self, &'ast Fields)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449358,"byte_end":449417,"line_start":162,"line_end":162,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449551,"byte_end":449569,"line_start":165,"line_end":165,"column_start":4,"column_end":22},"name":"visit_fields_named","qualname":"::gen::visit::Visit::visit_fields_named","value":"pub fn visit_fields_named(&mut Self, &'ast FieldsNamed)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449488,"byte_end":449547,"line_start":164,"line_end":164,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449698,"byte_end":449718,"line_start":167,"line_end":167,"column_start":4,"column_end":24},"name":"visit_fields_unnamed","qualname":"::gen::visit::Visit::visit_fields_unnamed","value":"pub fn visit_fields_unnamed(&mut Self, &'ast FieldsUnnamed)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":449635,"byte_end":449694,"line_start":166,"line_end":166,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":450807,"byte_end":450829,"line_start":185,"line_end":185,"column_start":4,"column_end":26},"name":"visit_generic_argument","qualname":"::gen::visit::Visit::visit_generic_argument","value":"pub fn visit_generic_argument(&mut Self, &'ast GenericArgument)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":450744,"byte_end":450803,"line_start":184,"line_end":184,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":451176,"byte_end":451195,"line_start":189,"line_end":189,"column_start":4,"column_end":23},"name":"visit_generic_param","qualname":"::gen::visit::Visit::visit_generic_param","value":"pub fn visit_generic_param(&mut Self, &'ast GenericParam)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":451113,"byte_end":451172,"line_start":188,"line_end":188,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":451326,"byte_end":451340,"line_start":191,"line_end":191,"column_start":4,"column_end":18},"name":"visit_generics","qualname":"::gen::visit::Visit::visit_generics","value":"pub fn visit_generics(&mut Self, &'ast Generics)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":451263,"byte_end":451322,"line_start":190,"line_end":190,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":451403,"byte_end":451414,"line_start":193,"line_end":193,"column_start":4,"column_end":15},"name":"visit_ident","qualname":"::gen::visit::Visit::visit_ident","value":"pub fn visit_ident(&mut Self, &'ast Ident)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":452278,"byte_end":452289,"line_start":207,"line_end":207,"column_start":4,"column_end":15},"name":"visit_index","qualname":"::gen::visit::Visit::visit_index","value":"pub fn visit_index(&mut Self, &'ast Index)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":452215,"byte_end":452274,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454475,"byte_end":454489,"line_start":245,"line_end":245,"column_start":4,"column_end":18},"name":"visit_lifetime","qualname":"::gen::visit::Visit::visit_lifetime","value":"pub fn visit_lifetime(&mut Self, &'ast Lifetime)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454412,"byte_end":454471,"line_start":244,"line_end":244,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454611,"byte_end":454629,"line_start":247,"line_end":247,"column_start":4,"column_end":22},"name":"visit_lifetime_def","qualname":"::gen::visit::Visit::visit_lifetime_def","value":"pub fn visit_lifetime_def(&mut Self, &'ast LifetimeDef)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454548,"byte_end":454607,"line_start":246,"line_end":246,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454758,"byte_end":454767,"line_start":249,"line_end":249,"column_start":4,"column_end":13},"name":"visit_lit","qualname":"::gen::visit::Visit::visit_lit","value":"pub fn visit_lit(&mut Self, &'ast Lit)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454695,"byte_end":454754,"line_start":248,"line_end":248,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454879,"byte_end":454893,"line_start":251,"line_end":251,"column_start":4,"column_end":18},"name":"visit_lit_bool","qualname":"::gen::visit::Visit::visit_lit_bool","value":"pub fn visit_lit_bool(&mut Self, &'ast LitBool)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454816,"byte_end":454875,"line_start":250,"line_end":250,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455014,"byte_end":455028,"line_start":253,"line_end":253,"column_start":4,"column_end":18},"name":"visit_lit_byte","qualname":"::gen::visit::Visit::visit_lit_byte","value":"pub fn visit_lit_byte(&mut Self, &'ast LitByte)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":454951,"byte_end":455010,"line_start":252,"line_end":252,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455149,"byte_end":455167,"line_start":255,"line_end":255,"column_start":4,"column_end":22},"name":"visit_lit_byte_str","qualname":"::gen::visit::Visit::visit_lit_byte_str","value":"pub fn visit_lit_byte_str(&mut Self, &'ast LitByteStr)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455086,"byte_end":455145,"line_start":254,"line_end":254,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455295,"byte_end":455309,"line_start":257,"line_end":257,"column_start":4,"column_end":18},"name":"visit_lit_char","qualname":"::gen::visit::Visit::visit_lit_char","value":"pub fn visit_lit_char(&mut Self, &'ast LitChar)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455232,"byte_end":455291,"line_start":256,"line_end":256,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455430,"byte_end":455445,"line_start":259,"line_end":259,"column_start":4,"column_end":19},"name":"visit_lit_float","qualname":"::gen::visit::Visit::visit_lit_float","value":"pub fn visit_lit_float(&mut Self, &'ast LitFloat)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455367,"byte_end":455426,"line_start":258,"line_end":258,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455568,"byte_end":455581,"line_start":261,"line_end":261,"column_start":4,"column_end":17},"name":"visit_lit_int","qualname":"::gen::visit::Visit::visit_lit_int","value":"pub fn visit_lit_int(&mut Self, &'ast LitInt)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455505,"byte_end":455564,"line_start":260,"line_end":260,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455700,"byte_end":455713,"line_start":263,"line_end":263,"column_start":4,"column_end":17},"name":"visit_lit_str","qualname":"::gen::visit::Visit::visit_lit_str","value":"pub fn visit_lit_str(&mut Self, &'ast LitStr)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455637,"byte_end":455696,"line_start":262,"line_end":262,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455832,"byte_end":455850,"line_start":265,"line_end":265,"column_start":4,"column_end":22},"name":"visit_lit_verbatim","qualname":"::gen::visit::Visit::visit_lit_verbatim","value":"pub fn visit_lit_verbatim(&mut Self, &'ast LitVerbatim)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":455769,"byte_end":455828,"line_start":264,"line_end":264,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456137,"byte_end":456148,"line_start":269,"line_end":269,"column_start":4,"column_end":15},"name":"visit_macro","qualname":"::gen::visit::Visit::visit_macro","value":"pub fn visit_macro(&mut Self, &'ast Macro)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456074,"byte_end":456133,"line_start":268,"line_end":268,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456264,"byte_end":456285,"line_start":271,"line_end":271,"column_start":4,"column_end":25},"name":"visit_macro_delimiter","qualname":"::gen::visit::Visit::visit_macro_delimiter","value":"pub fn visit_macro_delimiter(&mut Self, &'ast MacroDelimiter)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456201,"byte_end":456260,"line_start":270,"line_end":270,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456420,"byte_end":456432,"line_start":273,"line_end":273,"column_start":4,"column_end":16},"name":"visit_member","qualname":"::gen::visit::Visit::visit_member","value":"pub fn visit_member(&mut Self, &'ast Member)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456357,"byte_end":456416,"line_start":272,"line_end":272,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456550,"byte_end":456560,"line_start":275,"line_end":275,"column_start":4,"column_end":14},"name":"visit_meta","qualname":"::gen::visit::Visit::visit_meta","value":"pub fn visit_meta(&mut Self, &'ast Meta)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456487,"byte_end":456546,"line_start":274,"line_end":274,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456674,"byte_end":456689,"line_start":277,"line_end":277,"column_start":4,"column_end":19},"name":"visit_meta_list","qualname":"::gen::visit::Visit::visit_meta_list","value":"pub fn visit_meta_list(&mut Self, &'ast MetaList)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456611,"byte_end":456670,"line_start":276,"line_end":276,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456812,"byte_end":456833,"line_start":279,"line_end":279,"column_start":4,"column_end":25},"name":"visit_meta_name_value","qualname":"::gen::visit::Visit::visit_meta_name_value","value":"pub fn visit_meta_name_value(&mut Self, &'ast MetaNameValue)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":456749,"byte_end":456808,"line_start":278,"line_end":278,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":457269,"byte_end":457286,"line_start":285,"line_end":285,"column_start":4,"column_end":21},"name":"visit_nested_meta","qualname":"::gen::visit::Visit::visit_nested_meta","value":"pub fn visit_nested_meta(&mut Self, &'ast NestedMeta)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":457206,"byte_end":457265,"line_start":284,"line_end":284,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":457413,"byte_end":457450,"line_start":287,"line_end":287,"column_start":4,"column_end":41},"name":"visit_parenthesized_generic_arguments","qualname":"::gen::visit::Visit::visit_parenthesized_generic_arguments","value":"pub fn visit_parenthesized_generic_arguments(&mut Self,\n                                             &'ast ParenthesizedGenericArguments)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":457350,"byte_end":457409,"line_start":286,"line_end":286,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":459973,"byte_end":459983,"line_start":317,"line_end":317,"column_start":4,"column_end":14},"name":"visit_path","qualname":"::gen::visit::Visit::visit_path","value":"pub fn visit_path(&mut Self, &'ast Path)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":459910,"byte_end":459969,"line_start":316,"line_end":316,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460097,"byte_end":460117,"line_start":319,"line_end":319,"column_start":4,"column_end":24},"name":"visit_path_arguments","qualname":"::gen::visit::Visit::visit_path_arguments","value":"pub fn visit_path_arguments(&mut Self, &'ast PathArguments)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460034,"byte_end":460093,"line_start":318,"line_end":318,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460250,"byte_end":460268,"line_start":321,"line_end":321,"column_start":4,"column_end":22},"name":"visit_path_segment","qualname":"::gen::visit::Visit::visit_path_segment","value":"pub fn visit_path_segment(&mut Self, &'ast PathSegment)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460187,"byte_end":460246,"line_start":320,"line_end":320,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460397,"byte_end":460415,"line_start":323,"line_end":323,"column_start":4,"column_end":22},"name":"visit_predicate_eq","qualname":"::gen::visit::Visit::visit_predicate_eq","value":"pub fn visit_predicate_eq(&mut Self, &'ast PredicateEq)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460334,"byte_end":460393,"line_start":322,"line_end":322,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460544,"byte_end":460568,"line_start":325,"line_end":325,"column_start":4,"column_end":28},"name":"visit_predicate_lifetime","qualname":"::gen::visit::Visit::visit_predicate_lifetime","value":"pub fn visit_predicate_lifetime(&mut Self, &'ast PredicateLifetime)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460481,"byte_end":460540,"line_start":324,"line_end":324,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460709,"byte_end":460729,"line_start":327,"line_end":327,"column_start":4,"column_end":24},"name":"visit_predicate_type","qualname":"::gen::visit::Visit::visit_predicate_type","value":"pub fn visit_predicate_type(&mut Self, &'ast PredicateType)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460646,"byte_end":460705,"line_start":326,"line_end":326,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460862,"byte_end":460873,"line_start":329,"line_end":329,"column_start":4,"column_end":15},"name":"visit_qself","qualname":"::gen::visit::Visit::visit_qself","value":"pub fn visit_qself(&mut Self, &'ast QSelf)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":460799,"byte_end":460858,"line_start":328,"line_end":328,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461167,"byte_end":461184,"line_start":333,"line_end":333,"column_start":4,"column_end":21},"name":"visit_return_type","qualname":"::gen::visit::Visit::visit_return_type","value":"pub fn visit_return_type(&mut Self, &'ast ReturnType)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461104,"byte_end":461163,"line_start":332,"line_end":332,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461252,"byte_end":461262,"line_start":335,"line_end":335,"column_start":4,"column_end":14},"name":"visit_span","qualname":"::gen::visit::Visit::visit_span","value":"pub fn visit_span(&mut Self, &'ast Span)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461531,"byte_end":461548,"line_start":339,"line_end":339,"column_start":4,"column_end":21},"name":"visit_trait_bound","qualname":"::gen::visit::Visit::visit_trait_bound","value":"pub fn visit_trait_bound(&mut Self, &'ast TraitBound)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461468,"byte_end":461527,"line_start":338,"line_end":338,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461675,"byte_end":461701,"line_start":341,"line_end":341,"column_start":4,"column_end":30},"name":"visit_trait_bound_modifier","qualname":"::gen::visit::Visit::visit_trait_bound_modifier","value":"pub fn visit_trait_bound_modifier(&mut Self, &'ast TraitBoundModifier)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":461612,"byte_end":461671,"line_start":340,"line_end":340,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462611,"byte_end":462621,"line_start":355,"line_end":355,"column_start":4,"column_end":14},"name":"visit_type","qualname":"::gen::visit::Visit::visit_type","value":"pub fn visit_type(&mut Self, &'ast Type)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462548,"byte_end":462607,"line_start":354,"line_end":354,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462735,"byte_end":462751,"line_start":357,"line_end":357,"column_start":4,"column_end":20},"name":"visit_type_array","qualname":"::gen::visit::Visit::visit_type_array","value":"pub fn visit_type_array(&mut Self, &'ast TypeArray)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462672,"byte_end":462731,"line_start":356,"line_end":356,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462876,"byte_end":462894,"line_start":359,"line_end":359,"column_start":4,"column_end":22},"name":"visit_type_bare_fn","qualname":"::gen::visit::Visit::visit_type_bare_fn","value":"pub fn visit_type_bare_fn(&mut Self, &'ast TypeBareFn)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462813,"byte_end":462872,"line_start":358,"line_end":358,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463022,"byte_end":463038,"line_start":361,"line_end":361,"column_start":4,"column_end":20},"name":"visit_type_group","qualname":"::gen::visit::Visit::visit_type_group","value":"pub fn visit_type_group(&mut Self, &'ast TypeGroup)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":462959,"byte_end":463018,"line_start":360,"line_end":360,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463163,"byte_end":463184,"line_start":363,"line_end":363,"column_start":4,"column_end":25},"name":"visit_type_impl_trait","qualname":"::gen::visit::Visit::visit_type_impl_trait","value":"pub fn visit_type_impl_trait(&mut Self, &'ast TypeImplTrait)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463100,"byte_end":463159,"line_start":362,"line_end":362,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463318,"byte_end":463334,"line_start":365,"line_end":365,"column_start":4,"column_end":20},"name":"visit_type_infer","qualname":"::gen::visit::Visit::visit_type_infer","value":"pub fn visit_type_infer(&mut Self, &'ast TypeInfer)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463255,"byte_end":463314,"line_start":364,"line_end":364,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463459,"byte_end":463475,"line_start":367,"line_end":367,"column_start":4,"column_end":20},"name":"visit_type_macro","qualname":"::gen::visit::Visit::visit_type_macro","value":"pub fn visit_type_macro(&mut Self, &'ast TypeMacro)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463396,"byte_end":463455,"line_start":366,"line_end":366,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463600,"byte_end":463616,"line_start":369,"line_end":369,"column_start":4,"column_end":20},"name":"visit_type_never","qualname":"::gen::visit::Visit::visit_type_never","value":"pub fn visit_type_never(&mut Self, &'ast TypeNever)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463537,"byte_end":463596,"line_start":368,"line_end":368,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463741,"byte_end":463757,"line_start":371,"line_end":371,"column_start":4,"column_end":20},"name":"visit_type_param","qualname":"::gen::visit::Visit::visit_type_param","value":"pub fn visit_type_param(&mut Self, &'ast TypeParam)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463678,"byte_end":463737,"line_start":370,"line_end":370,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463882,"byte_end":463904,"line_start":373,"line_end":373,"column_start":4,"column_end":26},"name":"visit_type_param_bound","qualname":"::gen::visit::Visit::visit_type_param_bound","value":"pub fn visit_type_param_bound(&mut Self, &'ast TypeParamBound)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463819,"byte_end":463878,"line_start":372,"line_end":372,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464040,"byte_end":464056,"line_start":375,"line_end":375,"column_start":4,"column_end":20},"name":"visit_type_paren","qualname":"::gen::visit::Visit::visit_type_paren","value":"pub fn visit_type_paren(&mut Self, &'ast TypeParen)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":463977,"byte_end":464036,"line_start":374,"line_end":374,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464181,"byte_end":464196,"line_start":377,"line_end":377,"column_start":4,"column_end":19},"name":"visit_type_path","qualname":"::gen::visit::Visit::visit_type_path","value":"pub fn visit_type_path(&mut Self, &'ast TypePath)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464118,"byte_end":464177,"line_start":376,"line_end":376,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464319,"byte_end":464333,"line_start":379,"line_end":379,"column_start":4,"column_end":18},"name":"visit_type_ptr","qualname":"::gen::visit::Visit::visit_type_ptr","value":"pub fn visit_type_ptr(&mut Self, &'ast TypePtr)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464256,"byte_end":464315,"line_start":378,"line_end":378,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464454,"byte_end":464474,"line_start":381,"line_end":381,"column_start":4,"column_end":24},"name":"visit_type_reference","qualname":"::gen::visit::Visit::visit_type_reference","value":"pub fn visit_type_reference(&mut Self, &'ast TypeReference)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464391,"byte_end":464450,"line_start":380,"line_end":380,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464607,"byte_end":464623,"line_start":383,"line_end":383,"column_start":4,"column_end":20},"name":"visit_type_slice","qualname":"::gen::visit::Visit::visit_type_slice","value":"pub fn visit_type_slice(&mut Self, &'ast TypeSlice)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464544,"byte_end":464603,"line_start":382,"line_end":382,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464748,"byte_end":464771,"line_start":385,"line_end":385,"column_start":4,"column_end":27},"name":"visit_type_trait_object","qualname":"::gen::visit::Visit::visit_type_trait_object","value":"pub fn visit_type_trait_object(&mut Self, &'ast TypeTraitObject)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464685,"byte_end":464744,"line_start":384,"line_end":384,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464909,"byte_end":464925,"line_start":387,"line_end":387,"column_start":4,"column_end":20},"name":"visit_type_tuple","qualname":"::gen::visit::Visit::visit_type_tuple","value":"pub fn visit_type_tuple(&mut Self, &'ast TypeTuple)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464846,"byte_end":464905,"line_start":386,"line_end":386,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":465050,"byte_end":465069,"line_start":389,"line_end":389,"column_start":4,"column_end":23},"name":"visit_type_verbatim","qualname":"::gen::visit::Visit::visit_type_verbatim","value":"pub fn visit_type_verbatim(&mut Self, &'ast TypeVerbatim)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":464987,"byte_end":465046,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":465200,"byte_end":465211,"line_start":391,"line_end":391,"column_start":4,"column_end":15},"name":"visit_un_op","qualname":"::gen::visit::Visit::visit_un_op","value":"pub fn visit_un_op(&mut Self, &'ast UnOp)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":465137,"byte_end":465196,"line_start":390,"line_end":390,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":465971,"byte_end":465984,"line_start":405,"line_end":405,"column_start":4,"column_end":17},"name":"visit_variant","qualname":"::gen::visit::Visit::visit_variant","value":"pub fn visit_variant(&mut Self, &'ast Variant)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":465908,"byte_end":465967,"line_start":404,"line_end":404,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466104,"byte_end":466119,"line_start":407,"line_end":407,"column_start":4,"column_end":19},"name":"visit_vis_crate","qualname":"::gen::visit::Visit::visit_vis_crate","value":"pub fn visit_vis_crate(&mut Self, &'ast VisCrate)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466041,"byte_end":466100,"line_start":406,"line_end":406,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466242,"byte_end":466258,"line_start":409,"line_end":409,"column_start":4,"column_end":20},"name":"visit_vis_public","qualname":"::gen::visit::Visit::visit_vis_public","value":"pub fn visit_vis_public(&mut Self, &'ast VisPublic)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466179,"byte_end":466238,"line_start":408,"line_end":408,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466383,"byte_end":466403,"line_start":411,"line_end":411,"column_start":4,"column_end":24},"name":"visit_vis_restricted","qualname":"::gen::visit::Visit::visit_vis_restricted","value":"pub fn visit_vis_restricted(&mut Self, &'ast VisRestricted)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466320,"byte_end":466379,"line_start":410,"line_end":410,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466536,"byte_end":466552,"line_start":413,"line_end":413,"column_start":4,"column_end":20},"name":"visit_visibility","qualname":"::gen::visit::Visit::visit_visibility","value":"pub fn visit_visibility(&mut Self, &'ast Visibility)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466473,"byte_end":466532,"line_start":412,"line_end":412,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466678,"byte_end":466696,"line_start":415,"line_end":415,"column_start":4,"column_end":22},"name":"visit_where_clause","qualname":"::gen::visit::Visit::visit_where_clause","value":"pub fn visit_where_clause(&mut Self, &'ast WhereClause)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466615,"byte_end":466674,"line_start":414,"line_end":414,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466825,"byte_end":466846,"line_start":417,"line_end":417,"column_start":4,"column_end":25},"name":"visit_where_predicate","qualname":"::gen::visit::Visit::visit_where_predicate","value":"pub fn visit_where_predicate(&mut Self, &'ast WherePredicate)","parent":{"krate":0,"index":1349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466762,"byte_end":466821,"line_start":416,"line_end":416,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466989,"byte_end":466998,"line_start":422,"line_end":422,"column_start":8,"column_end":17},"name":"visit_abi","qualname":"::gen::visit::visit_abi","value":"pub fn visit_abi<'ast, V: Visit + ?Sized>(&mut V, &'ast Abi)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":466922,"byte_end":466981,"line_start":421,"line_end":421,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":467257,"byte_end":467296,"line_start":427,"line_end":427,"column_start":8,"column_end":47},"name":"visit_angle_bracketed_generic_arguments","qualname":"::gen::visit::visit_angle_bracketed_generic_arguments","value":"pub fn visit_angle_bracketed_generic_arguments<'ast, V: Visit +\n                                               ?Sized>(&mut V,\n                                                       &'ast AngleBracketedGenericArguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":467190,"byte_end":467249,"line_start":426,"line_end":426,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":469400,"byte_end":469416,"line_start":465,"line_end":465,"column_start":8,"column_end":24},"name":"visit_attr_style","qualname":"::gen::visit::visit_attr_style","value":"pub fn visit_attr_style<'ast, V: Visit + ?Sized>(&mut V, &'ast AttrStyle)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":469333,"byte_end":469392,"line_start":464,"line_end":464,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":469724,"byte_end":469739,"line_start":474,"line_end":474,"column_start":8,"column_end":23},"name":"visit_attribute","qualname":"::gen::visit::visit_attribute","value":"pub fn visit_attribute<'ast, V: Visit + ?Sized>(&mut V, &'ast Attribute)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":469657,"byte_end":469716,"line_start":473,"line_end":473,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470147,"byte_end":470164,"line_start":483,"line_end":483,"column_start":8,"column_end":25},"name":"visit_bare_fn_arg","qualname":"::gen::visit::visit_bare_fn_arg","value":"pub fn visit_bare_fn_arg<'ast, V: Visit + ?Sized>(&mut V, &'ast BareFnArg)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470080,"byte_end":470139,"line_start":482,"line_end":482,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470508,"byte_end":470530,"line_start":491,"line_end":491,"column_start":8,"column_end":30},"name":"visit_bare_fn_arg_name","qualname":"::gen::visit::visit_bare_fn_arg_name","value":"pub fn visit_bare_fn_arg_name<'ast, V: Visit +\n                              ?Sized>(&mut V, &'ast BareFnArgName)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470441,"byte_end":470500,"line_start":490,"line_end":490,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470921,"byte_end":470933,"line_start":502,"line_end":502,"column_start":8,"column_end":20},"name":"visit_bin_op","qualname":"::gen::visit::visit_bin_op","value":"pub fn visit_bin_op<'ast, V: Visit + ?Sized>(&mut V, &'ast BinOp)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":470854,"byte_end":470913,"line_start":501,"line_end":501,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":474090,"byte_end":474103,"line_start":591,"line_end":591,"column_start":8,"column_end":21},"name":"visit_binding","qualname":"::gen::visit::visit_binding","value":"pub fn visit_binding<'ast, V: Visit + ?Sized>(&mut V, &'ast Binding)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":474023,"byte_end":474082,"line_start":590,"line_end":590,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":474660,"byte_end":474681,"line_start":602,"line_end":602,"column_start":8,"column_end":29},"name":"visit_bound_lifetimes","qualname":"::gen::visit::visit_bound_lifetimes","value":"pub fn visit_bound_lifetimes<'ast, V: Visit +\n                             ?Sized>(&mut V, &'ast BoundLifetimes)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":474593,"byte_end":474652,"line_start":601,"line_end":601,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":475090,"byte_end":475107,"line_start":609,"line_end":609,"column_start":8,"column_end":25},"name":"visit_const_param","qualname":"::gen::visit::visit_const_param","value":"pub fn visit_const_param<'ast, V: Visit + ?Sized>(&mut V, &'ast ConstParam)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":475023,"byte_end":475082,"line_start":608,"line_end":608,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":475614,"byte_end":475624,"line_start":619,"line_end":619,"column_start":8,"column_end":18},"name":"visit_data","qualname":"::gen::visit::visit_data","value":"pub fn visit_data<'ast, V: Visit + ?Sized>(&mut V, &'ast Data)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":475574,"byte_end":475606,"line_start":618,"line_end":618,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476068,"byte_end":476083,"line_start":633,"line_end":633,"column_start":8,"column_end":23},"name":"visit_data_enum","qualname":"::gen::visit::visit_data_enum","value":"pub fn visit_data_enum<'ast, V: Visit + ?Sized>(&mut V, &'ast DataEnum)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476028,"byte_end":476060,"line_start":632,"line_end":632,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476406,"byte_end":476423,"line_start":639,"line_end":639,"column_start":8,"column_end":25},"name":"visit_data_struct","qualname":"::gen::visit::visit_data_struct","value":"pub fn visit_data_struct<'ast, V: Visit + ?Sized>(&mut V, &'ast DataStruct)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476366,"byte_end":476398,"line_start":638,"line_end":638,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476716,"byte_end":476732,"line_start":645,"line_end":645,"column_start":8,"column_end":24},"name":"visit_data_union","qualname":"::gen::visit::visit_data_union","value":"pub fn visit_data_union<'ast, V: Visit + ?Sized>(&mut V, &'ast DataUnion)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476676,"byte_end":476708,"line_start":644,"line_end":644,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476949,"byte_end":476967,"line_start":650,"line_end":650,"column_start":8,"column_end":26},"name":"visit_derive_input","qualname":"::gen::visit::visit_derive_input","value":"pub fn visit_derive_input<'ast, V: Visit + ?Sized>(&mut V, &'ast DeriveInput)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"derive\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":476909,"byte_end":476941,"line_start":649,"line_end":649,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":477339,"byte_end":477349,"line_start":658,"line_end":658,"column_start":8,"column_end":18},"name":"visit_expr","qualname":"::gen::visit::visit_expr","value":"pub fn visit_expr<'ast, V: Visit + ?Sized>(&mut V, &'ast Expr)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":477272,"byte_end":477331,"line_start":657,"line_end":657,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":483091,"byte_end":483108,"line_start":803,"line_end":803,"column_start":8,"column_end":25},"name":"visit_expr_binary","qualname":"::gen::visit::visit_expr_binary","value":"pub fn visit_expr_binary<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprBinary)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":483024,"byte_end":483083,"line_start":802,"line_end":802,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":484504,"byte_end":484519,"line_start":828,"line_end":828,"column_start":8,"column_end":23},"name":"visit_expr_call","qualname":"::gen::visit::visit_expr_call","value":"pub fn visit_expr_call<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprCall)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":484437,"byte_end":484496,"line_start":827,"line_end":827,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":484910,"byte_end":484925,"line_start":835,"line_end":835,"column_start":8,"column_end":23},"name":"visit_expr_cast","qualname":"::gen::visit::visit_expr_cast","value":"pub fn visit_expr_cast<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprCast)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":484843,"byte_end":484902,"line_start":834,"line_end":834,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":489688,"byte_end":489704,"line_start":921,"line_end":921,"column_start":8,"column_end":24},"name":"visit_expr_index","qualname":"::gen::visit::visit_expr_index","value":"pub fn visit_expr_index<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprIndex)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":489621,"byte_end":489680,"line_start":920,"line_end":920,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":490044,"byte_end":490058,"line_start":928,"line_end":928,"column_start":8,"column_end":22},"name":"visit_expr_lit","qualname":"::gen::visit::visit_expr_lit","value":"pub fn visit_expr_lit<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprLit)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":489977,"byte_end":490036,"line_start":927,"line_end":927,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":492071,"byte_end":492087,"line_start":963,"line_end":963,"column_start":8,"column_end":24},"name":"visit_expr_paren","qualname":"::gen::visit::visit_expr_paren","value":"pub fn visit_expr_paren<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprParen)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":492004,"byte_end":492063,"line_start":962,"line_end":962,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":492384,"byte_end":492399,"line_start":969,"line_end":969,"column_start":8,"column_end":23},"name":"visit_expr_path","qualname":"::gen::visit::visit_expr_path","value":"pub fn visit_expr_path<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprPath)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":492317,"byte_end":492376,"line_start":968,"line_end":968,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":496114,"byte_end":496130,"line_start":1031,"line_end":1031,"column_start":8,"column_end":24},"name":"visit_expr_unary","qualname":"::gen::visit::visit_expr_unary","value":"pub fn visit_expr_unary<'ast, V: Visit + ?Sized>(&mut V, &'ast ExprUnary)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":496047,"byte_end":496106,"line_start":1030,"line_end":1030,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":496757,"byte_end":496776,"line_start":1043,"line_end":1043,"column_start":8,"column_end":27},"name":"visit_expr_verbatim","qualname":"::gen::visit::visit_expr_verbatim","value":"pub fn visit_expr_verbatim<'ast, V: Visit +\n                           ?Sized>(&mut V, &'ast ExprVerbatim)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":496690,"byte_end":496749,"line_start":1042,"line_end":1042,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":498431,"byte_end":498442,"line_start":1072,"line_end":1072,"column_start":8,"column_end":19},"name":"visit_field","qualname":"::gen::visit::visit_field","value":"pub fn visit_field<'ast, V: Visit + ?Sized>(&mut V, &'ast Field)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":498364,"byte_end":498423,"line_start":1071,"line_end":1071,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":499690,"byte_end":499702,"line_start":1094,"line_end":1094,"column_start":8,"column_end":20},"name":"visit_fields","qualname":"::gen::visit::visit_fields","value":"pub fn visit_fields<'ast, V: Visit + ?Sized>(&mut V, &'ast Fields)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":499623,"byte_end":499682,"line_start":1093,"line_end":1093,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":500111,"byte_end":500129,"line_start":1106,"line_end":1106,"column_start":8,"column_end":26},"name":"visit_fields_named","qualname":"::gen::visit::visit_fields_named","value":"pub fn visit_fields_named<'ast, V: Visit + ?Sized>(&mut V, &'ast FieldsNamed)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":500044,"byte_end":500103,"line_start":1105,"line_end":1105,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":500424,"byte_end":500444,"line_start":1111,"line_end":1111,"column_start":8,"column_end":28},"name":"visit_fields_unnamed","qualname":"::gen::visit::visit_fields_unnamed","value":"pub fn visit_fields_unnamed<'ast, V: Visit +\n                            ?Sized>(&mut V, &'ast FieldsUnnamed)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":500357,"byte_end":500416,"line_start":1110,"line_end":1110,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":504334,"byte_end":504356,"line_start":1199,"line_end":1199,"column_start":8,"column_end":30},"name":"visit_generic_argument","qualname":"::gen::visit::visit_generic_argument","value":"pub fn visit_generic_argument<'ast, V: Visit +\n                              ?Sized>(&mut V, &'ast GenericArgument)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":504267,"byte_end":504326,"line_start":1198,"line_end":1198,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":505438,"byte_end":505457,"line_start":1227,"line_end":1227,"column_start":8,"column_end":27},"name":"visit_generic_param","qualname":"::gen::visit::visit_generic_param","value":"pub fn visit_generic_param<'ast, V: Visit +\n                           ?Sized>(&mut V, &'ast GenericParam)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":505371,"byte_end":505430,"line_start":1226,"line_end":1226,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":505965,"byte_end":505979,"line_start":1241,"line_end":1241,"column_start":8,"column_end":22},"name":"visit_generics","qualname":"::gen::visit::visit_generics","value":"pub fn visit_generics<'ast, V: Visit + ?Sized>(&mut V, &'ast Generics)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":505898,"byte_end":505957,"line_start":1240,"line_end":1240,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":506404,"byte_end":506415,"line_start":1248,"line_end":1248,"column_start":8,"column_end":19},"name":"visit_ident","qualname":"::gen::visit::visit_ident","value":"pub fn visit_ident<'ast, V: Visit + ?Sized>(&mut V, &'ast Ident)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":509454,"byte_end":509465,"line_start":1315,"line_end":1315,"column_start":8,"column_end":19},"name":"visit_index","qualname":"::gen::visit::visit_index","value":"pub fn visit_index<'ast, V: Visit + ?Sized>(&mut V, &'ast Index)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":509387,"byte_end":509446,"line_start":1314,"line_end":1314,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520223,"byte_end":520237,"line_start":1547,"line_end":1547,"column_start":8,"column_end":22},"name":"visit_lifetime","qualname":"::gen::visit::visit_lifetime","value":"pub fn visit_lifetime<'ast, V: Visit + ?Sized>(&mut V, &'ast Lifetime)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520156,"byte_end":520215,"line_start":1546,"line_end":1546,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520410,"byte_end":520428,"line_start":1551,"line_end":1551,"column_start":8,"column_end":26},"name":"visit_lifetime_def","qualname":"::gen::visit::visit_lifetime_def","value":"pub fn visit_lifetime_def<'ast, V: Visit + ?Sized>(&mut V, &'ast LifetimeDef)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520343,"byte_end":520402,"line_start":1550,"line_end":1550,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520861,"byte_end":520870,"line_start":1558,"line_end":1558,"column_start":8,"column_end":17},"name":"visit_lit","qualname":"::gen::visit::visit_lit","value":"pub fn visit_lit<'ast, V: Visit + ?Sized>(&mut V, &'ast Lit)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":520794,"byte_end":520853,"line_start":1557,"line_end":1557,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":521841,"byte_end":521855,"line_start":1587,"line_end":1587,"column_start":8,"column_end":22},"name":"visit_lit_bool","qualname":"::gen::visit::visit_lit_bool","value":"pub fn visit_lit_bool<'ast, V: Visit + ?Sized>(&mut V, &'ast LitBool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":521774,"byte_end":521833,"line_start":1586,"line_end":1586,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522066,"byte_end":522080,"line_start":1592,"line_end":1592,"column_start":8,"column_end":22},"name":"visit_lit_byte","qualname":"::gen::visit::visit_lit_byte","value":"pub fn visit_lit_byte<'ast, V: Visit + ?Sized>(&mut V, &'ast LitByte)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":521999,"byte_end":522058,"line_start":1591,"line_end":1591,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522253,"byte_end":522271,"line_start":1596,"line_end":1596,"column_start":8,"column_end":26},"name":"visit_lit_byte_str","qualname":"::gen::visit::visit_lit_byte_str","value":"pub fn visit_lit_byte_str<'ast, V: Visit + ?Sized>(&mut V, &'ast LitByteStr)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522186,"byte_end":522245,"line_start":1595,"line_end":1595,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522447,"byte_end":522461,"line_start":1600,"line_end":1600,"column_start":8,"column_end":22},"name":"visit_lit_char","qualname":"::gen::visit::visit_lit_char","value":"pub fn visit_lit_char<'ast, V: Visit + ?Sized>(&mut V, &'ast LitChar)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522380,"byte_end":522439,"line_start":1599,"line_end":1599,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522634,"byte_end":522649,"line_start":1604,"line_end":1604,"column_start":8,"column_end":23},"name":"visit_lit_float","qualname":"::gen::visit::visit_lit_float","value":"pub fn visit_lit_float<'ast, V: Visit + ?Sized>(&mut V, &'ast LitFloat)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522567,"byte_end":522626,"line_start":1603,"line_end":1603,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522823,"byte_end":522836,"line_start":1608,"line_end":1608,"column_start":8,"column_end":21},"name":"visit_lit_int","qualname":"::gen::visit::visit_lit_int","value":"pub fn visit_lit_int<'ast, V: Visit + ?Sized>(&mut V, &'ast LitInt)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522756,"byte_end":522815,"line_start":1607,"line_end":1607,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":523008,"byte_end":523021,"line_start":1612,"line_end":1612,"column_start":8,"column_end":21},"name":"visit_lit_str","qualname":"::gen::visit::visit_lit_str","value":"pub fn visit_lit_str<'ast, V: Visit + ?Sized>(&mut V, &'ast LitStr)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":522941,"byte_end":523000,"line_start":1611,"line_end":1611,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":523193,"byte_end":523211,"line_start":1616,"line_end":1616,"column_start":8,"column_end":26},"name":"visit_lit_verbatim","qualname":"::gen::visit::visit_lit_verbatim","value":"pub fn visit_lit_verbatim<'ast, V: Visit + ?Sized>(&mut V, &'ast LitVerbatim)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":523126,"byte_end":523185,"line_start":1615,"line_end":1615,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":524138,"byte_end":524149,"line_start":1635,"line_end":1635,"column_start":8,"column_end":19},"name":"visit_macro","qualname":"::gen::visit::visit_macro","value":"pub fn visit_macro<'ast, V: Visit + ?Sized>(&mut V, &'ast Macro)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":524071,"byte_end":524130,"line_start":1634,"line_end":1634,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":524463,"byte_end":524484,"line_start":1642,"line_end":1642,"column_start":8,"column_end":29},"name":"visit_macro_delimiter","qualname":"::gen::visit::visit_macro_delimiter","value":"pub fn visit_macro_delimiter<'ast, V: Visit +\n                             ?Sized>(&mut V, &'ast MacroDelimiter)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":524396,"byte_end":524455,"line_start":1641,"line_end":1641,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":525006,"byte_end":525018,"line_start":1656,"line_end":1656,"column_start":8,"column_end":20},"name":"visit_member","qualname":"::gen::visit::visit_member","value":"pub fn visit_member<'ast, V: Visit + ?Sized>(&mut V, &'ast Member)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":524939,"byte_end":524998,"line_start":1655,"line_end":1655,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":525383,"byte_end":525393,"line_start":1667,"line_end":1667,"column_start":8,"column_end":18},"name":"visit_meta","qualname":"::gen::visit::visit_meta","value":"pub fn visit_meta<'ast, V: Visit + ?Sized>(&mut V, &'ast Meta)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":525316,"byte_end":525375,"line_start":1666,"line_end":1666,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":525865,"byte_end":525880,"line_start":1681,"line_end":1681,"column_start":8,"column_end":23},"name":"visit_meta_list","qualname":"::gen::visit::visit_meta_list","value":"pub fn visit_meta_list<'ast, V: Visit + ?Sized>(&mut V, &'ast MetaList)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":525798,"byte_end":525857,"line_start":1680,"line_end":1680,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":526219,"byte_end":526240,"line_start":1687,"line_end":1687,"column_start":8,"column_end":29},"name":"visit_meta_name_value","qualname":"::gen::visit::visit_meta_name_value","value":"pub fn visit_meta_name_value<'ast, V: Visit +\n                             ?Sized>(&mut V, &'ast MetaNameValue)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":526152,"byte_end":526211,"line_start":1686,"line_end":1686,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":527415,"byte_end":527432,"line_start":1708,"line_end":1708,"column_start":8,"column_end":25},"name":"visit_nested_meta","qualname":"::gen::visit::visit_nested_meta","value":"pub fn visit_nested_meta<'ast, V: Visit + ?Sized>(&mut V, &'ast NestedMeta)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":527348,"byte_end":527407,"line_start":1707,"line_end":1707,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":527805,"byte_end":527842,"line_start":1719,"line_end":1719,"column_start":8,"column_end":45},"name":"visit_parenthesized_generic_arguments","qualname":"::gen::visit::visit_parenthesized_generic_arguments","value":"pub fn visit_parenthesized_generic_arguments<'ast, V: Visit +\n                                             ?Sized>(&mut V,\n                                                     &'ast ParenthesizedGenericArguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":527738,"byte_end":527797,"line_start":1718,"line_end":1718,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":534413,"byte_end":534423,"line_start":1846,"line_end":1846,"column_start":8,"column_end":18},"name":"visit_path","qualname":"::gen::visit::visit_path","value":"pub fn visit_path<'ast, V: Visit + ?Sized>(&mut V, &'ast Path)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":534346,"byte_end":534405,"line_start":1845,"line_end":1845,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":534750,"byte_end":534770,"line_start":1851,"line_end":1851,"column_start":8,"column_end":28},"name":"visit_path_arguments","qualname":"::gen::visit::visit_path_arguments","value":"pub fn visit_path_arguments<'ast, V: Visit +\n                            ?Sized>(&mut V, &'ast PathArguments)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":534683,"byte_end":534742,"line_start":1850,"line_end":1850,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535260,"byte_end":535278,"line_start":1863,"line_end":1863,"column_start":8,"column_end":26},"name":"visit_path_segment","qualname":"::gen::visit::visit_path_segment","value":"pub fn visit_path_segment<'ast, V: Visit + ?Sized>(&mut V, &'ast PathSegment)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535193,"byte_end":535252,"line_start":1862,"line_end":1862,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535515,"byte_end":535533,"line_start":1868,"line_end":1868,"column_start":8,"column_end":26},"name":"visit_predicate_eq","qualname":"::gen::visit::visit_predicate_eq","value":"pub fn visit_predicate_eq<'ast, V: Visit + ?Sized>(&mut V, &'ast PredicateEq)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535448,"byte_end":535507,"line_start":1867,"line_end":1867,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535808,"byte_end":535832,"line_start":1874,"line_end":1874,"column_start":8,"column_end":32},"name":"visit_predicate_lifetime","qualname":"::gen::visit::visit_predicate_lifetime","value":"pub fn visit_predicate_lifetime<'ast, V: Visit +\n                                ?Sized>(&mut V, &'ast PredicateLifetime)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":535741,"byte_end":535800,"line_start":1873,"line_end":1873,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":536210,"byte_end":536230,"line_start":1880,"line_end":1880,"column_start":8,"column_end":28},"name":"visit_predicate_type","qualname":"::gen::visit::visit_predicate_type","value":"pub fn visit_predicate_type<'ast, V: Visit +\n                            ?Sized>(&mut V, &'ast PredicateType)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":536143,"byte_end":536202,"line_start":1879,"line_end":1879,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":536664,"byte_end":536675,"line_start":1887,"line_end":1887,"column_start":8,"column_end":19},"name":"visit_qself","qualname":"::gen::visit::visit_qself","value":"pub fn visit_qself<'ast, V: Visit + ?Sized>(&mut V, &'ast QSelf)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":536597,"byte_end":536656,"line_start":1886,"line_end":1886,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":537514,"byte_end":537531,"line_start":1906,"line_end":1906,"column_start":8,"column_end":25},"name":"visit_return_type","qualname":"::gen::visit::visit_return_type","value":"pub fn visit_return_type<'ast, V: Visit + ?Sized>(&mut V, &'ast ReturnType)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":537447,"byte_end":537506,"line_start":1905,"line_end":1905,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":537851,"byte_end":537861,"line_start":1916,"line_end":1916,"column_start":8,"column_end":18},"name":"visit_span","qualname":"::gen::visit::visit_span","value":"pub fn visit_span<'ast, V: Visit + ?Sized>(&mut V, &'ast Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":538658,"byte_end":538675,"line_start":1937,"line_end":1937,"column_start":8,"column_end":25},"name":"visit_trait_bound","qualname":"::gen::visit::visit_trait_bound","value":"pub fn visit_trait_bound<'ast, V: Visit + ?Sized>(&mut V, &'ast TraitBound)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":538591,"byte_end":538650,"line_start":1936,"line_end":1936,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":539076,"byte_end":539102,"line_start":1944,"line_end":1944,"column_start":8,"column_end":34},"name":"visit_trait_bound_modifier","qualname":"::gen::visit::visit_trait_bound_modifier","value":"pub fn visit_trait_bound_modifier<'ast, V: Visit +\n                                  ?Sized>(&mut V, &'ast TraitBoundModifier)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":539009,"byte_end":539068,"line_start":1943,"line_end":1943,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":542392,"byte_end":542402,"line_start":2017,"line_end":2017,"column_start":8,"column_end":18},"name":"visit_type","qualname":"::gen::visit::visit_type","value":"pub fn visit_type<'ast, V: Visit + ?Sized>(&mut V, &'ast Type)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":542325,"byte_end":542384,"line_start":2016,"line_end":2016,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":544154,"byte_end":544170,"line_start":2067,"line_end":2067,"column_start":8,"column_end":24},"name":"visit_type_array","qualname":"::gen::visit::visit_type_array","value":"pub fn visit_type_array<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeArray)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":544087,"byte_end":544146,"line_start":2066,"line_end":2066,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":544498,"byte_end":544516,"line_start":2074,"line_end":2074,"column_start":8,"column_end":26},"name":"visit_type_bare_fn","qualname":"::gen::visit::visit_type_bare_fn","value":"pub fn visit_type_bare_fn<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeBareFn)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":544431,"byte_end":544490,"line_start":2073,"line_end":2073,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545215,"byte_end":545231,"line_start":2085,"line_end":2085,"column_start":8,"column_end":24},"name":"visit_type_group","qualname":"::gen::visit::visit_type_group","value":"pub fn visit_type_group<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeGroup)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545148,"byte_end":545207,"line_start":2084,"line_end":2084,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545467,"byte_end":545488,"line_start":2090,"line_end":2090,"column_start":8,"column_end":29},"name":"visit_type_impl_trait","qualname":"::gen::visit::visit_type_impl_trait","value":"pub fn visit_type_impl_trait<'ast, V: Visit +\n                             ?Sized>(&mut V, &'ast TypeImplTrait)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545400,"byte_end":545459,"line_start":2089,"line_end":2089,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545796,"byte_end":545812,"line_start":2095,"line_end":2095,"column_start":8,"column_end":24},"name":"visit_type_infer","qualname":"::gen::visit::visit_type_infer","value":"pub fn visit_type_infer<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeInfer)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545729,"byte_end":545788,"line_start":2094,"line_end":2094,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546013,"byte_end":546029,"line_start":2099,"line_end":2099,"column_start":8,"column_end":24},"name":"visit_type_macro","qualname":"::gen::visit::visit_type_macro","value":"pub fn visit_type_macro<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeMacro)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":545946,"byte_end":546005,"line_start":2098,"line_end":2098,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546209,"byte_end":546225,"line_start":2103,"line_end":2103,"column_start":8,"column_end":24},"name":"visit_type_never","qualname":"::gen::visit::visit_type_never","value":"pub fn visit_type_never<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeNever)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546142,"byte_end":546201,"line_start":2102,"line_end":2102,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546420,"byte_end":546436,"line_start":2107,"line_end":2107,"column_start":8,"column_end":24},"name":"visit_type_param","qualname":"::gen::visit::visit_type_param","value":"pub fn visit_type_param<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeParam)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546353,"byte_end":546412,"line_start":2106,"line_end":2106,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547015,"byte_end":547037,"line_start":2116,"line_end":2116,"column_start":8,"column_end":30},"name":"visit_type_param_bound","qualname":"::gen::visit::visit_type_param_bound","value":"pub fn visit_type_param_bound<'ast, V: Visit +\n                              ?Sized>(&mut V, &'ast TypeParamBound)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":546948,"byte_end":547007,"line_start":2115,"line_end":2115,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547436,"byte_end":547452,"line_start":2127,"line_end":2127,"column_start":8,"column_end":24},"name":"visit_type_paren","qualname":"::gen::visit::visit_type_paren","value":"pub fn visit_type_paren<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeParen)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547369,"byte_end":547428,"line_start":2126,"line_end":2126,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547688,"byte_end":547703,"line_start":2132,"line_end":2132,"column_start":8,"column_end":23},"name":"visit_type_path","qualname":"::gen::visit::visit_type_path","value":"pub fn visit_type_path<'ast, V: Visit + ?Sized>(&mut V, &'ast TypePath)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547621,"byte_end":547680,"line_start":2131,"line_end":2131,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547949,"byte_end":547963,"line_start":2137,"line_end":2137,"column_start":8,"column_end":22},"name":"visit_type_ptr","qualname":"::gen::visit::visit_type_ptr","value":"pub fn visit_type_ptr<'ast, V: Visit + ?Sized>(&mut V, &'ast TypePtr)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":547882,"byte_end":547941,"line_start":2136,"line_end":2136,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":548357,"byte_end":548377,"line_start":2144,"line_end":2144,"column_start":8,"column_end":28},"name":"visit_type_reference","qualname":"::gen::visit::visit_type_reference","value":"pub fn visit_type_reference<'ast, V: Visit +\n                            ?Sized>(&mut V, &'ast TypeReference)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":548290,"byte_end":548349,"line_start":2143,"line_end":2143,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":548768,"byte_end":548784,"line_start":2151,"line_end":2151,"column_start":8,"column_end":24},"name":"visit_type_slice","qualname":"::gen::visit::visit_type_slice","value":"pub fn visit_type_slice<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeSlice)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":548701,"byte_end":548760,"line_start":2150,"line_end":2150,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549022,"byte_end":549045,"line_start":2156,"line_end":2156,"column_start":8,"column_end":31},"name":"visit_type_trait_object","qualname":"::gen::visit::visit_type_trait_object","value":"pub fn visit_type_trait_object<'ast, V: Visit +\n                               ?Sized>(&mut V, &'ast TypeTraitObject)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":548955,"byte_end":549014,"line_start":2155,"line_end":2155,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549381,"byte_end":549397,"line_start":2161,"line_end":2161,"column_start":8,"column_end":24},"name":"visit_type_tuple","qualname":"::gen::visit::visit_type_tuple","value":"pub fn visit_type_tuple<'ast, V: Visit + ?Sized>(&mut V, &'ast TypeTuple)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549314,"byte_end":549373,"line_start":2160,"line_end":2160,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549689,"byte_end":549708,"line_start":2166,"line_end":2166,"column_start":8,"column_end":27},"name":"visit_type_verbatim","qualname":"::gen::visit::visit_type_verbatim","value":"pub fn visit_type_verbatim<'ast, V: Visit +\n                           ?Sized>(&mut V, &'ast TypeVerbatim)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549622,"byte_end":549681,"line_start":2165,"line_end":2165,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549884,"byte_end":549895,"line_start":2170,"line_end":2170,"column_start":8,"column_end":19},"name":"visit_un_op","qualname":"::gen::visit::visit_un_op","value":"pub fn visit_un_op<'ast, V: Visit + ?Sized>(&mut V, &'ast UnOp)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":549817,"byte_end":549876,"line_start":2169,"line_end":2169,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552193,"byte_end":552206,"line_start":2229,"line_end":2229,"column_start":8,"column_end":21},"name":"visit_variant","qualname":"::gen::visit::visit_variant","value":"pub fn visit_variant<'ast, V: Visit + ?Sized>(&mut V, &'ast Variant)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552126,"byte_end":552185,"line_start":2228,"line_end":2228,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552651,"byte_end":552666,"line_start":2239,"line_end":2239,"column_start":8,"column_end":23},"name":"visit_vis_crate","qualname":"::gen::visit::visit_vis_crate","value":"pub fn visit_vis_crate<'ast, V: Visit + ?Sized>(&mut V, &'ast VisCrate)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552584,"byte_end":552643,"line_start":2238,"line_end":2238,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552861,"byte_end":552877,"line_start":2243,"line_end":2243,"column_start":8,"column_end":24},"name":"visit_vis_public","qualname":"::gen::visit::visit_vis_public","value":"pub fn visit_vis_public<'ast, V: Visit + ?Sized>(&mut V, &'ast VisPublic)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":552794,"byte_end":552853,"line_start":2242,"line_end":2242,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":553071,"byte_end":553091,"line_start":2247,"line_end":2247,"column_start":8,"column_end":28},"name":"visit_vis_restricted","qualname":"::gen::visit::visit_vis_restricted","value":"pub fn visit_vis_restricted<'ast, V: Visit +\n                            ?Sized>(&mut V, &'ast VisRestricted)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":553004,"byte_end":553063,"line_start":2246,"line_end":2246,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":553461,"byte_end":553477,"line_start":2254,"line_end":2254,"column_start":8,"column_end":24},"name":"visit_visibility","qualname":"::gen::visit::visit_visibility","value":"pub fn visit_visibility<'ast, V: Visit + ?Sized>(&mut V, &'ast Visibility)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":553394,"byte_end":553453,"line_start":2253,"line_end":2253,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":554018,"byte_end":554036,"line_start":2269,"line_end":2269,"column_start":8,"column_end":26},"name":"visit_where_clause","qualname":"::gen::visit::visit_where_clause","value":"pub fn visit_where_clause<'ast, V: Visit + ?Sized>(&mut V, &'ast WhereClause)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":553951,"byte_end":554010,"line_start":2268,"line_end":2268,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":554346,"byte_end":554367,"line_start":2274,"line_end":2274,"column_start":8,"column_end":29},"name":"visit_where_predicate","qualname":"::gen::visit::visit_where_predicate","value":"pub fn visit_where_predicate<'ast, V: Visit +\n                             ?Sized>(&mut V, &'ast WherePredicate)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/visit.rs","byte_start":554279,"byte_end":554338,"line_start":2273,"line_end":2273,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559976,"byte_end":559983,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"PResult","qualname":"::error::PResult","value":"Result<(O, Cursor), ParseError>","parent":null,"children":[],"decl_id":null,"docs":" The result of a `Synom` parser.","sig":null,"attributes":[{"value":"/ The result of a `Synom` parser.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559731,"byte_end":559766,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559767,"byte_end":559770,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559771,"byte_end":559844,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559845,"byte_end":559848,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559849,"byte_end":559887,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559888,"byte_end":559891,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":559892,"byte_end":559966,"line_start":19,"line_end":19,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560150,"byte_end":560161,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"parse_error","qualname":"::error::parse_error","value":"pub fn parse_error<O>() -> PResult","parent":null,"children":[],"decl_id":null,"docs":" An error with a default error message.","sig":null,"attributes":[{"value":"/ An error with a default error message.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560031,"byte_end":560073,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560074,"byte_end":560077,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ NOTE: We should provide better error messages in the future.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560078,"byte_end":560142,"line_start":24,"line_end":24,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560521,"byte_end":560531,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::error::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a `Synom` parser cannot parse the input tokens.","sig":null,"attributes":[{"value":"/ Error returned when a `Synom` parser cannot parse the input tokens.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560221,"byte_end":560292,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560293,"byte_end":560296,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560297,"byte_end":560370,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560371,"byte_end":560374,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560375,"byte_end":560413,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560414,"byte_end":560417,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560418,"byte_end":560492,"line_start":35,"line_end":35,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560962,"byte_end":560965,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseError>::new","value":"pub fn new<T: Into<String>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21297,"byte_end":21302,"line_start":577,"line_end":577,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"pub fn parse<T>(proc_macro::TokenStream) -> Result<T, ParseError> where\nT: Synom","parent":null,"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":19871,"byte_end":19936,"line_start":530,"line_end":530,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":19937,"byte_end":19940,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ This is preferred over parsing a string because tokens are able to preserve","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":19941,"byte_end":20020,"line_start":532,"line_end":532,"column_start":1,"column_end":80}},{"value":"/ information about where in the user's code they were originally written (the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20021,"byte_end":20101,"line_start":533,"line_end":533,"column_start":1,"column_end":81}},{"value":"/ \"span\" of the token), possibly allowing the compiler to produce better error","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20102,"byte_end":20182,"line_start":534,"line_end":534,"column_start":1,"column_end":81}},{"value":"/ messages.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20183,"byte_end":20196,"line_start":535,"line_end":535,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20197,"byte_end":20200,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro::TokenStream` which is the type used for","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20201,"byte_end":20280,"line_start":537,"line_end":537,"column_start":1,"column_end":80}},{"value":"/ interop with the compiler in a procedural macro. To parse a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20281,"byte_end":20344,"line_start":538,"line_end":538,"column_start":1,"column_end":64}},{"value":"/ `proc_macro2::TokenStream`, use [`syn::parse2`] instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20345,"byte_end":20405,"line_start":539,"line_end":539,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20406,"byte_end":20409,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse2`]: fn.parse2.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20410,"byte_end":20445,"line_start":541,"line_end":541,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20446,"byte_end":20449,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20450,"byte_end":20528,"line_start":543,"line_end":543,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20529,"byte_end":20532,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20533,"byte_end":20547,"line_start":545,"line_end":545,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20548,"byte_end":20551,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20552,"byte_end":20563,"line_start":547,"line_end":547,"column_start":1,"column_end":12}},{"value":"/ extern crate proc_macro;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20564,"byte_end":20592,"line_start":548,"line_end":548,"column_start":1,"column_end":29}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20593,"byte_end":20625,"line_start":549,"line_end":549,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20626,"byte_end":20629,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20630,"byte_end":20651,"line_start":551,"line_end":551,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20652,"byte_end":20655,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ #[macro_use]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20656,"byte_end":20672,"line_start":553,"line_end":553,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20673,"byte_end":20696,"line_start":554,"line_end":554,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20697,"byte_end":20700,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ use syn::DeriveInput;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20701,"byte_end":20726,"line_start":556,"line_end":556,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20727,"byte_end":20730,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20731,"byte_end":20777,"line_start":558,"line_end":558,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20778,"byte_end":20811,"line_start":559,"line_end":559,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20812,"byte_end":20820,"line_start":560,"line_end":560,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20821,"byte_end":20877,"line_start":561,"line_end":561,"column_start":1,"column_end":57}},{"value":"/     // Parse the tokens into a syntax tree","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20878,"byte_end":20924,"line_start":562,"line_end":562,"column_start":1,"column_end":47}},{"value":"/     let ast: DeriveInput = syn::parse(input).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20925,"byte_end":20983,"line_start":563,"line_end":563,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20984,"byte_end":20987,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":20988,"byte_end":21047,"line_start":565,"line_end":565,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21048,"byte_end":21079,"line_start":566,"line_end":566,"column_start":1,"column_end":32}},{"value":"/         /* ... */","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21080,"byte_end":21101,"line_start":567,"line_end":567,"column_start":1,"column_end":22}},{"value":"/     };","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21102,"byte_end":21112,"line_start":568,"line_end":568,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21113,"byte_end":21116,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/     // Convert into a token stream and return it","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21117,"byte_end":21169,"line_start":570,"line_end":570,"column_start":1,"column_end":53}},{"value":"/     expanded.into()","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21170,"byte_end":21193,"line_start":571,"line_end":571,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21194,"byte_end":21199,"line_start":572,"line_end":572,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21200,"byte_end":21205,"line_start":573,"line_end":573,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21206,"byte_end":21224,"line_start":574,"line_end":574,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21225,"byte_end":21232,"line_start":575,"line_end":575,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"parsing\", feature = \"proc-macro\"))","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21233,"byte_end":21289,"line_start":576,"line_end":576,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21991,"byte_end":21997,"line_start":597,"line_end":597,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse2","value":"pub fn parse2<T>(proc_macro2::TokenStream) -> Result<T, ParseError> where\nT: Synom","parent":null,"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21415,"byte_end":21485,"line_start":584,"line_end":584,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21486,"byte_end":21489,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro2::TokenStream` which is commonly useful","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21490,"byte_end":21568,"line_start":586,"line_end":586,"column_start":1,"column_end":79}},{"value":"/ when the input comes from a node of the Syn syntax tree, for example the tts","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21569,"byte_end":21649,"line_start":587,"line_end":587,"column_start":1,"column_end":81}},{"value":"/ of a [`Macro`] node. When in a procedural macro parsing the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21650,"byte_end":21713,"line_start":588,"line_end":588,"column_start":1,"column_end":64}},{"value":"/ `proc_macro::TokenStream` provided by the compiler, use [`syn::parse`]","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21714,"byte_end":21788,"line_start":589,"line_end":589,"column_start":1,"column_end":75}},{"value":"/ instead.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21789,"byte_end":21801,"line_start":590,"line_end":590,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21802,"byte_end":21805,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ [`Macro`]: struct.Macro.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21806,"byte_end":21838,"line_start":592,"line_end":592,"column_start":1,"column_end":33}},{"value":"/ [`syn::parse`]: fn.parse.html","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21839,"byte_end":21872,"line_start":593,"line_end":593,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21873,"byte_end":21876,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21877,"byte_end":21955,"line_start":595,"line_end":595,"column_start":1,"column_end":79}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":21956,"byte_end":21983,"line_start":596,"line_end":596,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":23017,"byte_end":23026,"line_start":639,"line_end":639,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse_str","value":"pub fn parse_str<T: Synom>(&str) -> Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22312,"byte_end":22377,"line_start":610,"line_end":610,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22378,"byte_end":22381,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22382,"byte_end":22460,"line_start":612,"line_end":612,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22461,"byte_end":22464,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ # Hygiene","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22465,"byte_end":22478,"line_start":614,"line_end":614,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22479,"byte_end":22482,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the macro","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22483,"byte_end":22562,"line_start":616,"line_end":616,"column_start":1,"column_end":80}},{"value":"/ call site.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22563,"byte_end":22577,"line_start":617,"line_end":617,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22578,"byte_end":22581,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22582,"byte_end":22596,"line_start":619,"line_end":619,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22597,"byte_end":22600,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22601,"byte_end":22612,"line_start":621,"line_end":621,"column_start":1,"column_end":12}},{"value":"/ extern crate syn;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22613,"byte_end":22634,"line_start":622,"line_end":622,"column_start":1,"column_end":22}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22635,"byte_end":22640,"line_start":623,"line_end":623,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22641,"byte_end":22646,"line_start":624,"line_end":624,"column_start":1,"column_end":6}},{"value":"/ # type Result<T> = std::result::Result<T, Box<std::error::Error>>;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22647,"byte_end":22717,"line_start":625,"line_end":625,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22718,"byte_end":22721,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ use syn::Expr;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22722,"byte_end":22740,"line_start":627,"line_end":627,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22741,"byte_end":22744,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ fn run() -> Result<()> {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22745,"byte_end":22773,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/     let code = \"assert_eq!(u8::max_value(), 255)\";","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22774,"byte_end":22828,"line_start":630,"line_end":630,"column_start":1,"column_end":55}},{"value":"/     let expr = syn::parse_str::<Expr>(code)?;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22829,"byte_end":22878,"line_start":631,"line_end":631,"column_start":1,"column_end":50}},{"value":"/     println!(\"{:#?}\", expr);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22879,"byte_end":22911,"line_start":632,"line_end":632,"column_start":1,"column_end":33}},{"value":"/     Ok(())","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22912,"byte_end":22926,"line_start":633,"line_end":633,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22927,"byte_end":22932,"line_start":634,"line_end":634,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22933,"byte_end":22938,"line_start":635,"line_end":635,"column_start":1,"column_end":6}},{"value":"/ # fn main() { run().unwrap() }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22939,"byte_end":22973,"line_start":636,"line_end":636,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22974,"byte_end":22981,"line_start":637,"line_end":637,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":22982,"byte_end":23009,"line_start":638,"line_end":638,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":103863,"byte_end":103872,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110863,"byte_end":110867,"line_start":336,"line_end":336,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111963,"byte_end":111964,"line_start":372,"line_end":372,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":112948,"byte_end":112957,"line_start":413,"line_end":413,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":116717,"byte_end":116726,"line_start":527,"line_end":527,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":117140,"byte_end":117148,"line_start":540,"line_end":540,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":117402,"byte_end":117415,"line_start":549,"line_end":549,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119646,"byte_end":119652,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122486,"byte_end":122493,"line_start":168,"line_end":168,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":123221,"byte_end":123232,"line_start":193,"line_end":193,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":123642,"byte_end":123655,"line_start":207,"line_end":207,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124068,"byte_end":124073,"line_start":221,"line_end":221,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3624},{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124905,"byte_end":124915,"line_start":251,"line_end":251,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127359,"byte_end":127366,"line_start":327,"line_end":327,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127758,"byte_end":127769,"line_start":339,"line_end":339,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127981,"byte_end":127994,"line_start":347,"line_end":347,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128208,"byte_end":128213,"line_start":355,"line_end":355,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128604,"byte_end":128613,"line_start":367,"line_end":367,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128751,"byte_end":128759,"line_start":373,"line_end":373,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128900,"byte_end":128913,"line_start":379,"line_end":379,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":148544,"byte_end":148548,"line_start":560,"line_end":560,"column_start":6,"column_end":10},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151871,"byte_end":151876,"line_start":638,"line_end":638,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":164440,"byte_end":164444,"line_start":1060,"line_end":1060,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":181704,"byte_end":181711,"line_start":1618,"line_end":1618,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4046},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":182808,"byte_end":182817,"line_start":1663,"line_end":1663,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4047},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":201213,"byte_end":201221,"line_start":2280,"line_end":2280,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":218871,"byte_end":218879,"line_start":2874,"line_end":2874,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":220905,"byte_end":220915,"line_start":2933,"line_end":2933,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221180,"byte_end":221189,"line_start":2942,"line_end":2942,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221412,"byte_end":221419,"line_start":2950,"line_end":2950,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221602,"byte_end":221610,"line_start":2957,"line_end":2957,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229207,"byte_end":229213,"line_start":3181,"line_end":3181,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229482,"byte_end":229487,"line_start":3190,"line_end":3190,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229723,"byte_end":229732,"line_start":3198,"line_end":3198,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":230481,"byte_end":230489,"line_start":3221,"line_end":3221,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":233326,"byte_end":233335,"line_start":3311,"line_end":3311,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":233868,"byte_end":233880,"line_start":3329,"line_end":3329,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244962,"byte_end":244970,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248173,"byte_end":248183,"line_start":165,"line_end":165,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248672,"byte_end":248685,"line_start":184,"line_end":184,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249175,"byte_end":249184,"line_start":203,"line_end":203,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249674,"byte_end":249686,"line_start":222,"line_end":222,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250180,"byte_end":250191,"line_start":241,"line_end":241,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250685,"byte_end":250699,"line_start":260,"line_end":260,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252251,"byte_end":252259,"line_start":305,"line_end":305,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253255,"byte_end":253267,"line_start":338,"line_end":338,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253974,"byte_end":253985,"line_start":362,"line_end":362,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254228,"byte_end":254237,"line_start":373,"line_end":373,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257781,"byte_end":257789,"line_start":492,"line_end":492,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4214},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":259187,"byte_end":259199,"line_start":528,"line_end":528,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":259574,"byte_end":259585,"line_start":542,"line_end":542,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4220},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":260221,"byte_end":260235,"line_start":564,"line_end":564,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":260746,"byte_end":260755,"line_start":583,"line_end":583,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":261643,"byte_end":261657,"line_start":612,"line_end":612,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4225},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":262158,"byte_end":262168,"line_start":629,"line_end":629,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4228},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":263168,"byte_end":263186,"line_start":657,"line_end":657,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":263494,"byte_end":263504,"line_start":669,"line_end":669,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":264476,"byte_end":264487,"line_start":699,"line_end":699,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":264885,"byte_end":264899,"line_start":714,"line_end":714,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4233},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":266185,"byte_end":266193,"line_start":756,"line_end":756,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":267606,"byte_end":267618,"line_start":793,"line_end":793,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":269970,"byte_end":269982,"line_start":848,"line_end":848,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":271943,"byte_end":271952,"line_start":896,"line_end":896,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272221,"byte_end":272235,"line_start":905,"line_end":905,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272510,"byte_end":272521,"line_start":914,"line_end":914,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272882,"byte_end":272891,"line_start":925,"line_end":925,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":273418,"byte_end":273428,"line_start":940,"line_end":940,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":273896,"byte_end":273914,"line_start":954,"line_end":954,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274167,"byte_end":274177,"line_start":963,"line_end":963,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274667,"byte_end":274678,"line_start":977,"line_end":977,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274933,"byte_end":274946,"line_start":986,"line_end":986,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":275223,"byte_end":275240,"line_start":995,"line_end":995,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":275550,"byte_end":275561,"line_start":1005,"line_end":1005,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278863,"byte_end":278868,"line_start":104,"line_end":104,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280350,"byte_end":280355,"line_start":160,"line_end":160,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280467,"byte_end":280472,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280587,"byte_end":280592,"line_start":172,"line_end":172,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280708,"byte_end":280713,"line_start":178,"line_end":178,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280831,"byte_end":280836,"line_start":184,"line_end":184,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280957,"byte_end":280962,"line_start":190,"line_end":190,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281077,"byte_end":281082,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281189,"byte_end":281194,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281281,"byte_end":281286,"line_start":208,"line_end":208,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281440,"byte_end":281445,"line_start":214,"line_end":214,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281572,"byte_end":281577,"line_start":223,"line_end":223,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281602,"byte_end":281607,"line_start":225,"line_end":225,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281725,"byte_end":281730,"line_start":231,"line_end":231,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281845,"byte_end":281850,"line_start":237,"line_end":237,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":282111,"byte_end":282116,"line_start":251,"line_end":251,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":283561,"byte_end":283566,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284762,"byte_end":284770,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":285865,"byte_end":285873,"line_start":81,"line_end":81,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286013,"byte_end":286021,"line_start":87,"line_end":87,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286140,"byte_end":286148,"line_start":93,"line_end":93,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286173,"byte_end":286181,"line_start":95,"line_end":95,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286302,"byte_end":286310,"line_start":101,"line_end":101,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286438,"byte_end":286446,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286711,"byte_end":286719,"line_start":121,"line_end":121,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":287384,"byte_end":287392,"line_start":150,"line_end":150,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290943,"byte_end":290949,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292795,"byte_end":292805,"line_start":168,"line_end":168,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293247,"byte_end":293254,"line_start":188,"line_end":188,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293681,"byte_end":293688,"line_start":208,"line_end":208,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":294117,"byte_end":294123,"line_start":228,"line_end":228,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296164,"byte_end":296172,"line_start":285,"line_end":285,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":297726,"byte_end":297737,"line_start":343,"line_end":343,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299533,"byte_end":299536,"line_start":421,"line_end":421,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":301907,"byte_end":301913,"line_start":511,"line_end":511,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302048,"byte_end":302058,"line_start":517,"line_end":517,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302193,"byte_end":302200,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302335,"byte_end":302342,"line_start":529,"line_end":529,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302477,"byte_end":302483,"line_start":535,"line_end":535,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302618,"byte_end":302626,"line_start":541,"line_end":541,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302761,"byte_end":302768,"line_start":547,"line_end":547,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302976,"byte_end":302987,"line_start":554,"line_end":554,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303233,"byte_end":303236,"line_start":567,"line_end":567,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":320633,"byte_end":320638,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4410},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":321207,"byte_end":321212,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324333,"byte_end":324344,"line_start":84,"line_end":84,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4454},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":326994,"byte_end":327005,"line_start":168,"line_end":168,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331759,"byte_end":331764,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4561}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":333480,"byte_end":333484,"line_start":159,"line_end":159,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4562},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":333926,"byte_end":333931,"line_start":179,"line_end":179,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":335717,"byte_end":335721,"line_start":214,"line_end":214,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":344002,"byte_end":344006,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4754},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":344166,"byte_end":344170,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4755}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":345655,"byte_end":345664,"line_start":307,"line_end":307,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4757},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":345987,"byte_end":345996,"line_start":321,"line_end":321,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4760},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":346628,"byte_end":346635,"line_start":344,"line_end":344,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4763},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":347274,"byte_end":347287,"line_start":366,"line_end":366,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4766},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":347893,"byte_end":347903,"line_start":386,"line_end":386,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4767},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":348864,"byte_end":348873,"line_start":415,"line_end":415,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349115,"byte_end":349124,"line_start":426,"line_end":426,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349375,"byte_end":349384,"line_start":437,"line_end":437,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349726,"byte_end":349735,"line_start":451,"line_end":451,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349943,"byte_end":349951,"line_start":459,"line_end":459,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4777},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":350120,"byte_end":350128,"line_start":467,"line_end":467,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":350892,"byte_end":350902,"line_start":486,"line_end":486,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":351305,"byte_end":351320,"line_start":502,"line_end":502,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4781},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":351738,"byte_end":351753,"line_start":519,"line_end":519,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4783}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":352614,"byte_end":352627,"line_start":543,"line_end":543,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4785},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353173,"byte_end":353182,"line_start":560,"line_end":560,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4786},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353545,"byte_end":353554,"line_start":574,"line_end":574,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353732,"byte_end":353741,"line_start":582,"line_end":582,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354049,"byte_end":354058,"line_start":593,"line_end":593,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354569,"byte_end":354582,"line_start":613,"line_end":613,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354879,"byte_end":354882,"line_start":625,"line_end":625,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4793},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355357,"byte_end":355366,"line_start":646,"line_end":646,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355579,"byte_end":355588,"line_start":654,"line_end":654,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355896,"byte_end":355903,"line_start":664,"line_end":664,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":356308,"byte_end":356321,"line_start":677,"line_end":677,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":356593,"byte_end":356603,"line_start":686,"line_end":686,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357357,"byte_end":357366,"line_start":706,"line_end":706,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357506,"byte_end":357515,"line_start":712,"line_end":712,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357727,"byte_end":357735,"line_start":720,"line_end":720,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357895,"byte_end":357910,"line_start":726,"line_end":726,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358092,"byte_end":358105,"line_start":733,"line_end":733,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358288,"byte_end":358297,"line_start":740,"line_end":740,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358508,"byte_end":358517,"line_start":748,"line_end":748,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358728,"byte_end":358737,"line_start":756,"line_end":756,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358883,"byte_end":358892,"line_start":762,"line_end":762,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359025,"byte_end":359037,"line_start":768,"line_end":768,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359170,"byte_end":359180,"line_start":774,"line_end":774,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359517,"byte_end":359526,"line_start":786,"line_end":786,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359814,"byte_end":359827,"line_start":796,"line_end":796,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":360095,"byte_end":360098,"line_start":805,"line_end":805,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":360982,"byte_end":360986,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361920,"byte_end":361924,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":362500,"byte_end":362511,"line_start":84,"line_end":84,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363345,"byte_end":363358,"line_start":118,"line_end":118,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363430,"byte_end":363443,"line_start":124,"line_end":124,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366562,"byte_end":366566,"line_start":230,"line_end":230,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4865},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":367109,"byte_end":367124,"line_start":247,"line_end":247,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4867}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":368019,"byte_end":368049,"line_start":276,"line_end":276,"column_start":20,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4868},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":368592,"byte_end":368621,"line_start":295,"line_end":295,"column_start":20,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4869},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":369099,"byte_end":369110,"line_start":311,"line_end":311,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4871},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":369630,"byte_end":369637,"line_start":330,"line_end":330,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4872},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":370024,"byte_end":370028,"line_start":347,"line_end":347,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372242,"byte_end":372246,"line_start":421,"line_end":421,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372434,"byte_end":372445,"line_start":428,"line_end":428,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372626,"byte_end":372639,"line_start":435,"line_end":435,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":373079,"byte_end":373094,"line_start":449,"line_end":449,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":374219,"byte_end":374249,"line_start":475,"line_end":475,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376037,"byte_end":376044,"line_start":518,"line_end":518,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376263,"byte_end":376292,"line_start":526,"line_end":526,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376552,"byte_end":376562,"line_start":535,"line_end":535,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":383265,"byte_end":383276,"line_start":170,"line_end":170,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":387417,"byte_end":387423,"line_start":270,"line_end":270,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":388008,"byte_end":388023,"line_start":281,"line_end":281,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401778,"byte_end":401789,"line_start":205,"line_end":205,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":403180,"byte_end":403181,"line_start":248,"line_end":248,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405700,"byte_end":405710,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410323,"byte_end":410333,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411495,"byte_end":411505,"line_start":245,"line_end":245,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411706,"byte_end":411716,"line_start":256,"line_end":256,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411921,"byte_end":411931,"line_start":267,"line_end":267,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":412128,"byte_end":412138,"line_start":275,"line_end":275,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":412459,"byte_end":412469,"line_start":286,"line_end":286,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413086,"byte_end":413096,"line_start":315,"line_end":315,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413466,"byte_end":413471,"line_start":330,"line_end":330,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414058,"byte_end":414066,"line_start":350,"line_end":350,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414632,"byte_end":414641,"line_start":370,"line_end":370,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415160,"byte_end":415168,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415701,"byte_end":415705,"line_start":412,"line_end":412,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415897,"byte_end":415901,"line_start":422,"line_end":422,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416045,"byte_end":416056,"line_start":430,"line_end":430,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416586,"byte_end":416593,"line_start":451,"line_end":451,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416741,"byte_end":416755,"line_start":459,"line_end":459,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417202,"byte_end":417206,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418772,"byte_end":418782,"line_start":529,"line_end":529,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418935,"byte_end":418945,"line_start":537,"line_end":537,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419100,"byte_end":419110,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420235,"byte_end":420245,"line_start":576,"line_end":576,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":423244,"byte_end":423254,"line_start":674,"line_end":674,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":423459,"byte_end":423463,"line_start":684,"line_end":684,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433056,"byte_end":433057,"line_start":119,"line_end":119,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433527,"byte_end":433537,"line_start":137,"line_end":137,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4908},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433807,"byte_end":433816,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437545,"byte_end":437546,"line_start":106,"line_end":106,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/../gen_helper.rs","byte_start":557380,"byte_end":557384,"line_start":98,"line_end":98,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560565,"byte_end":560575,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560748,"byte_end":560758,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560878,"byte_end":560888,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":25364,"byte_end":25379,"line_start":714,"line_end":714,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10410,"byte_end":10417,"line_start":275,"line_end":275,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":10467,"byte_end":10472,"line_start":281,"line_end":281,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":49}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14948,"byte_end":14954,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":972}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":14992,"byte_end":14997,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1031}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15007,"byte_end":15017,"line_start":385,"line_end":385,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1056}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15180,"byte_end":15191,"line_start":392,"line_end":392,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1304}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":15257,"byte_end":15264,"line_start":395,"line_end":395,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1330}},{"kind":"Mod","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":16558,"byte_end":16563,"line_start":431,"line_end":431,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":1343}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/token.rs","byte_start":96523,"byte_end":96528,"line_start":640,"line_end":640,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":66}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":103863,"byte_end":103872,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":110863,"byte_end":110867,"line_start":336,"line_end":336,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":111963,"byte_end":111964,"line_start":372,"line_end":372,"column_start":33,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":127},"to":{"krate":0,"index":120}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":112948,"byte_end":112957,"line_start":413,"line_end":413,"column_start":10,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":116717,"byte_end":116726,"line_start":527,"line_end":527,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3466},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":117140,"byte_end":117148,"line_start":540,"line_end":540,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3502},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/attr.rs","byte_start":117402,"byte_end":117415,"line_start":549,"line_end":549,"column_start":23,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3508},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":119646,"byte_end":119652,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":122486,"byte_end":122493,"line_start":168,"line_end":168,"column_start":20,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3537},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":123221,"byte_end":123232,"line_start":193,"line_end":193,"column_start":20,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3559},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":123642,"byte_end":123655,"line_start":207,"line_end":207,"column_start":20,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124068,"byte_end":124073,"line_start":221,"line_end":221,"column_start":10,"column_end":15},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":124905,"byte_end":124915,"line_start":251,"line_end":251,"column_start":20,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3585},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127359,"byte_end":127366,"line_start":327,"line_end":327,"column_start":23,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3537},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127758,"byte_end":127769,"line_start":339,"line_end":339,"column_start":23,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3559},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":127981,"byte_end":127994,"line_start":347,"line_end":347,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3564},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128208,"byte_end":128213,"line_start":355,"line_end":355,"column_start":23,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3571},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128604,"byte_end":128613,"line_start":367,"line_end":367,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3599},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128751,"byte_end":128759,"line_start":373,"line_end":373,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3603},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/data.rs","byte_start":128900,"byte_end":128913,"line_start":379,"line_end":379,"column_start":23,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3607},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":148544,"byte_end":148548,"line_start":560,"line_end":560,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":151871,"byte_end":151876,"line_start":638,"line_end":638,"column_start":22,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":164440,"byte_end":164444,"line_start":1060,"line_end":1060,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":181704,"byte_end":181711,"line_start":1618,"line_end":1618,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3877},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":182808,"byte_end":182817,"line_start":1663,"line_end":1663,"column_start":20,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3990},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":201213,"byte_end":201221,"line_start":2280,"line_end":2280,"column_start":20,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3956},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":218871,"byte_end":218879,"line_start":2874,"line_end":2874,"column_start":23,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3849},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":220905,"byte_end":220915,"line_start":2933,"line_end":2933,"column_start":23,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3864},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221180,"byte_end":221189,"line_start":2942,"line_end":2942,"column_start":23,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3871},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221412,"byte_end":221419,"line_start":2950,"line_end":2950,"column_start":23,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3877},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":221602,"byte_end":221610,"line_start":2957,"line_end":2957,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3882},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229207,"byte_end":229213,"line_start":3181,"line_end":3181,"column_start":23,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4018},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229482,"byte_end":229487,"line_start":3190,"line_end":3190,"column_start":23,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4027},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":229723,"byte_end":229732,"line_start":3198,"line_end":3198,"column_start":23,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3945},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":230481,"byte_end":230489,"line_start":3221,"line_end":3221,"column_start":23,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3956},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":233326,"byte_end":233335,"line_start":3311,"line_end":3311,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3990},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/expr.rs","byte_start":233868,"byte_end":233880,"line_start":3329,"line_end":3329,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4012},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":244962,"byte_end":244970,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248173,"byte_end":248183,"line_start":165,"line_end":165,"column_start":23,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":342},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":248672,"byte_end":248685,"line_start":184,"line_end":184,"column_start":23,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249175,"byte_end":249184,"line_start":203,"line_end":203,"column_start":23,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":249674,"byte_end":249686,"line_start":222,"line_end":222,"column_start":23,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250180,"byte_end":250191,"line_start":241,"line_end":241,"column_start":23,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":250685,"byte_end":250699,"line_start":260,"line_end":260,"column_start":23,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":252251,"byte_end":252259,"line_start":305,"line_end":305,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253255,"byte_end":253267,"line_start":338,"line_end":338,"column_start":10,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":253974,"byte_end":253985,"line_start":362,"line_end":362,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":254228,"byte_end":254237,"line_start":373,"line_end":373,"column_start":22,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4081},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":257781,"byte_end":257789,"line_start":492,"line_end":492,"column_start":20,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4054},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":259187,"byte_end":259199,"line_start":528,"line_end":528,"column_start":20,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4069},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":259574,"byte_end":259585,"line_start":542,"line_end":542,"column_start":20,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4090},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":260221,"byte_end":260235,"line_start":564,"line_end":564,"column_start":20,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4130},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":260746,"byte_end":260755,"line_start":583,"line_end":583,"column_start":20,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4081},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":261643,"byte_end":261657,"line_start":612,"line_end":612,"column_start":20,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4143},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":262158,"byte_end":262168,"line_start":629,"line_end":629,"column_start":20,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4154},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":263168,"byte_end":263186,"line_start":657,"line_end":657,"column_start":20,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4161},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":263494,"byte_end":263504,"line_start":669,"line_end":669,"column_start":20,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4097},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":264476,"byte_end":264487,"line_start":699,"line_end":699,"column_start":20,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4170},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":264885,"byte_end":264899,"line_start":714,"line_end":714,"column_start":20,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4181},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":266185,"byte_end":266193,"line_start":756,"line_end":756,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4054},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":267606,"byte_end":267618,"line_start":793,"line_end":793,"column_start":27,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4109},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":269970,"byte_end":269982,"line_start":848,"line_end":848,"column_start":27,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4116},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":271943,"byte_end":271952,"line_start":896,"line_end":896,"column_start":27,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4123},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272221,"byte_end":272235,"line_start":905,"line_end":905,"column_start":23,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4130},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272510,"byte_end":272521,"line_start":914,"line_end":914,"column_start":23,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4090},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":272882,"byte_end":272891,"line_start":925,"line_end":925,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4081},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":273418,"byte_end":273428,"line_start":940,"line_end":940,"column_start":23,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4154},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":273896,"byte_end":273914,"line_start":954,"line_end":954,"column_start":23,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4161},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274167,"byte_end":274177,"line_start":963,"line_end":963,"column_start":23,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4097},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274667,"byte_end":274678,"line_start":977,"line_end":977,"column_start":23,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4170},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":274933,"byte_end":274946,"line_start":986,"line_end":986,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4193},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":275223,"byte_end":275240,"line_start":995,"line_end":995,"column_start":23,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4200},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/generics.rs","byte_start":275550,"byte_end":275561,"line_start":1005,"line_end":1005,"column_start":23,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4206},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":278863,"byte_end":278868,"line_start":104,"line_end":104,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280350,"byte_end":280355,"line_start":160,"line_end":160,"column_start":28,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280467,"byte_end":280472,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280587,"byte_end":280592,"line_start":172,"line_end":172,"column_start":29,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280708,"byte_end":280713,"line_start":178,"line_end":178,"column_start":30,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280831,"byte_end":280836,"line_start":184,"line_end":184,"column_start":30,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":280957,"byte_end":280962,"line_start":190,"line_end":190,"column_start":33,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281077,"byte_end":281082,"line_start":196,"line_end":196,"column_start":23,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281189,"byte_end":281194,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281281,"byte_end":281286,"line_start":208,"line_end":208,"column_start":18,"column_end":23},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281440,"byte_end":281445,"line_start":214,"line_end":214,"column_start":34,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281572,"byte_end":281577,"line_start":223,"line_end":223,"column_start":13,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281602,"byte_end":281607,"line_start":225,"line_end":225,"column_start":21,"column_end":26},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281725,"byte_end":281730,"line_start":231,"line_end":231,"column_start":14,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":281845,"byte_end":281850,"line_start":237,"line_end":237,"column_start":15,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4234},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":282111,"byte_end":282116,"line_start":251,"line_end":251,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4234},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ident.rs","byte_start":283561,"byte_end":283566,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4234},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":284762,"byte_end":284770,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":285865,"byte_end":285873,"line_start":81,"line_end":81,"column_start":18,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286013,"byte_end":286021,"line_start":87,"line_end":87,"column_start":20,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286140,"byte_end":286148,"line_start":93,"line_end":93,"column_start":13,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":1765}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286173,"byte_end":286181,"line_start":95,"line_end":95,"column_start":21,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":1797}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286302,"byte_end":286310,"line_start":101,"line_end":101,"column_start":14,"column_end":22},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":1786}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286438,"byte_end":286446,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4241},"to":{"krate":2,"index":6743}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":286711,"byte_end":286719,"line_start":121,"line_end":121,"column_start":20,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4241},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lifetime.rs","byte_start":287384,"byte_end":287392,"line_start":150,"line_end":150,"column_start":23,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4241},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":290943,"byte_end":290949,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":292795,"byte_end":292805,"line_start":168,"line_end":168,"column_start":6,"column_end":16},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293247,"byte_end":293254,"line_start":188,"line_end":188,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":293681,"byte_end":293688,"line_start":208,"line_end":208,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":294117,"byte_end":294123,"line_start":228,"line_end":228,"column_start":6,"column_end":12},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":296164,"byte_end":296172,"line_start":285,"line_end":285,"column_start":6,"column_end":14},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":297726,"byte_end":297737,"line_start":343,"line_end":343,"column_start":6,"column_end":17},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":299533,"byte_end":299536,"line_start":421,"line_end":421,"column_start":20,"column_end":23},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4262},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":301907,"byte_end":301913,"line_start":511,"line_end":511,"column_start":23,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4289},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302048,"byte_end":302058,"line_start":517,"line_end":517,"column_start":23,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4293},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302193,"byte_end":302200,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4297},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302335,"byte_end":302342,"line_start":529,"line_end":529,"column_start":23,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4301},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302477,"byte_end":302483,"line_start":535,"line_end":535,"column_start":23,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4305},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302618,"byte_end":302626,"line_start":541,"line_end":541,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4309},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302761,"byte_end":302768,"line_start":547,"line_end":547,"column_start":23,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4313},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":302976,"byte_end":302987,"line_start":554,"line_end":554,"column_start":23,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4318},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lit.rs","byte_start":303233,"byte_end":303236,"line_start":567,"line_end":567,"column_start":10,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":320633,"byte_end":320638,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4391},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/mac.rs","byte_start":321207,"byte_end":321212,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4391},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":324333,"byte_end":324344,"line_start":84,"line_end":84,"column_start":20,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4411},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/derive.rs","byte_start":326994,"byte_end":327005,"line_start":168,"line_end":168,"column_start":23,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4411},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":331759,"byte_end":331764,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":333480,"byte_end":333484,"line_start":159,"line_end":159,"column_start":20,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4548},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":333926,"byte_end":333931,"line_start":179,"line_end":179,"column_start":23,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4460},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/op.rs","byte_start":335717,"byte_end":335721,"line_start":214,"line_end":214,"column_start":23,"column_end":27},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4548},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":344002,"byte_end":344006,"line_start":255,"line_end":255,"column_start":20,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4593},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":344166,"byte_end":344170,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":345655,"byte_end":345664,"line_start":307,"line_end":307,"column_start":20,"column_end":29},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4641},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":345987,"byte_end":345996,"line_start":321,"line_end":321,"column_start":20,"column_end":29},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":346628,"byte_end":346635,"line_start":344,"line_end":344,"column_start":20,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4653},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":347274,"byte_end":347287,"line_start":366,"line_end":366,"column_start":20,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4660},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":347893,"byte_end":347903,"line_start":386,"line_end":386,"column_start":20,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4667},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":348864,"byte_end":348873,"line_start":415,"line_end":415,"column_start":20,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4678},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349115,"byte_end":349124,"line_start":426,"line_end":426,"column_start":20,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4712},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349375,"byte_end":349384,"line_start":437,"line_end":437,"column_start":20,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4682},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349726,"byte_end":349735,"line_start":451,"line_end":451,"column_start":20,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4716},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":349943,"byte_end":349951,"line_start":459,"line_end":459,"column_start":20,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4687},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":350120,"byte_end":350128,"line_start":467,"line_end":467,"column_start":10,"column_end":18},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":350892,"byte_end":350902,"line_start":486,"line_end":486,"column_start":20,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4745},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":351305,"byte_end":351320,"line_start":502,"line_end":502,"column_start":20,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4692},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":351738,"byte_end":351753,"line_start":519,"line_end":519,"column_start":10,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":352614,"byte_end":352627,"line_start":543,"line_end":543,"column_start":20,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4697},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353173,"byte_end":353182,"line_start":560,"line_end":560,"column_start":20,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4707},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353545,"byte_end":353554,"line_start":574,"line_end":574,"column_start":20,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4702},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":353732,"byte_end":353741,"line_start":582,"line_end":582,"column_start":10,"column_end":19},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354049,"byte_end":354058,"line_start":593,"line_end":593,"column_start":20,"column_end":29},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4731},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354569,"byte_end":354582,"line_start":613,"line_end":613,"column_start":20,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4736},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":354879,"byte_end":354882,"line_start":625,"line_end":625,"column_start":20,"column_end":23},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4726},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355357,"byte_end":355366,"line_start":646,"line_end":646,"column_start":23,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4641},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355579,"byte_end":355588,"line_start":654,"line_end":654,"column_start":23,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4646},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":355896,"byte_end":355903,"line_start":664,"line_end":664,"column_start":23,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4653},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":356308,"byte_end":356321,"line_start":677,"line_end":677,"column_start":23,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4660},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":356593,"byte_end":356603,"line_start":686,"line_end":686,"column_start":23,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4667},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357357,"byte_end":357366,"line_start":706,"line_end":706,"column_start":23,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4678},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357506,"byte_end":357515,"line_start":712,"line_end":712,"column_start":23,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4682},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357727,"byte_end":357735,"line_start":720,"line_end":720,"column_start":23,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4687},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":357895,"byte_end":357910,"line_start":726,"line_end":726,"column_start":23,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4692},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358092,"byte_end":358105,"line_start":733,"line_end":733,"column_start":23,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4697},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358288,"byte_end":358297,"line_start":740,"line_end":740,"column_start":23,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4707},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358508,"byte_end":358517,"line_start":748,"line_end":748,"column_start":23,"column_end":32},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4702},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358728,"byte_end":358737,"line_start":756,"line_end":756,"column_start":23,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4712},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":358883,"byte_end":358892,"line_start":762,"line_end":762,"column_start":23,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4716},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359025,"byte_end":359037,"line_start":768,"line_end":768,"column_start":23,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4720},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359170,"byte_end":359180,"line_start":774,"line_end":774,"column_start":23,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4745},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359517,"byte_end":359526,"line_start":786,"line_end":786,"column_start":23,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4731},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":359814,"byte_end":359827,"line_start":796,"line_end":796,"column_start":23,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4736},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/ty.rs","byte_start":360095,"byte_end":360098,"line_start":805,"line_end":805,"column_start":23,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4726},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":360982,"byte_end":360986,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":361920,"byte_end":361924,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4794},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":362500,"byte_end":362511,"line_start":84,"line_end":84,"column_start":21,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4807},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363345,"byte_end":363358,"line_start":118,"line_end":118,"column_start":18,"column_end":31},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":363430,"byte_end":363443,"line_start":124,"line_end":124,"column_start":6,"column_end":19},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":366562,"byte_end":366566,"line_start":230,"line_end":230,"column_start":20,"column_end":24},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4794},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":367109,"byte_end":367124,"line_start":247,"line_end":247,"column_start":20,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4823},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":368019,"byte_end":368049,"line_start":276,"line_end":276,"column_start":20,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4838},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":368592,"byte_end":368621,"line_start":295,"line_end":295,"column_start":20,"column_end":49},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4851},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":369099,"byte_end":369110,"line_start":311,"line_end":311,"column_start":20,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4807},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":369630,"byte_end":369637,"line_start":330,"line_end":330,"column_start":20,"column_end":27},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4845},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":370024,"byte_end":370028,"line_start":347,"line_end":347,"column_start":10,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372242,"byte_end":372246,"line_start":421,"line_end":421,"column_start":23,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4794},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372434,"byte_end":372445,"line_start":428,"line_end":428,"column_start":23,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4807},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":372626,"byte_end":372639,"line_start":435,"line_end":435,"column_start":23,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4812},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":373079,"byte_end":373094,"line_start":449,"line_end":449,"column_start":23,"column_end":38},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4823},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":374219,"byte_end":374249,"line_start":475,"line_end":475,"column_start":23,"column_end":53},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4838},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376037,"byte_end":376044,"line_start":518,"line_end":518,"column_start":23,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4845},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376263,"byte_end":376292,"line_start":526,"line_end":526,"column_start":23,"column_end":52},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4851},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/path.rs","byte_start":376552,"byte_end":376562,"line_start":535,"line_end":535,"column_start":27,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4799},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":383265,"byte_end":383276,"line_start":170,"line_end":170,"column_start":6,"column_end":17},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":387417,"byte_end":387423,"line_start":270,"line_end":270,"column_start":10,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/buffer.rs","byte_start":388008,"byte_end":388023,"line_start":281,"line_end":281,"column_start":30,"column_end":45},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1014},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":400634,"byte_end":400639,"line_start":168,"line_end":168,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":401778,"byte_end":401789,"line_start":205,"line_end":205,"column_start":29,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":16,"index":399},"to":{"krate":0,"index":1040}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":402286,"byte_end":402291,"line_start":222,"line_end":222,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/synom.rs","byte_start":403180,"byte_end":403181,"line_start":248,"line_end":248,"column_start":23,"column_end":24},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1052},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":405700,"byte_end":405710,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":410323,"byte_end":410333,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411495,"byte_end":411505,"line_start":245,"line_end":245,"column_start":32,"column_end":42},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":5183}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411706,"byte_end":411716,"line_start":256,"line_end":256,"column_start":26,"column_end":36},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":5196}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":411921,"byte_end":411931,"line_start":267,"line_end":267,"column_start":41,"column_end":51},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":5183}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":412128,"byte_end":412138,"line_start":275,"line_end":275,"column_start":35,"column_end":45},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":5196}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":412459,"byte_end":412469,"line_start":286,"line_end":286,"column_start":29,"column_end":39},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413086,"byte_end":413096,"line_start":315,"line_end":315,"column_start":24,"column_end":34},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":413466,"byte_end":413471,"line_start":330,"line_end":330,"column_start":29,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1143},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414058,"byte_end":414066,"line_start":350,"line_end":350,"column_start":29,"column_end":37},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1155},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":414632,"byte_end":414641,"line_start":370,"line_end":370,"column_start":25,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415160,"byte_end":415168,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415701,"byte_end":415705,"line_start":412,"line_end":412,"column_start":13,"column_end":17},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":415897,"byte_end":415901,"line_start":422,"line_end":422,"column_start":26,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416045,"byte_end":416056,"line_start":430,"line_end":430,"column_start":29,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416586,"byte_end":416593,"line_start":451,"line_end":451,"column_start":26,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":416741,"byte_end":416755,"line_start":459,"line_end":459,"column_start":29,"column_end":43},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1216},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":417202,"byte_end":417206,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418772,"byte_end":418782,"line_start":529,"line_end":529,"column_start":29,"column_end":39},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":2312}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":418935,"byte_end":418945,"line_start":537,"line_end":537,"column_start":32,"column_end":42},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4900},"to":{"krate":2,"index":2316}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":419100,"byte_end":419110,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":420235,"byte_end":420245,"line_start":576,"line_end":576,"column_start":12,"column_end":22},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":423244,"byte_end":423254,"line_start":674,"line_end":674,"column_start":29,"column_end":39},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4900},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/punctuated.rs","byte_start":423459,"byte_end":423463,"line_start":684,"line_end":684,"column_start":29,"column_end":33},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1233},"to":{"krate":19,"index":93}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":432930,"byte_end":432935,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433056,"byte_end":433057,"line_start":119,"line_end":119,"column_start":24,"column_end":25},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1319},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433527,"byte_end":433537,"line_start":137,"line_end":137,"column_start":27,"column_end":37},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4900},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/parse_quote.rs","byte_start":433807,"byte_end":433816,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3466},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/spanned.rs","byte_start":437545,"byte_end":437546,"line_start":106,"line_end":106,"column_start":21,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":1337}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/gen/../gen_helper.rs","byte_start":557380,"byte_end":557384,"line_start":98,"line_end":98,"column_start":20,"column_end":24},"kind":{"Impl":{"id":219}},"from":{"krate":16,"index":404},"to":{"krate":0,"index":1719}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560565,"byte_end":560575,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4910},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560748,"byte_end":560758,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4910},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/error.rs","byte_start":560878,"byte_end":560888,"line_start":54,"line_end":54,"column_start":6,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.13.1/src/lib.rs","byte_start":25364,"byte_end":25379,"line_start":714,"line_end":714,"column_start":33,"column_end":48},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1773},"to":{"krate":19,"index":93}}]}