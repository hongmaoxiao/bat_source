{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5","program":"/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","thread_local","/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=7603a37f8e8a9922","-C","extra-filename=-7603a37f8e8a9922","--out-dir","/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","-L","dependency=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps","--extern","lazy_static=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/liblazy_static-1e64ce6c1a1df696.rmeta","--extern","unreachable=/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libunreachable-0e11d16508cd85bd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/xhm/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/xhm/source/backend/rust/bat/target/rls/debug/deps/libthread_local-7603a37f8e8a9922.rmeta"},"prelude":{"crate_id":{"name":"thread_local","disambiguator":[7814367916743058160,9867972282740201410]},"crate_root":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src","external_crates":[{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17709530074661319104,12336107577347767734]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7138156953393190069,11167026927698897809]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11939350525270529775,5037047709352975340]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7424844044863599670,8838585625468081887]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4100565041195182675,5566087110101365955]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12006298212829472042,4483643569962591785]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16083605182766867675,18153965418074129170]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13622714777497736699,12208407265214949534]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7290380455030431949,16719885876051447607]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[447808001145654106,10581376888684971677]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13533970680996139336,18250961867226035502]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[212669238320550075,14725093603103672492]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[17611450619260455171,13049759995292817799]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[2915321326152136006,11103866167427651478]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[16327418871979137000,16753155218778980611]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":16,"id":{"name":"unreachable","disambiguator":[10862283168191773754,7549199126797749789]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":17,"id":{"name":"void","disambiguator":[18031968170963270689,752102427549154182]}},{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[7316474975789926838,18003448177704943701]}}],"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":333,"byte_end":24791,"line_start":8,"line_end":757,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":333,"byte_end":24791,"line_start":8,"line_end":757,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":215},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":44},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":114},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":128},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":184}],"decl_id":null,"docs":" Per-object thread-local storage","sig":null,"attributes":[{"value":"/ Per-object thread-local storage","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ThreadLocal` type which allows a separate copy of","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":373,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ an object to be used for each thread. This allows for per-object","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":454,"byte_end":522,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ thread-local storage, unlike the standard library's `thread_local!` macro","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":523,"byte_end":600,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ which only allows static thread-local storage.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":601,"byte_end":651,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":652,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Per-thread objects are not destroyed when a thread exits. Instead, objects","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":656,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ are only destroyed when the `ThreadLocal` containing them is destroyed.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":735,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also iterate over the thread-local values of all thread in a","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":815,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":888,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ only be done if you have mutable access to the `ThreadLocal` object, which","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ guarantees that you are the only thread currently accessing it.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1047,"byte_end":1114,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A `CachedThreadLocal` type is also provided which wraps a `ThreadLocal` but","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ also uses a special fast path for the first thread that writes into it. The","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1199,"byte_end":1278,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ fast path has very low overhead (<1ns per access) while keeping the same","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1279,"byte_end":1355,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ performance as `ThreadLocal` for other threads.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1356,"byte_end":1407,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1408,"byte_end":1411,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that since thread IDs are recycled when a thread exits, it is possible","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1412,"byte_end":1491,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ for one thread to retrieve the object of another thread. Since this can only","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1492,"byte_end":1572,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ occur after a thread has exited this does not lead to any race conditions.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1573,"byte_end":1651,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1652,"byte_end":1655,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1656,"byte_end":1670,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1671,"byte_end":1674,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Basic usage of `ThreadLocal`:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1675,"byte_end":1708,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1709,"byte_end":1712,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1713,"byte_end":1724,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1725,"byte_end":1759,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let tls: ThreadLocal<u32> = ThreadLocal::new();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1760,"byte_end":1811,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(tls.get(), None);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1812,"byte_end":1844,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tls.get_or(|| Box::new(5)), &5);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1845,"byte_end":1892,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(tls.get(), Some(&5));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1893,"byte_end":1929,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1930,"byte_end":1937,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1938,"byte_end":1941,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Combining thread-local values into a single result:","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1942,"byte_end":1997,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":1998,"byte_end":2001,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2002,"byte_end":2013,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2014,"byte_end":2048,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2049,"byte_end":2072,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2073,"byte_end":2097,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/ use std::thread;","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2098,"byte_end":2118,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2119,"byte_end":2122,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let tls = Arc::new(ThreadLocal::new());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2123,"byte_end":2166,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2167,"byte_end":2170,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Create a bunch of threads to do stuff","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2171,"byte_end":2215,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2216,"byte_end":2235,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/     let tls2 = tls.clone();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2236,"byte_end":2267,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2268,"byte_end":2299,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/         // Increment a counter to count some event...","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2300,"byte_end":2357,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/         let cell = tls2.get_or(|| Box::new(Cell::new(0)));","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2358,"byte_end":2420,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/         cell.set(cell.get() + 1);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2421,"byte_end":2458,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/     }).join().unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2459,"byte_end":2486,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2487,"byte_end":2492,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2493,"byte_end":2496,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Once all threads are done, collect the counter values and return the","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2497,"byte_end":2572,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ // sum of all thread-local counter values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2573,"byte_end":2619,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ let tls = Arc::try_unwrap(tls).unwrap();","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2620,"byte_end":2664,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ let total = tls.into_iter().fold(0, |x, y| x + y.get());","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2665,"byte_end":2725,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(total, 5);","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2726,"byte_end":2751,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2752,"byte_end":2759,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":2761,"byte_end":2783,"line_start":71,"line_end":71,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":3282,"byte_end":3293,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"ThreadLocal","qualname":"::ThreadLocal","value":"ThreadLocal {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Thread-local variable wrapper","sig":null,"attributes":[{"value":"/ Thread-local variable wrapper","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":3170,"byte_end":3203,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":3204,"byte_end":3207,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](index.html) for more.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":3208,"byte_end":3270,"line_start":91,"line_end":91,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5376,"byte_end":5379,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadLocal<T>>::new","value":"pub fn new() -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `ThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5326,"byte_end":5364,"line_start":165,"line_end":165,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5921,"byte_end":5924,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"get","qualname":"<ThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5848,"byte_end":5909,"line_start":183,"line_end":183,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6122,"byte_end":6128,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"get_or","qualname":"<ThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6020,"byte_end":6095,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6100,"byte_end":6110,"line_start":190,"line_end":190,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6516,"byte_end":6526,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<ThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<Box<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6339,"byte_end":6414,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6419,"byte_end":6489,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":6494,"byte_end":6504,"line_start":203,"line_end":203,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10975,"byte_end":10983,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10669,"byte_end":10737,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10742,"byte_end":10745,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10750,"byte_end":10823,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10828,"byte_end":10898,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":10903,"byte_end":10963,"line_start":314,"line_end":314,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11627,"byte_end":11632,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"clear","qualname":"<ThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11272,"byte_end":11346,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11351,"byte_end":11389,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11394,"byte_end":11397,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11402,"byte_end":11475,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11480,"byte_end":11550,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11555,"byte_end":11615,"line_start":332,"line_end":332,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12483,"byte_end":12494,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"get_default","qualname":"<ThreadLocal<T>>::get_default","value":"pub fn get_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12370,"byte_end":12445,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12450,"byte_end":12471,"line_start":366,"line_end":366,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":109},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":13689,"byte_end":13696,"line_start":409,"line_end":409,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Mutable iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":13619,"byte_end":13677,"line_start":408,"line_end":408,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14300,"byte_end":14308,"line_start":431,"line_end":431,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" An iterator that moves out of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `ThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14238,"byte_end":14288,"line_start":430,"line_end":430,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15118,"byte_end":15135,"line_start":457,"line_end":457,"column_start":12,"column_end":29},"name":"CachedThreadLocal","qualname":"::CachedThreadLocal","value":"CachedThreadLocal {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Wrapper around `ThreadLocal` which adds a fast path for a single thread.","sig":null,"attributes":[{"value":"/ Wrapper around `ThreadLocal` which adds a fast path for a single thread.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14788,"byte_end":14864,"line_start":452,"line_end":452,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14865,"byte_end":14868,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ This has the same API as `ThreadLocal`, but will register the first thread","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14869,"byte_end":14947,"line_start":454,"line_end":454,"column_start":1,"column_end":79}},{"value":"/ that sets a value as its owner. All accesses by the owner will go through","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14948,"byte_end":15025,"line_start":455,"line_end":455,"column_start":1,"column_end":78}},{"value":"/ a special fast path which is much faster than the normal `ThreadLocal` path.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15026,"byte_end":15106,"line_start":456,"line_end":456,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15616,"byte_end":15619,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<CachedThreadLocal<T>>::new","value":"pub fn new() -> CachedThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `CachedThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15560,"byte_end":15604,"line_start":473,"line_end":473,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15892,"byte_end":15895,"line_start":483,"line_end":483,"column_start":12,"column_end":15},"name":"get","qualname":"<CachedThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15819,"byte_end":15880,"line_start":482,"line_end":482,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16357,"byte_end":16363,"line_start":498,"line_end":498,"column_start":12,"column_end":18},"name":"get_or","qualname":"<CachedThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16233,"byte_end":16308,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16313,"byte_end":16323,"line_start":496,"line_end":496,"column_start":5,"column_end":15}},{"value":"inline(always)","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16328,"byte_end":16345,"line_start":497,"line_end":497,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16751,"byte_end":16761,"line_start":511,"line_end":511,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<CachedThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<Box<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16574,"byte_end":16649,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16654,"byte_end":16724,"line_start":509,"line_end":509,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":16729,"byte_end":16739,"line_start":510,"line_end":510,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18040,"byte_end":18048,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CachedThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> CachedIterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":17734,"byte_end":17802,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":17807,"byte_end":17810,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":17815,"byte_end":17888,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":17893,"byte_end":17963,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":17968,"byte_end":18028,"line_start":545,"line_end":545,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18610,"byte_end":18615,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"clear","qualname":"<CachedThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18255,"byte_end":18329,"line_start":555,"line_end":555,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18334,"byte_end":18372,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18377,"byte_end":18380,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18385,"byte_end":18458,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18463,"byte_end":18533,"line_start":559,"line_end":559,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18538,"byte_end":18598,"line_start":560,"line_end":560,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19424,"byte_end":19435,"line_start":592,"line_end":592,"column_start":12,"column_end":23},"name":"get_default","qualname":"<CachedThreadLocal<T>>::get_default","value":"pub fn get_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19311,"byte_end":19386,"line_start":590,"line_end":590,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19391,"byte_end":19412,"line_start":591,"line_end":591,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":179},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19791,"byte_end":19804,"line_start":604,"line_end":604,"column_start":10,"column_end":23},"name":"CachedIterMut","qualname":"::CachedIterMut","value":"Chain<OptionIter<&'a mut Box<T>>, IterMut>","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over the contents of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `CachedThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19717,"byte_end":19781,"line_start":603,"line_end":603,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19932,"byte_end":19946,"line_start":607,"line_end":607,"column_start":10,"column_end":24},"name":"CachedIntoIter","qualname":"::CachedIntoIter","value":"Chain<OptionIter<Box<T>>, IntoIter<T>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that moves out of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `CachedThreadLocal`.","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19866,"byte_end":19922,"line_start":606,"line_end":606,"column_start":1,"column_end":57}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":25497,"byte_end":25512,"line_start":19,"line_end":19,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":26277,"byte_end":26285,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":26397,"byte_end":26405,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4366,"byte_end":4377,"line_start":126,"line_end":126,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4420,"byte_end":4431,"line_start":128,"line_end":128,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4542,"byte_end":4553,"line_start":134,"line_end":134,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4786,"byte_end":4796,"line_start":143,"line_end":143,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5305,"byte_end":5316,"line_start":164,"line_end":164,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11731,"byte_end":11742,"line_start":338,"line_end":338,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12349,"byte_end":12360,"line_start":364,"line_end":364,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12617,"byte_end":12628,"line_start":372,"line_end":372,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12821,"byte_end":12832,"line_start":378,"line_end":378,"column_start":52,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12969,"byte_end":12976,"line_start":386,"line_end":386,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":13844,"byte_end":13851,"line_start":414,"line_end":414,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14219,"byte_end":14226,"line_start":428,"line_end":428,"column_start":55,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14424,"byte_end":14432,"line_start":436,"line_end":436,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14772,"byte_end":14780,"line_start":450,"line_end":450,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15342,"byte_end":15359,"line_start":464,"line_end":464,"column_start":40,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15402,"byte_end":15419,"line_start":466,"line_end":466,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15533,"byte_end":15550,"line_start":472,"line_end":472,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18720,"byte_end":18737,"line_start":566,"line_end":566,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19284,"byte_end":19301,"line_start":589,"line_end":589,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19558,"byte_end":19575,"line_start":597,"line_end":597,"column_start":52,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":20044,"byte_end":20061,"line_start":609,"line_end":609,"column_start":52,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":25497,"byte_end":25512,"line_start":19,"line_end":19,"column_start":6,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":26277,"byte_end":26285,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/thread_id.rs","byte_start":26397,"byte_end":26405,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4366,"byte_end":4377,"line_start":126,"line_end":126,"column_start":40,"column_end":51},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4420,"byte_end":4431,"line_start":128,"line_end":128,"column_start":36,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4542,"byte_end":4553,"line_start":134,"line_end":134,"column_start":33,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":4786,"byte_end":4796,"line_start":143,"line_end":143,"column_start":34,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":49},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":5305,"byte_end":5316,"line_start":164,"line_end":164,"column_start":24,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":11731,"byte_end":11742,"line_start":338,"line_end":338,"column_start":41,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12349,"byte_end":12360,"line_start":364,"line_end":364,"column_start":25,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12617,"byte_end":12628,"line_start":372,"line_end":372,"column_start":52,"column_end":63},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12821,"byte_end":12832,"line_start":378,"line_end":378,"column_start":52,"column_end":63},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":3940}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":12969,"byte_end":12976,"line_start":386,"line_end":386,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":13844,"byte_end":13851,"line_start":414,"line_end":414,"column_start":46,"column_end":53},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":109},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14219,"byte_end":14226,"line_start":428,"line_end":428,"column_start":55,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":109},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14424,"byte_end":14432,"line_start":436,"line_end":436,"column_start":37,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":14772,"byte_end":14780,"line_start":450,"line_end":450,"column_start":46,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15342,"byte_end":15359,"line_start":464,"line_end":464,"column_start":40,"column_end":57},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15402,"byte_end":15419,"line_start":466,"line_end":466,"column_start":36,"column_end":53},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":15533,"byte_end":15550,"line_start":472,"line_end":472,"column_start":24,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":18720,"byte_end":18737,"line_start":566,"line_end":566,"column_start":41,"column_end":58},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19284,"byte_end":19301,"line_start":589,"line_end":589,"column_start":25,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":19558,"byte_end":19575,"line_start":597,"line_end":597,"column_start":52,"column_end":69},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/Users/xhm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-0.3.5/src/lib.rs","byte_start":20044,"byte_end":20061,"line_start":609,"line_end":609,"column_start":52,"column_end":69},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":136},"to":{"krate":1,"index":3940}}]}